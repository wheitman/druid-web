import{s as Jd,d as Qf,u as Jf,g as Zf,e as em,r as Zd,x as Ha,y as In,o as tm,n as sa}from"../chunks/scheduler.C3VTXn_k.js";import{S as ep,i as tp,e as We,c as He,a as Dt,d as Ye,o as ge,y as Be,g as Jt,z as Mr,n as zr,l as Pr,s as nt,t as Gn,u as Gr,A as rm,f as it,B as Wt,b as Fn,v as Fr,h as _e,w as qr,j as To,x as jr}from"../chunks/index.BHtGCp6z.js";const am=typeof window<"u"?window:typeof globalThis<"u"?globalThis:global,nm=!0,D1=Object.freeze(Object.defineProperty({__proto__:null,prerender:nm},Symbol.toStringTag,{value:"Module"}));/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Cs=Object.defineProperty,im=Object.getOwnPropertyDescriptor,sm=Object.getOwnPropertyNames,om=Object.prototype.hasOwnProperty,Y=(e,t)=>()=>(e&&(t=e(e=0)),t),Ta=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),ka=(e,t)=>{for(var r in t)Cs(e,r,{get:t[r],enumerable:!0})},um=(e,t,r,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of sm(t))!om.call(e,i)&&i!==r&&Cs(e,i,{get:()=>t[i],enumerable:!(a=im(t,i))||a.enumerable});return e},ta=e=>um(Cs({},"__esModule",{value:!0}),e),Ua,Ar,va,ko,Es,Ts=Y(()=>{Ua=new Map,Ar=[],va=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let a=Ua.get(e);if(a===void 0)Ua.set(e,{backend:t,priority:r});else{if(a.priority>r)return;if(a.priority===r&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=Ar.indexOf(e);i!==-1&&Ar.splice(i,1);for(let s=0;s<Ar.length;s++)if(Ua.get(Ar[s]).priority<=r){Ar.splice(s,0,e);return}Ar.push(e)}return}throw new TypeError("not a valid backend")},ko=async e=>{let t=Ua.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(a){return r||(t.error=`${a}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},Es=async e=>{let t=e.executionProviders||[],r=t.map(d=>typeof d=="string"?d:d.name),a=r.length===0?Ar:r,i,s=[],n=new Set;for(let d of a){let c=await ko(d);typeof c=="string"?s.push({name:d,err:c}):(i||(i=c),i===c&&n.add(d))}if(!i)throw new Error(`no available backend found. ERR: ${s.map(d=>`[${d.name}] ${d.err}`).join(", ")}`);for(let{name:d,err:c}of s)r.includes(d)&&console.warn(`removing requested execution provider "${d}" from session options because it is not available: ${c}`);let u=t.filter(d=>n.has(typeof d=="string"?d:d.name));return[i,new Proxy(e,{get:(d,c)=>c==="executionProviders"?u:Reflect.get(d,c)})]}}),lm=Y(()=>{Ts()}),rp,dm=Y(()=>{rp="1.18.0"}),$i,Qt,ap=Y(()=>{dm(),$i="warning",Qt={wasm:{},webgl:{},webgpu:{},versions:{common:rp},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);$i=e}},get logLevel(){return $i}},Object.defineProperty(Qt,"logLevel",{enumerable:!0})}),Fe,pm=Y(()=>{ap(),Fe=Qt}),np,ip,cm=Y(()=>{np=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let a=r.getContext("2d");if(a!=null){let i,s;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[3]):(i=e.dims[3],s=e.dims[2]);let n=(t==null?void 0:t.format)!==void 0?t.format:"RGB",u=t==null?void 0:t.norm,d,c;u===void 0||u.mean===void 0?d=[255,255,255,255]:typeof u.mean=="number"?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(d[3]=u.mean[3])),u===void 0||u.bias===void 0?c=[0,0,0,0]:typeof u.bias=="number"?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(c[3]=u.bias[3]));let h=s*i,m=0,g=h,w=h*2,p=-1;n==="RGBA"?(m=0,g=h,w=h*2,p=h*3):n==="RGB"?(m=0,g=h,w=h*2):n==="RBG"&&(m=0,w=h,g=h*2);for(let _=0;_<s;_++)for(let C=0;C<i;C++){let E=(e.data[m++]-c[0])*d[0],S=(e.data[g++]-c[1])*d[1],A=(e.data[w++]-c[2])*d[2],O=p===-1?255:(e.data[p++]-c[3])*d[3];a.fillStyle="rgba("+E+","+S+","+A+","+O+")",a.fillRect(C,_,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ip=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),a;if(r!=null){let i,s,n;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[1],n=e.dims[3]):(i=e.dims[3],s=e.dims[2],n=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",d=t==null?void 0:t.norm,c,h;d===void 0||d.mean===void 0?c=[255,255,255,255]:typeof d.mean=="number"?c=[d.mean,d.mean,d.mean,d.mean]:(c=[d.mean[0],d.mean[1],d.mean[2],255],d.mean[3]!==void 0&&(c[3]=d.mean[3])),d===void 0||d.bias===void 0?h=[0,0,0,0]:typeof d.bias=="number"?h=[d.bias,d.bias,d.bias,d.bias]:(h=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(h[3]=d.bias[3]));let m=s*i;if(t!==void 0&&(t.format!==void 0&&n===4&&t.format!=="RGBA"||n===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let g=4,w=0,p=1,_=2,C=3,E=0,S=m,A=m*2,O=-1;u==="RGBA"?(E=0,S=m,A=m*2,O=m*3):u==="RGB"?(E=0,S=m,A=m*2):u==="RBG"&&(E=0,A=m,S=m*2),a=r.createImageData(i,s);for(let R=0;R<s*i;w+=g,p+=g,_+=g,C+=g,R++)a.data[w]=(e.data[E++]-h[0])*c[0],a.data[p]=(e.data[S++]-h[1])*c[1],a.data[_]=(e.data[A++]-h[2])*c[2],a.data[C]=O===-1?255:(e.data[O++]-h[3])*c[3]}else throw new Error("Can not access image data");return a}}),On,sp,op,up,lp,hm=Y(()=>{ks(),On=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:a}=t,i=t.norm??{mean:255,bias:0},s,n;typeof i.mean=="number"?s=[i.mean,i.mean,i.mean,i.mean]:s=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?n=[i.bias,i.bias,i.bias,i.bias]:n=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",d=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",c=r*a,h=d==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),m=4,g=0,w=1,p=2,_=3,C=0,E=c,S=c*2,A=-1;u==="RGB"&&(m=3,g=0,w=1,p=2,_=-1),d==="RGBA"?A=c*3:d==="RBG"?(C=0,S=c,E=c*2):d==="BGR"&&(S=0,E=c,C=c*2);for(let O=0;O<c;O++,g+=m,p+=m,w+=m,_+=m)h[C++]=(e[g]+n[0])/s[0],h[E++]=(e[w]+n[1])/s[1],h[S++]=(e[p]+n[2])/s[2],A!==-1&&_!==-1&&(h[A++]=(e[_]+n[3])/s[3]);return d==="RGBA"?new cr("float32",h,[1,4,r,a]):new cr("float32",h,[1,3,r,a])},sp=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,a=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",n,u=t??{},d=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=h=>h instanceof HTMLCanvasElement||h instanceof OffscreenCanvas?h.getContext("2d"):null;if(r){let h=d();h.width=e.width,h.height=e.height;let m=c(h);if(m!=null){let g=e.height,w=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(g=t.resizedHeight,w=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=g,u.width=w}else u.tensorFormat="RGBA",u.height=g,u.width=w;m.drawImage(e,0,0),n=m.getImageData(0,0,w,g).data}else throw new Error("Can not access image data")}else if(a){let h,m;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(h=t.resizedHeight,m=t.resizedWidth):(h=e.height,m=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=h,u.width=m,t!==void 0){let g=d();g.width=m,g.height=h;let w=c(g);if(w!=null)w.putImageData(e,0,0),n=w.getImageData(0,0,m,h).data;else throw new Error("Can not access image data")}else n=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let h=d();h.width=e.width,h.height=e.height;let m=c(h);if(m!=null){let g=e.height,w=e.width;return m.drawImage(e,0,0,w,g),n=m.getImageData(0,0,w,g).data,u.height=g,u.width=w,On(n,u)}else throw new Error("Can not access image data")}else{if(s)return new Promise((h,m)=>{let g=d(),w=c(g);if(!e||!w)return m();let p=new Image;p.crossOrigin="Anonymous",p.src=e,p.onload=()=>{g.width=p.width,g.height=p.height,w.drawImage(p,0,0,g.width,g.height);let _=w.getImageData(0,0,g.width,g.height);u.height=g.height,u.width=g.width,h(On(_.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(n!==void 0)return On(n,u);throw new Error("Input data provided is not supported - aborted tensor creation")},op=(e,t)=>{let{width:r,height:a,download:i,dispose:s}=t,n=[1,a,r,4];return new cr({location:"texture",type:"float32",texture:e,dims:n,download:i,dispose:s})},up=(e,t)=>{let{dataType:r,dims:a,download:i,dispose:s}=t;return new cr({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:a,download:i,dispose:s})},lp=(e,t,r)=>new cr({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),Zr,en,_i,dp,fm=Y(()=>{Zr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),en=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),_i=!1,dp=()=>{if(!_i){_i=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Zr.set("int64",BigInt64Array),en.set(BigInt64Array,"int64")),t&&(Zr.set("uint64",BigUint64Array),en.set(BigUint64Array,"uint64")),r?(Zr.set("float16",Float16Array),en.set(Float16Array,"float16")):Zr.set("float16",Uint16Array)}}}),pp,cp,mm=Y(()=>{ks(),pp=e=>{let t=1;for(let r=0;r<e.length;r++){let a=e[r];if(typeof a!="number"||!Number.isSafeInteger(a))throw new TypeError(`dims[${r}] must be an integer, got: ${a}`);if(a<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${a}`);t*=a}return t},cp=(e,t)=>{switch(e.location){case"cpu":return new cr(e.type,e.data,t);case"cpu-pinned":return new cr({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new cr({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new cr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),cr,ks=Y(()=>{cm(),hm(),fm(),mm(),cr=class{constructor(e,t,r){dp();let a,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,a=e.type,i=e.dims,e.location){case"cpu-pinned":{let n=Zr.get(a);if(!n)throw new TypeError(`unsupported type "${a}" to create tensor from pinned buffer`);if(!(e.data instanceof n))throw new TypeError(`buffer should be of type ${n.name}`);this.cpuData=e.data;break}case"texture":{if(a!=="float32")throw new TypeError(`unsupported type "${a}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint8"&&a!=="bool")throw new TypeError(`unsupported type "${a}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let n,u;if(typeof e=="string")if(a=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");n=t}else{let d=Zr.get(e);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&d===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?n=d.from(t,BigInt):n=d.from(t)}else if(t instanceof d)n=t;else throw new TypeError(`A ${a} tensor's data must be type of ${d}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let d=typeof e[0];if(d==="string")a="string",n=e;else if(d==="boolean")a="bool",n=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else{let d=en.get(e.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);a=d,n=e}if(u===void 0)u=[n.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=n,this.dataLocation="cpu"}let s=pp(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=a,this.dims=i,this.size=s}static async fromImage(e,t){return sp(e,t)}static fromTexture(e,t){return op(e,t)}static fromGpuBuffer(e,t){return up(e,t)}static fromPinnedBuffer(e,t,r){return lp(e,t,r)}toDataURL(e){return np(this,e)}toImageData(e){return ip(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return cp(this,e)}}}),Rt,As=Y(()=>{ks(),Rt=cr}),Xn,xi,vr,hr,hp=Y(()=>{ap(),Xn=(e,t)=>{(typeof Qt.trace>"u"?!Qt.wasm.trace:!Qt.trace)||console.timeStamp(`${e}::ORT::${t}`)},xi=(e,t)=>{var i;let r=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],a=!1;for(let s=0;s<r.length;s++){if(a&&!r[s].includes("TRACE_FUNC")){let n=`FUNC_${e}::${r[s].trim().split(" ")[1]}`;t&&(n+=`::${t}`),Xn("CPU",n);return}r[s].includes("TRACE_FUNC")&&(a=!0)}},vr=e=>{(typeof Qt.trace>"u"?!Qt.wasm.trace:!Qt.trace)||xi("BEGIN",e)},hr=e=>{(typeof Qt.trace>"u"?!Qt.wasm.trace:!Qt.trace)||xi("END",e)}}),fp,gm=Y(()=>{Ts(),As(),hp(),fp=class mp{constructor(t){this.handler=t}async run(t,r,a){vr();let i={},s={};if(typeof t!="object"||t===null||t instanceof Rt||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let n=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Rt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");n=!1;for(let c of r){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,h=Object.getOwnPropertyNames(r);for(let m of this.outputNames)if(h.indexOf(m)!==-1){let g=r[m];(g===null||g instanceof Rt)&&(c=!0,n=!1,i[m]=g)}if(c){if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof t[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(n)for(let c of this.outputNames)i[c]=null;let u=await this.handler.run(t,i,s),d={};for(let c in u)if(Object.hasOwnProperty.call(u,c)){let h=u[c];h instanceof Rt?d[c]=h:d[c]=new Rt(h.type,h.data,h.dims)}return hr(),d}async release(){return this.handler.dispose()}static async create(t,r,a,i){vr();let s,n={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)n=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)n=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let h=t,m=0,g=t.byteLength;if(typeof r=="object"&&r!==null)n=r;else if(typeof r=="number"){if(m=r,!Number.isSafeInteger(m))throw new RangeError("'byteOffset' must be an integer.");if(m<0||m>=h.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${h.byteLength}).`);if(g=t.byteLength-m,typeof a=="number"){if(g=a,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||m+g>h.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${h.byteLength-m}].`);if(typeof i=="object"&&i!==null)n=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof a<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(h,m,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,d]=await Es(n),c=await u.createInferenceSessionHandler(s,d);return hr(),new mp(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Is,ym=Y(()=>{gm(),Is=fp}),bm=Y(()=>{}),vm=Y(()=>{}),wm=Y(()=>{}),$m=Y(()=>{}),Ao,gp,_m=Y(()=>{Ts(),As(),Ao="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",gp=class yp{constructor(t,r,a){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=a}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let a=t.evalModel||"",i=t.optimizerModel||"",s=r||{},[n,u]=await Es(s);if(n.createTrainingSessionHandler){let d=await n.createTrainingSessionHandler(t.checkpointState,t.trainModel,a,i,u);return new yp(d,!!t.optimizerModel,!!t.evalModel)}else throw new Error(Ao)}typeNarrowingForRunStep(t,r,a,i,s){let n={},u={};if(typeof a!="object"||a===null||a instanceof Rt||Array.isArray(a))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Rt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let c of i){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);n[c]=null}if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,h=Object.getOwnPropertyNames(i);for(let m of r)if(h.indexOf(m)!==-1){let g=i[m];(g===null||g instanceof Rt)&&(c=!0,d=!1,n[m]=g)}if(c){if(typeof s=="object"&&s!==null)u=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else u=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of t)if(typeof a[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(d)for(let c of r)n[c]=null;return[n,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let a in t)if(Object.hasOwnProperty.call(t,a)){let i=t[a];i instanceof Rt?r[a]=i:r[a]=new Rt(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,a){let[i,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,a),n=await this.handler.runTrainStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(n)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,a){if(this.hasEvalModel){let[i,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,a),n=await this.handler.runEvalStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(n)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let a=await this.getParametersSize(r);if(t.length!==4*a)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),bp,xm=Y(()=>{_m(),bp=gp}),Sm={};ka(Sm,{InferenceSession:()=>Is,TRACE:()=>Xn,TRACE_FUNC_BEGIN:()=>vr,TRACE_FUNC_END:()=>hr,Tensor:()=>Rt,TrainingSession:()=>bp,env:()=>Fe,registerBackend:()=>va});var fr=Y(()=>{lm(),pm(),ym(),As(),bm(),vm(),hp(),wm(),$m(),xm()}),Os={};ka(Os,{createReadStream:()=>$p,readFile:()=>vp,readFileSync:()=>wp});var vp,wp,$p,_p=Y(()=>{vp=void 0,wp=void 0,$p=void 0}),Rs={};ka(Rs,{join:()=>xp});var xp,Sp=Y(()=>{xp=void 0}),Cm=Ta((e,t)=>{var r=(()=>{var i;var a=typeof document<"u"?(i=document.currentScript)==null?void 0:i.src:void 0;return typeof __filename<"u"&&(a||(a=__filename)),function(s={}){var n=s,u,d,c=new Promise((l,y)=>{u=l,d=y});n.mountExternalData=(l,y)=>{(n.eb||(n.eb=new Map)).set(l,y)},n.unmountExternalData=()=>{delete n.eb};let h=()=>{let l=(v,x,I)=>(...B)=>{let V=Pt,K=x==null?void 0:x();B=v(...B);let re=x==null?void 0:x();return K!==re&&(v=re,I(K),x=I=null),Pt!=V?gn():B},y=v=>async(...x)=>{var I;try{if(n.cb)throw Error("Session already started");let B=n.cb={xb:x[0],errors:[]},V=await v(...x);if(n.cb!==B)throw Error("Session mismatch");(I=n.kb)==null||I.flush();let K=B.errors;if(0<K.length){let re=await Promise.all(K);if(re=re.filter(J=>J),0<re.length)throw Error(re.join(`
`))}return V}finally{n.cb=null}};n._OrtCreateSession=l(n._OrtCreateSession,()=>n._OrtCreateSession,v=>n._OrtCreateSession=v),n._OrtRun=y(l(n._OrtRun,()=>n._OrtRun,v=>n._OrtRun=v)),n._OrtRunWithBinding=y(l(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,v=>n._OrtRunWithBinding=v)),n._OrtBindInput=l(n._OrtBindInput,()=>n._OrtBindInput,v=>n._OrtBindInput=v),h=void 0};n.jsepInit=(l,y)=>{if(h==null||h(),l==="webgpu"){[n.kb,n.pb,n.tb,n.lb,n.sb,n.Ra,n.ub,n.wb,n.qb,n.rb,n.vb]=y;let v=n.kb;n.jsepRegisterBuffer=(x,I,B,V)=>v.registerBuffer(x,I,B,V),n.jsepGetBuffer=x=>v.getBuffer(x),n.jsepCreateDownloader=(x,I,B)=>v.createDownloader(x,I,B),n.jsepOnReleaseSession=x=>{v.onReleaseSession(x)},n.jsepOnRunStart=x=>v.onRunStart(x)}};var m=Object.assign({},n),g="./this.program",w=(l,y)=>{throw y},p=typeof window=="object",_=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E="",S,A,O;if(C){var R=(_p(),ta(Os)),k=(Sp(),ta(Rs));E=_?k.dirname(E)+"/":__dirname+"/",S=(l,y)=>(l=$t(l)?new URL(l):k.normalize(l),R.readFileSync(l,y?void 0:"utf8")),O=l=>(l=S(l,!0),l.buffer||(l=new Uint8Array(l)),l),A=(l,y,v,x=!0)=>{l=$t(l)?new URL(l):k.normalize(l),R.readFile(l,x?void 0:"utf8",(I,B)=>{I?v(I):y(x?B.buffer:B)})},!n.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),w=(l,y)=>{throw process.exitCode=l,y}}else(p||_)&&(_?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),a&&(E=a),E.startsWith("blob:")?E="":E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1),S=l=>{var y=new XMLHttpRequest;return y.open("GET",l,!1),y.send(null),y.responseText},_&&(O=l=>{var y=new XMLHttpRequest;return y.open("GET",l,!1),y.responseType="arraybuffer",y.send(null),new Uint8Array(y.response)}),A=(l,y,v)=>{var x=new XMLHttpRequest;x.open("GET",l,!0),x.responseType="arraybuffer",x.onload=()=>{x.status==200||x.status==0&&x.response?y(x.response):v()},x.onerror=v,x.send(null)});var P=console.log.bind(console),W=console.error.bind(console);Object.assign(n,m),m=null;var H,j=!1,be,te,ae,fe,ve,D,ue,Z,ne,oe,M;function X(){var l=H.buffer;n.HEAP8=te=new Int8Array(l),n.HEAP16=fe=new Int16Array(l),n.HEAPU8=ae=new Uint8Array(l),n.HEAPU16=ve=new Uint16Array(l),n.HEAP32=D=new Int32Array(l),n.HEAPU32=ue=new Uint32Array(l),n.HEAPF32=Z=new Float32Array(l),n.HEAPF64=M=new Float64Array(l),n.HEAP64=ne=new BigInt64Array(l),n.HEAPU64=oe=new BigUint64Array(l)}var ie=[],$e=[],Ae=[],ze=0,et=null;function at(l){throw l="Aborted("+l+")",W(l),j=!0,be=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),d(l),l}var ot=l=>l.startsWith("data:application/octet-stream;base64,"),$t=l=>l.startsWith("file://"),ut;if(ut="ort-wasm-simd.wasm",!ot(ut)){var Ge=ut;ut=n.locateFile?n.locateFile(Ge,E):E+Ge}function qe(l){if(O)return O(l);throw"both async and sync fetching of the wasm failed"}function Ct(l){if(p||_){if(typeof fetch=="function"&&!$t(l))return fetch(l,{credentials:"same-origin"}).then(y=>{if(!y.ok)throw`failed to load wasm binary file at '${l}'`;return y.arrayBuffer()}).catch(()=>qe(l));if(A)return new Promise((y,v)=>{A(l,x=>y(new Uint8Array(x)),v)})}return Promise.resolve().then(()=>qe(l))}function Le(l,y,v){return Ct(l).then(x=>WebAssembly.instantiate(x,y)).then(v,x=>{W(`failed to asynchronously prepare wasm: ${x}`),at(x)})}function Et(l,y){var v=ut;return typeof WebAssembly.instantiateStreaming!="function"||ot(v)||$t(v)||C||typeof fetch!="function"?Le(v,l,y):fetch(v,{credentials:"same-origin"}).then(x=>WebAssembly.instantiateStreaming(x,l).then(y,function(I){return W(`wasm streaming compile failed: ${I}`),W("falling back to ArrayBuffer instantiation"),Le(v,l,y)}))}var $r={824920:(l,y,v,x)=>{if(typeof n>"u"||!n.eb)return 1;if(l=Xe(l>>>0),l.startsWith("./")&&(l=l.substring(2)),l=n.eb.get(l),!l)return 2;if(y>>>=0,v>>>=0,y+v>l.byteLength)return 3;try{return ae.set(l.subarray(y,y+v),x>>>0>>>0),0}catch{return 4}},825421:()=>{n.qb()},825452:()=>{n.rb()},825481:()=>{n.vb()},825506:l=>n.pb(l),825539:l=>n.tb(l),825571:(l,y,v)=>{n.lb(l,y,v,!0)},825610:(l,y,v)=>{n.lb(l,y,v)},825643:l=>{n.Ra("Abs",l,void 0)},825694:l=>{n.Ra("Neg",l,void 0)},825745:l=>{n.Ra("Floor",l,void 0)},825798:l=>{n.Ra("Ceil",l,void 0)},825850:l=>{n.Ra("Reciprocal",l,void 0)},825908:l=>{n.Ra("Sqrt",l,void 0)},825960:l=>{n.Ra("Exp",l,void 0)},826011:l=>{n.Ra("Erf",l,void 0)},826062:l=>{n.Ra("Sigmoid",l,void 0)},826117:(l,y,v)=>{n.Ra("HardSigmoid",l,{alpha:y,beta:v})},826196:l=>{n.Ra("Log",l,void 0)},826247:l=>{n.Ra("Sin",l,void 0)},826298:l=>{n.Ra("Cos",l,void 0)},826349:l=>{n.Ra("Tan",l,void 0)},826400:l=>{n.Ra("Asin",l,void 0)},826452:l=>{n.Ra("Acos",l,void 0)},826504:l=>{n.Ra("Atan",l,void 0)},826556:l=>{n.Ra("Sinh",l,void 0)},826608:l=>{n.Ra("Cosh",l,void 0)},826660:l=>{n.Ra("Asinh",l,void 0)},826713:l=>{n.Ra("Acosh",l,void 0)},826766:l=>{n.Ra("Atanh",l,void 0)},826819:l=>{n.Ra("Tanh",l,void 0)},826871:l=>{n.Ra("Not",l,void 0)},826922:(l,y,v)=>{n.Ra("Clip",l,{min:y,max:v})},826991:l=>{n.Ra("Clip",l,void 0)},827043:(l,y)=>{n.Ra("Elu",l,{alpha:y})},827101:l=>{n.Ra("Relu",l,void 0)},827153:(l,y)=>{n.Ra("LeakyRelu",l,{alpha:y})},827217:(l,y)=>{n.Ra("ThresholdedRelu",l,{alpha:y})},827287:(l,y)=>{n.Ra("Cast",l,{to:y})},827345:l=>{n.Ra("Add",l,void 0)},827396:l=>{n.Ra("Sub",l,void 0)},827447:l=>{n.Ra("Mul",l,void 0)},827498:l=>{n.Ra("Div",l,void 0)},827549:l=>{n.Ra("Pow",l,void 0)},827600:l=>{n.Ra("Equal",l,void 0)},827653:l=>{n.Ra("Greater",l,void 0)},827708:l=>{n.Ra("GreaterOrEqual",l,void 0)},827770:l=>{n.Ra("Less",l,void 0)},827822:l=>{n.Ra("LessOrEqual",l,void 0)},827881:(l,y,v,x,I)=>{n.Ra("ReduceMean",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828040:(l,y,v,x,I)=>{n.Ra("ReduceMax",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828198:(l,y,v,x,I)=>{n.Ra("ReduceMin",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828356:(l,y,v,x,I)=>{n.Ra("ReduceProd",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828515:(l,y,v,x,I)=>{n.Ra("ReduceSum",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828673:(l,y,v,x,I)=>{n.Ra("ReduceL1",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828830:(l,y,v,x,I)=>{n.Ra("ReduceL2",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},828987:(l,y,v,x,I)=>{n.Ra("ReduceLogSum",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},829148:(l,y,v,x,I)=>{n.Ra("ReduceSumSquare",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},829312:(l,y,v,x,I)=>{n.Ra("ReduceLogSumExp",l,{keepDims:!!y,noopWithEmptyAxes:!!v,axes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},829476:l=>{n.Ra("Where",l,void 0)},829529:(l,y,v)=>{n.Ra("Transpose",l,{perm:y?Array.from(D.subarray(y>>>0,v>>>0)):[]})},829637:(l,y,v,x)=>{n.Ra("DepthToSpace",l,{blocksize:y,mode:Xe(v),format:x?"NHWC":"NCHW"})},829770:(l,y,v,x)=>{n.Ra("DepthToSpace",l,{blocksize:y,mode:Xe(v),format:x?"NHWC":"NCHW"})},829903:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce)=>{n.Ra("ConvTranspose",l,{format:re?"NHWC":"NCHW",autoPad:y,dilations:[v],group:x,kernelShape:[I],pads:[B,V],strides:[K],wIsConst:()=>!!te[J>>>0],outputPadding:pe?Array.from(D.subarray(pe>>>0,Me>>>0)):[],outputShape:Ue?Array.from(D.subarray(Ue>>>0,L>>>0)):[],activation:Xe(Ce)})},830304:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L)=>{n.Ra("ConvTranspose",l,{format:K?"NHWC":"NCHW",autoPad:y,dilations:Array.from(D.subarray(v>>>0,(v>>>0)+2>>>0)),group:x,kernelShape:Array.from(D.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(D.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(D.subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!te[re>>>0],outputPadding:J?Array.from(D.subarray(J>>>0,pe>>>0)):[],outputShape:Me?Array.from(D.subarray(Me>>>0,Ue>>>0)):[],activation:Xe(L)})},830869:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce)=>{n.Ra("ConvTranspose",l,{format:re?"NHWC":"NCHW",autoPad:y,dilations:[v],group:x,kernelShape:[I],pads:[B,V],strides:[K],wIsConst:()=>!!te[J>>>0],outputPadding:pe?Array.from(D.subarray(pe>>>0,Me>>>0)):[],outputShape:Ue?Array.from(D.subarray(Ue>>>0,L>>>0)):[],activation:Xe(Ce)})},831270:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L)=>{n.Ra("ConvTranspose",l,{format:K?"NHWC":"NCHW",autoPad:y,dilations:Array.from(D.subarray(v>>>0,(v>>>0)+2>>>0)),group:x,kernelShape:Array.from(D.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(D.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(D.subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!te[re>>>0],outputPadding:J?Array.from(D.subarray(J>>>0,pe>>>0)):[],outputShape:Me?Array.from(D.subarray(Me>>>0,Ue>>>0)):[],activation:Xe(L)})},831835:(l,y)=>{n.Ra("GlobalAveragePool",l,{format:y?"NHWC":"NCHW"})},831926:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce,Pe)=>{n.Ra("AveragePool",l,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:v,count_include_pad:x,storage_order:I,dilations:[B,V],kernel_shape:[K,re],pads:[J,pe,Me,Ue],strides:[L,Ce]})},832210:(l,y)=>{n.Ra("GlobalAveragePool",l,{format:y?"NHWC":"NCHW"})},832301:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce,Pe)=>{n.Ra("AveragePool",l,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:v,count_include_pad:x,storage_order:I,dilations:[B,V],kernel_shape:[K,re],pads:[J,pe,Me,Ue],strides:[L,Ce]})},832585:(l,y)=>{n.Ra("GlobalMaxPool",l,{format:y?"NHWC":"NCHW"})},832672:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce,Pe)=>{n.Ra("MaxPool",l,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:v,count_include_pad:x,storage_order:I,dilations:[B,V],kernel_shape:[K,re],pads:[J,pe,Me,Ue],strides:[L,Ce]})},832952:(l,y)=>{n.Ra("GlobalMaxPool",l,{format:y?"NHWC":"NCHW"})},833039:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce,Pe)=>{n.Ra("MaxPool",l,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:v,count_include_pad:x,storage_order:I,dilations:[B,V],kernel_shape:[K,re],pads:[J,pe,Me,Ue],strides:[L,Ce]})},833319:(l,y,v,x,I)=>{n.Ra("Gemm",l,{alpha:y,beta:v,transA:x,transB:I})},833423:l=>{n.Ra("MatMul",l,void 0)},833477:(l,y,v,x)=>{n.Ra("ArgMax",l,{keepDims:!!y,selectLastIndex:!!v,axis:x})},833585:(l,y,v,x)=>{n.Ra("ArgMin",l,{keepDims:!!y,selectLastIndex:!!v,axis:x})},833693:(l,y)=>{n.Ra("Softmax",l,{axis:y})},833756:(l,y)=>{n.Ra("Concat",l,{axis:y})},833816:(l,y,v,x,I)=>{n.Ra("Split",l,{axis:y,numOutputs:v,splitSizes:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},833956:l=>{n.Ra("Expand",l,void 0)},834010:(l,y)=>{n.Ra("Gather",l,{axis:Number(y)})},834081:(l,y)=>{n.Ra("GatherElements",l,{axis:Number(y)})},834160:(l,y,v,x,I,B,V,K,re,J,pe)=>{n.Ra("Resize",l,{antialias:y,axes:v?Array.from(D.subarray(v>>>0,x>>>0)):[],coordinateTransformMode:Xe(I),cubicCoeffA:B,excludeOutside:V,extrapolationValue:K,keepAspectRatioPolicy:Xe(re),mode:Xe(J),nearestMode:Xe(pe)})},834506:(l,y,v,x,I,B,V)=>{n.Ra("Slice",l,{starts:y?Array.from(D.subarray(y>>>0,v>>>0)):[],ends:x?Array.from(D.subarray(x>>>0,I>>>0)):[],axes:B?Array.from(D.subarray(B>>>0,V>>>0)):[]})},834722:l=>{n.Ra("Tile",l,void 0)},834774:(l,y,v,x)=>{n.Ra("LayerNormalization",l,{axis:y,epsilon:v,simplified:!!x})},834885:(l,y,v)=>{n.Ra("InstanceNormalization",l,{epsilon:y,format:v?"NHWC":"NCHW"})},834999:(l,y,v)=>{n.Ra("InstanceNormalization",l,{epsilon:y,format:v?"NHWC":"NCHW"})},835113:l=>{n.Ra("Range",l,void 0)},835166:(l,y)=>{n.Ra("Einsum",l,{equation:Xe(y)})},835247:(l,y,v,x,I)=>{n.Ra("Pad",l,{mode:y,value:v,pads:x?Array.from(D.subarray(x>>>0,I>>>0)):[]})},835374:(l,y,v,x,I,B)=>{n.Ra("BatchNormalization",l,{epsilon:y,momentum:v,spatial:!!I,trainingMode:!!x,format:B?"NHWC":"NCHW"})},835543:(l,y,v,x,I,B)=>{n.Ra("BatchNormalization",l,{epsilon:y,momentum:v,spatial:!!I,trainingMode:!!x,format:B?"NHWC":"NCHW"})},835712:(l,y,v)=>{n.Ra("CumSum",l,{exclusive:Number(y),reverse:Number(v)})},835809:(l,y,v,x,I,B,V,K,re)=>{n.Ra("Attention",l,{numHeads:y,isUnidirectional:v,maskFilterValue:x,scale:I,doRotary:B,qkvHiddenSizes:V?Array.from(D.subarray(Number(K)>>>0,Number(K)+V>>>0)):[],pastPresentShareBuffer:!!re})},836081:l=>{n.Ra("BiasAdd",l,void 0)},836136:l=>{n.Ra("BiasSplitGelu",l,void 0)},836197:l=>{n.Ra("FastGelu",l,void 0)},836253:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue)=>{n.Ra("Conv",l,{format:re?"NHWC":"NCHW",auto_pad:y,dilations:[v],group:x,kernel_shape:[I],pads:B?Array.from(D.subarray(B>>>0,V>>>0)):[],strides:[K],w_is_const:()=>!!te[J>>>0],activation:Xe(pe),activation_params:Me?Array.from(Z.subarray(Me>>>0,Ue>>>0)):[]})},836623:(l,y,v,x,I,B,V,K,re,J,pe,Me,Ue,L,Ce,Pe)=>{n.Ra("Conv",l,{format:Me?"NHWC":"NCHW",auto_pad:y,dilations:[v,x],group:I,kernel_shape:[B,V],pads:K?Array.from(D.subarray(K>>>0,re>>>0)):[],strides:[J,pe],w_is_const:()=>!!te[Ue>>>0],activation:Xe(L),activation_params:Ce?Array.from(Z.subarray(Ce>>>0,Pe>>>0)):[]})},837014:l=>{n.Ra("Gelu",l,void 0)},837066:(l,y,v,x,I,B)=>{n.Ra("MatMulNBits",l,{k:y,n:v,accuracyLevel:x,bits:I,blockSize:B})},837193:(l,y,v,x,I,B)=>{n.Ra("MultiHeadAttention",l,{numHeads:y,isUnidirectional:v,maskFilterValue:x,scale:I,doRotary:B})},837352:(l,y,v,x,I)=>{n.Ra("RotaryEmbedding",l,{interleaved:!!y,numHeads:v,rotaryEmbeddingDim:x,scale:I})},837491:(l,y,v)=>{n.Ra("SkipLayerNormalization",l,{epsilon:y,simplified:!!v})},837593:(l,y,v)=>{n.Ra("SkipLayerNormalization",l,{epsilon:y,simplified:!!v})},837695:(l,y,v,x)=>{n.Ra("LayerNormalization",l,{axis:y,epsilon:v,simplified:!!x})},837806:l=>{n.ub(l)},837840:(l,y)=>n.wb(l,y,n.cb.xb,n.cb.errors)};function Zt(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}class qt{constructor(y){this.hb=y-24}}var jt=0,Kt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,zt=(l,y,v)=>{y>>>=0;var x=y+v;for(v=y;l[v]&&!(v>=x);)++v;if(16<v-y&&l.buffer&&Kt)return Kt.decode(l.subarray(y,v));for(x="";y<v;){var I=l[y++];if(I&128){var B=l[y++]&63;if((I&224)==192)x+=String.fromCharCode((I&31)<<6|B);else{var V=l[y++]&63;I=(I&240)==224?(I&15)<<12|B<<6|V:(I&7)<<18|B<<12|V<<6|l[y++]&63,65536>I?x+=String.fromCharCode(I):(I-=65536,x+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else x+=String.fromCharCode(I)}return x},Xe=(l,y)=>(l>>>=0)?zt(ae,l,y):"",mr=l=>{for(var y=0,v=0;v<l.length;++v){var x=l.charCodeAt(v);127>=x?y++:2047>=x?y+=2:55296<=x&&57343>=x?(y+=4,++v):y+=3}return y},lt=(l,y,v,x)=>{if(v>>>=0,!(0<x))return 0;var I=v;x=v+x-1;for(var B=0;B<l.length;++B){var V=l.charCodeAt(B);if(55296<=V&&57343>=V){var K=l.charCodeAt(++B);V=65536+((V&1023)<<10)|K&1023}if(127>=V){if(v>=x)break;y[v++>>>0]=V}else{if(2047>=V){if(v+1>=x)break;y[v++>>>0]=192|V>>6}else{if(65535>=V){if(v+2>=x)break;y[v++>>>0]=224|V>>12}else{if(v+3>=x)break;y[v++>>>0]=240|V>>18,y[v++>>>0]=128|V>>12&63}y[v++>>>0]=128|V>>6&63}y[v++>>>0]=128|V&63}}return y[v>>>0]=0,v-I},Yt,Qe=l=>{for(var y="";ae[l>>>0];)y+=Yt[ae[l++>>>0]];return y},Tt={},gr={},ct;function je(l,y,v={}){var x=y.name;if(!l)throw new ct(`type "${x}" must have a positive integer typeid pointer`);if(gr.hasOwnProperty(l)){if(v.nb)return;throw new ct(`Cannot register type '${x}' twice`)}gr[l]=y,Tt.hasOwnProperty(l)&&(y=Tt[l],delete Tt[l],y.forEach(I=>I()))}function yt(l,y,v={}){if(!("argPackAdvance"in y))throw new TypeError("registerType registeredInstance requires argPackAdvance");return je(l,y,v)}var _r=(l,y,v)=>{switch(y){case 1:return v?x=>te[x>>>0]:x=>ae[x>>>0];case 2:return v?x=>fe[x>>>1>>>0]:x=>ve[x>>>1>>>0];case 4:return v?x=>D[x>>>2>>>0]:x=>ue[x>>>2>>>0];case 8:return v?x=>ne[x>>>3]:x=>oe[x>>>3];default:throw new TypeError(`invalid integer width (${y}): ${l}`)}},st=[],Q=[];function Se(l){l>>>=0,9<l&&--Q[l+1]===0&&(Q[l]=void 0,st.push(l))}var ce=l=>{if(!l)throw new ct("Cannot use deleted val. handle = "+l);return Q[l]},Oe=l=>{switch(l){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let y=st.pop()||Q.length;return Q[y]=l,Q[y+1]=1,y}};function Ut(l){return this.fromWireType(ue[l>>>2>>>0])}var er={name:"emscripten::val",fromWireType:l=>{var y=ce(l);return Se(l),y},toWireType:(l,y)=>Oe(y),argPackAdvance:8,readValueFromPointer:Ut,bb:null},kt=(l,y)=>{switch(y){case 4:return function(v){return this.fromWireType(Z[v>>>2>>>0])};case 8:return function(v){return this.fromWireType(M[v>>>3>>>0])};default:throw new TypeError(`invalid float width (${y}): ${l}`)}},xt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,le=(l,y)=>{for(var v=l>>1,x=v+y/2;!(v>=x)&&ve[v>>>0];)++v;if(v<<=1,32<v-l&&xt)return xt.decode(ae.subarray(l>>>0,v>>>0));for(v="",x=0;!(x>=y/2);++x){var I=fe[l+2*x>>>1>>>0];if(I==0)break;v+=String.fromCharCode(I)}return v},tr=(l,y,v)=>{if(v??(v=2147483647),2>v)return 0;v-=2;var x=y;v=v<2*l.length?v/2:l.length;for(var I=0;I<v;++I)fe[y>>>1>>>0]=l.charCodeAt(I),y+=2;return fe[y>>>1>>>0]=0,y-x},dn=l=>2*l.length,li=(l,y)=>{for(var v=0,x="";!(v>=y/4);){var I=D[l+4*v>>>2>>>0];if(I==0)break;++v,65536<=I?(I-=65536,x+=String.fromCharCode(55296|I>>10,56320|I&1023)):x+=String.fromCharCode(I)}return x},pn=(l,y,v)=>{if(y>>>=0,v??(v=2147483647),4>v)return 0;var x=y;v=x+v-4;for(var I=0;I<l.length;++I){var B=l.charCodeAt(I);if(55296<=B&&57343>=B){var V=l.charCodeAt(++I);B=65536+((B&1023)<<10)|V&1023}if(D[y>>>2>>>0]=B,y+=4,y+4>v)break}return D[y>>>2>>>0]=0,y-x},cn=l=>{for(var y=0,v=0;v<l.length;++v){var x=l.charCodeAt(v);55296<=x&&57343>=x&&++v,y+=4}return y},la=(l,y)=>{var v=gr[l];if(v===void 0)throw l=La(l),v=Qe(l),At(l),new ct(`${y} has unknown type ${v}`);return v},Aa=(l,y,v)=>{var x=[];return l=l.toWireType(x,v),x.length&&(ue[y>>>2>>>0]=Oe(x)),l},Nr=l=>{try{l()}catch(y){at(y)}},ht=l=>{var y;if(!j)try{l();try{be=be=l=be,(y=n.onExit)==null||y.call(n,l),j=!0,w(l,new Zt(l))}catch(v){v instanceof Zt||v=="unwind"||w(1,v)}}catch(v){v instanceof Zt||v=="unwind"||w(1,v)}};function hn(){var l=we,y={};for(let[v,x]of Object.entries(l))y[v]=typeof x=="function"?(...I)=>{ar.push(v);try{return x(...I)}finally{j||(ar.pop(),Pt&&rr===1&&ar.length===0&&(rr=0,Nr(xn),typeof Fibers<"u"&&Fibers.Db()))}}:x;return y}var rr=0,Pt=null,Ia=0,ar=[],Oa={},Ra={},fn=0,da=null,mn=[];function gn(){return new Promise((l,y)=>{da={resolve:l,reject:y}})}function yn(){var l=kr(65548),y=l+12;ue[l>>>2>>>0]=y,ue[l+4>>>2>>>0]=y+65536,y=ar[0];var v=Oa[y];return v===void 0&&(v=fn++,Oa[y]=v,Ra[v]=y),D[l+8>>>2>>>0]=v,l}function bn(l){if(!j){if(rr===0){var y=!1,v=!1;l((x=0)=>{if(!j&&(Ia=x,y=!0,v)){rr=2,Nr(()=>ir(Pt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),x=!1;try{var I=(0,we[Ra[D[Pt+8>>>2>>>0]]])()}catch(K){I=K,x=!0}var B=!1;if(!Pt){var V=da;V&&(da=null,(x?V.reject:V.resolve)(I),B=!0)}if(x&&!B)throw I}}),v=!0,y||(rr=1,Pt=yn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),Nr(()=>Ur(Pt)))}else rr===2?(rr=0,Nr(Ft),At(Pt),Pt=null,mn.forEach(ht)):at(`invalid state: ${rr}`);return Ia}}function za(l){return bn(y=>{l().then(y)})}var Wr=[],vn={},pa=l=>{var y=vn[l];return y===void 0?Qe(l):y},Vt=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Pa=l=>{var y=Wr.length;return Wr.push(l),y},Ma=(l,y)=>{for(var v=Array(l),x=0;x<l;++x)v[x]=la(ue[y+4*x>>>2>>>0],"parameter "+x);return v},nr=(l,y)=>Object.defineProperty(y,"name",{value:l});function di(l){var y=Function;if(!(y instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof y} which is not a function`);var v=nr(y.name||"unknownFunctionName",function(){});return v.prototype=y.prototype,v=new v,l=y.apply(v,l),l instanceof Object?l:v}var St=l=>l%4===0&&(l%100!==0||l%400===0),Ba=[0,31,60,91,121,152,182,213,244,274,305,335],ca=[0,31,59,90,120,151,181,212,243,273,304,334],Gt=[],ha=(l,y)=>{Gt.length=0;for(var v;v=ae[l++>>>0];){var x=v!=105;x&=v!=112,y+=x&&y%8?4:0,Gt.push(v==112?ue[y>>>2>>>0]:v==106?ne[y>>>3]:v==105?D[y>>>2>>>0]:M[y>>>3>>>0]),y+=x?8:4}return Gt},bt={},Mt=()=>{if(!Hr){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},y;for(y in bt)bt[y]===void 0?delete l[y]:l[y]=bt[y];var v=[];for(y in l)v.push(`${y}=${l[y]}`);Hr=v}return Hr},Hr,pi=[null,[],[]],wn=[31,29,31,30,31,30,31,31,30,31,30,31],Da=[31,28,31,30,31,30,31,31,30,31,30,31];function ci(l){var y=Array(mr(l)+1);return lt(l,y,0,y.length),y}function $n(l,y,v,x){function I(L,Ce,Pe){for(L=typeof L=="number"?L.toString():L||"";L.length<Ce;)L=Pe[0]+L;return L}function B(L,Ce){return I(L,Ce,"0")}function V(L,Ce){function Pe(Cr){return 0>Cr?-1:0<Cr?1:0}var Sr;return(Sr=Pe(L.getFullYear()-Ce.getFullYear()))===0&&(Sr=Pe(L.getMonth()-Ce.getMonth()))===0&&(Sr=Pe(L.getDate()-Ce.getDate())),Sr}function K(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function re(L){var Ce=L.$a;for(L=new Date(new Date(L.ab+1900,0,1).getTime());0<Ce;){var Pe=L.getMonth(),Sr=(St(L.getFullYear())?wn:Da)[Pe];if(Ce>Sr-L.getDate())Ce-=Sr-L.getDate()+1,L.setDate(1),11>Pe?L.setMonth(Pe+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+Ce);break}}return Pe=new Date(L.getFullYear()+1,0,4),Ce=K(new Date(L.getFullYear(),0,4)),Pe=K(Pe),0>=V(Ce,L)?0>=V(Pe,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}l>>>=0,y>>>=0,v>>>=0,x>>>=0;var J=ue[x+40>>>2>>>0];x={Ab:D[x>>>2>>>0],zb:D[x+4>>>2>>>0],fb:D[x+8>>>2>>>0],jb:D[x+12>>>2>>>0],gb:D[x+16>>>2>>>0],ab:D[x+20>>>2>>>0],Va:D[x+24>>>2>>>0],$a:D[x+28>>>2>>>0],Cb:D[x+32>>>2>>>0],yb:D[x+36>>>2>>>0],Bb:J?Xe(J):""},v=Xe(v),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var pe in J)v=v.replace(new RegExp(pe,"g"),J[pe]);var Me="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ue="January February March April May June July August September October November December".split(" ");J={"%a":L=>Me[L.Va].substring(0,3),"%A":L=>Me[L.Va],"%b":L=>Ue[L.gb].substring(0,3),"%B":L=>Ue[L.gb],"%C":L=>B((L.ab+1900)/100|0,2),"%d":L=>B(L.jb,2),"%e":L=>I(L.jb,2," "),"%g":L=>re(L).toString().substring(2),"%G":re,"%H":L=>B(L.fb,2),"%I":L=>(L=L.fb,L==0?L=12:12<L&&(L-=12),B(L,2)),"%j":L=>{for(var Ce=0,Pe=0;Pe<=L.gb-1;Ce+=(St(L.ab+1900)?wn:Da)[Pe++]);return B(L.jb+Ce,3)},"%m":L=>B(L.gb+1,2),"%M":L=>B(L.zb,2),"%n":()=>`
`,"%p":L=>0<=L.fb&&12>L.fb?"AM":"PM","%S":L=>B(L.Ab,2),"%t":()=>"	","%u":L=>L.Va||7,"%U":L=>B(Math.floor((L.$a+7-L.Va)/7),2),"%V":L=>{var Ce=Math.floor((L.$a+7-(L.Va+6)%7)/7);if(2>=(L.Va+371-L.$a-2)%7&&Ce++,Ce)Ce==53&&(Pe=(L.Va+371-L.$a)%7,Pe==4||Pe==3&&St(L.ab)||(Ce=1));else{Ce=52;var Pe=(L.Va+7-L.$a-1)%7;(Pe==4||Pe==5&&St(L.ab%400-1))&&Ce++}return B(Ce,2)},"%w":L=>L.Va,"%W":L=>B(Math.floor((L.$a+7-(L.Va+6)%7)/7),2),"%y":L=>(L.ab+1900).toString().substring(2),"%Y":L=>L.ab+1900,"%z":L=>{L=L.yb;var Ce=0<=L;return L=Math.abs(L)/60,(Ce?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.Bb,"%%":()=>"%"},v=v.replace(/%%/g,"\0\0");for(pe in J)v.includes(pe)&&(v=v.replace(new RegExp(pe,"g"),J[pe](x)));return v=v.replace(/\0\0/g,"%"),pe=ci(v),pe.length>y?0:(te.set(pe,l>>>0),pe.length-1)}for(var _n=Array(256),fa=0;256>fa;++fa)_n[fa]=String.fromCharCode(fa);Yt=_n,ct=n.BindingError=class extends Error{constructor(l){super(l),this.name="BindingError"}},n.InternalError=class extends Error{constructor(l){super(l),this.name="InternalError"}},Q.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Q.length/2-5-st.length;var hi={ia:function(l,y,v){return za(async()=>{await n.sb(l,y,v)})},a:function(l,y,v){l>>>=0;var x=new qt(l);throw ue[x.hb+16>>>2>>>0]=0,ue[x.hb+4>>>2>>>0]=y>>>0,ue[x.hb+8>>>2>>>0]=v>>>0,jt=l,jt},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(l,y,v){y=Qe(y>>>0),yt(l>>>0,{name:y,fromWireType:x=>x,toWireType:function(x,I){if(typeof I!="bigint"&&typeof I!="number")throw I===null?I="null":(x=typeof I,I=x==="object"||x==="array"||x==="function"?I.toString():""+I),new TypeError(`Cannot convert "${I}" to ${this.name}`);return typeof I=="number"&&(I=BigInt(I)),I},argPackAdvance:8,readValueFromPointer:_r(y,v>>>0,y.indexOf("u")==-1),bb:null})},K:function(l,y,v,x){y=Qe(y>>>0),yt(l>>>0,{name:y,fromWireType:function(I){return!!I},toWireType:function(I,B){return B?v:x},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(ae[I>>>0])},bb:null})},J:function(l){return yt(l>>>0,er)},B:function(l,y,v){y=Qe(y>>>0),yt(l>>>0,{name:y,fromWireType:x=>x,toWireType:(x,I)=>I,argPackAdvance:8,readValueFromPointer:kt(y,v>>>0),bb:null})},s:function(l,y,v,x,I){if(l>>>=0,v>>>=0,y=Qe(y>>>0),I===-1&&(I=4294967295),I=K=>K,x===0){var B=32-8*v;I=K=>K<<B>>>B}var V=y.includes("unsigned")?function(K,re){return re>>>0}:function(K,re){return re};yt(l,{name:y,fromWireType:I,toWireType:V,argPackAdvance:8,readValueFromPointer:_r(y,v,x!==0),bb:null})},o:function(l,y,v){function x(B){return new I(te.buffer,ue[B+4>>>2>>>0],ue[B>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][y];v=Qe(v>>>0),yt(l>>>0,{name:v,fromWireType:x,argPackAdvance:8,readValueFromPointer:x},{nb:!0})},D:function(l,y){y=Qe(y>>>0);var v=y==="std::string";yt(l>>>0,{name:y,fromWireType:function(x){var I=ue[x>>>2>>>0],B=x+4;if(v)for(var V=B,K=0;K<=I;++K){var re=B+K;if(K==I||ae[re>>>0]==0){if(V=Xe(V,re-V),J===void 0)var J=V;else J+="\0",J+=V;V=re+1}}else{for(J=Array(I),K=0;K<I;++K)J[K]=String.fromCharCode(ae[B+K>>>0]);J=J.join("")}return At(x),J},toWireType:function(x,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var B=typeof I=="string";if(!(B||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new ct("Cannot pass non-string to std::string");var V=v&&B?mr(I):I.length,K=kr(4+V+1),re=K+4;if(ue[K>>>2>>>0]=V,v&&B)lt(I,ae,re,V+1);else if(B)for(B=0;B<V;++B){var J=I.charCodeAt(B);if(255<J)throw At(re),new ct("String has UTF-16 code units that do not fit in 8 bits");ae[re+B>>>0]=J}else for(B=0;B<V;++B)ae[re+B>>>0]=I[B];return x!==null&&x.push(At,K),K},argPackAdvance:8,readValueFromPointer:Ut,bb(x){At(x)}})},x:function(l,y,v){if(y>>>=0,v>>>=0,v=Qe(v),y===2)var x=le,I=tr,B=dn,V=K=>ve[K>>>1>>>0];else y===4&&(x=li,I=pn,B=cn,V=K=>ue[K>>>2>>>0]);yt(l>>>0,{name:v,fromWireType:K=>{for(var re=ue[K>>>2>>>0],J,pe=K+4,Me=0;Me<=re;++Me){var Ue=K+4+Me*y;(Me==re||V(Ue)==0)&&(pe=x(pe,Ue-pe),J===void 0?J=pe:(J+="\0",J+=pe),pe=Ue+y)}return At(K),J},toWireType:(K,re)=>{if(typeof re!="string")throw new ct(`Cannot pass non-string to C++ string type ${v}`);var J=B(re),pe=kr(4+J+y);return ue[pe>>>2>>>0]=J/y,I(re,pe+4,J+y),K!==null&&K.push(At,pe),pe},argPackAdvance:8,readValueFromPointer:Ut,bb(K){At(K)}})},L:function(l,y){y=Qe(y>>>0),yt(l>>>0,{ob:!0,name:y,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(l,y,v){return y>>>=0,v>>>=0,l=ce(l>>>0),y=la(y,"emval::as"),Aa(y,v,l)},w:function(l){return l>>>=0,za(()=>(l=ce(l),l.then(Oe)))},n:function(l,y,v,x){return v>>>=0,x>>>=0,l=Wr[l>>>0],y=ce(y>>>0),l(null,y,v,x)},j:function(l,y,v,x,I){return v>>>=0,x>>>=0,I>>>=0,l=Wr[l>>>0],y=ce(y>>>0),v=pa(v),l(y,y[v],x,I)},b:Se,A:function(l,y){return y>>>=0,l=ce(l>>>0),y=ce(y),l==y},m:function(l){return l>>>=0,l===0?Oe(Vt()):(l=pa(l),Oe(Vt()[l]))},i:function(l,y,v){y=Ma(l,y>>>0);var x=y.shift();l--;var I=`return function (obj, func, destructorsRef, args) {
`,B=0,V=[];v===0&&V.push("obj");for(var K=["retType"],re=[x],J=0;J<l;++J)V.push("arg"+J),K.push("argType"+J),re.push(y[J]),I+=`  var arg${J} = argType${J}.readValueFromPointer(args${B?"+"+B:""});
`,B+=y[J].argPackAdvance;return I+=`  var rv = ${v===1?"new func":"func.call"}(${V.join(", ")});
`,x.ob||(K.push("emval_returnValue"),re.push(Aa),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),K.push(I+`};
`),l=di(K)(...re),v=`methodCaller<(${y.map(pe=>pe.name).join(", ")}) => ${x.name}>`,Pa(nr(v,l))},r:function(l,y){return y>>>=0,l=ce(l>>>0),y=ce(y),Oe(l[y])},e:function(l){l>>>=0,9<l&&(Q[l+1]+=1)},t:function(){return Oe([])},l:function(l){l=ce(l>>>0);for(var y=Array(l.length),v=0;v<l.length;v++)y[v]=l[v];return Oe(y)},f:function(l){return Oe(pa(l>>>0))},k:function(){return Oe({})},h:function(l){l>>>=0;for(var y=ce(l);y.length;){var v=y.pop();y.pop()(v)}Se(l)},g:function(l,y,v){y>>>=0,v>>>=0,l=ce(l>>>0),y=ce(y),v=ce(v),l[y]=v},c:function(l,y){return y>>>=0,l=la(l>>>0,"_emval_take_value"),l=l.readValueFromPointer(y),Oe(l)},W:function(l,y){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),y>>>=0,l=new Date(1e3*l),D[y>>>2>>>0]=l.getUTCSeconds(),D[y+4>>>2>>>0]=l.getUTCMinutes(),D[y+8>>>2>>>0]=l.getUTCHours(),D[y+12>>>2>>>0]=l.getUTCDate(),D[y+16>>>2>>>0]=l.getUTCMonth(),D[y+20>>>2>>>0]=l.getUTCFullYear()-1900,D[y+24>>>2>>>0]=l.getUTCDay(),D[y+28>>>2>>>0]=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(l,y){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),y>>>=0,l=new Date(1e3*l),D[y>>>2>>>0]=l.getSeconds(),D[y+4>>>2>>>0]=l.getMinutes(),D[y+8>>>2>>>0]=l.getHours(),D[y+12>>>2>>>0]=l.getDate(),D[y+16>>>2>>>0]=l.getMonth(),D[y+20>>>2>>>0]=l.getFullYear()-1900,D[y+24>>>2>>>0]=l.getDay(),D[y+28>>>2>>>0]=(St(l.getFullYear())?Ba:ca)[l.getMonth()]+l.getDate()-1|0,D[y+36>>>2>>>0]=-(60*l.getTimezoneOffset());var v=new Date(l.getFullYear(),6,1).getTimezoneOffset(),x=new Date(l.getFullYear(),0,1).getTimezoneOffset();D[y+32>>>2>>>0]=(v!=x&&l.getTimezoneOffset()==Math.min(x,v))|0},Y:function(l){l>>>=0;var y=new Date(D[l+20>>>2>>>0]+1900,D[l+16>>>2>>>0],D[l+12>>>2>>>0],D[l+8>>>2>>>0],D[l+4>>>2>>>0],D[l>>>2>>>0],0),v=D[l+32>>>2>>>0],x=y.getTimezoneOffset(),I=new Date(y.getFullYear(),6,1).getTimezoneOffset(),B=new Date(y.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(B,I);return 0>v?D[l+32>>>2>>>0]=+(I!=B&&V==x):0<v!=(V==x)&&(I=Math.max(B,I),y.setTime(y.getTime()+6e4*((0<v?V:I)-x))),D[l+24>>>2>>>0]=y.getDay(),D[l+28>>>2>>>0]=(St(y.getFullYear())?Ba:ca)[y.getMonth()]+y.getDate()-1|0,D[l>>>2>>>0]=y.getSeconds(),D[l+4>>>2>>>0]=y.getMinutes(),D[l+8>>>2>>>0]=y.getHours(),D[l+12>>>2>>>0]=y.getDate(),D[l+16>>>2>>>0]=y.getMonth(),D[l+20>>>2>>>0]=y.getYear(),l=y.getTime(),BigInt(isNaN(l)?-1:l/1e3)},U:function(){return-52},V:function(){},N:function(l,y,v,x){v>>>=0,x>>>=0;var I=new Date().getFullYear(),B=new Date(I,0,1),V=new Date(I,6,1);I=B.getTimezoneOffset();var K=V.getTimezoneOffset();ue[l>>>0>>>2>>>0]=60*Math.max(I,K),D[y>>>0>>>2>>>0]=+(I!=K),l=re=>re.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=l(B),V=l(V),K<I?(lt(B,ae,v,17),lt(V,ae,x,17)):(lt(B,ae,x,17),lt(V,ae,v,17))},v:()=>{at("")},d:function(l,y,v){return l>>>=0,y=ha(y>>>0,v>>>0),$r[l](...y)},I:function(l,y,v){return l>>>=0,y=ha(y>>>0,v>>>0),$r[l](...y)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(l){l>>>=0;var y=ae.length;if(4294901760<l)return!1;for(var v=1;4>=v;v*=2){var x=y*(1+.2/v);x=Math.min(x,l+100663296);var I=Math;x=Math.max(l,x);e:{I=(I.min.call(I,4294901760,x+(65536-x%65536)%65536)-H.buffer.byteLength+65535)/65536;try{H.grow(I),X();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(l,y){l>>>=0,y>>>=0;var v=0;return Mt().forEach((x,I)=>{var B=y+v;for(I=ue[l+4*I>>>2>>>0]=B,B=0;B<x.length;++B)te[I++>>>0]=x.charCodeAt(B);te[I>>>0]=0,v+=x.length+1}),0},aa:function(l,y){l>>>=0,y>>>=0;var v=Mt();ue[l>>>2>>>0]=v.length;var x=0;return v.forEach(I=>x+=I.length+1),ue[y>>>2>>>0]=x,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(l,y,v,x){y>>>=0,v>>>=0,x>>>=0;for(var I=0,B=0;B<v;B++){var V=ue[y>>>2>>>0],K=ue[y+4>>>2>>>0];y+=8;for(var re=0;re<K;re++){var J=ae[V+re>>>0],pe=pi[l];J===0||J===10?((l===1?P:W)(zt(pe,0)),pe.length=0):pe.push(J)}I+=K}return ue[x>>>2>>>0]=I,0},fa:$n,p:function(l,y,v,x){return $n(l>>>0,y>>>0,v>>>0,x>>>0)}},we=function(){function l(v){return we=v.exports,we=hn(),we=Sn(),H=we.ja,X(),$e.unshift(we.ka),ze--,ze==0&&et&&(v=et,et=null,v()),we}var y={a:hi};if(ze++,n.instantiateWasm)try{return n.instantiateWasm(y,l)}catch(v){W(`Module.instantiateWasm callback failed with error: ${v}`),d(v)}return Et(y,function(v){l(v.instance)}).catch(d),{}}(),La=l=>(La=we.la)(l);n._OrtInit=(l,y)=>(n._OrtInit=we.ma)(l,y),n._OrtGetLastError=(l,y)=>(n._OrtGetLastError=we.na)(l,y),n._OrtCreateSessionOptions=(l,y,v,x,I,B,V,K,re,J)=>(n._OrtCreateSessionOptions=we.oa)(l,y,v,x,I,B,V,K,re,J),n._OrtAppendExecutionProvider=(l,y)=>(n._OrtAppendExecutionProvider=we.pa)(l,y),n._OrtAddFreeDimensionOverride=(l,y,v)=>(n._OrtAddFreeDimensionOverride=we.qa)(l,y,v),n._OrtAddSessionConfigEntry=(l,y,v)=>(n._OrtAddSessionConfigEntry=we.ra)(l,y,v),n._OrtReleaseSessionOptions=l=>(n._OrtReleaseSessionOptions=we.sa)(l),n._OrtCreateSession=(l,y,v)=>(n._OrtCreateSession=we.ta)(l,y,v),n._OrtReleaseSession=l=>(n._OrtReleaseSession=we.ua)(l),n._OrtGetInputOutputCount=(l,y,v)=>(n._OrtGetInputOutputCount=we.va)(l,y,v),n._OrtGetInputName=(l,y)=>(n._OrtGetInputName=we.wa)(l,y),n._OrtGetOutputName=(l,y)=>(n._OrtGetOutputName=we.xa)(l,y),n._OrtFree=l=>(n._OrtFree=we.ya)(l),n._OrtCreateTensor=(l,y,v,x,I,B)=>(n._OrtCreateTensor=we.za)(l,y,v,x,I,B),n._OrtGetTensorData=(l,y,v,x,I)=>(n._OrtGetTensorData=we.Aa)(l,y,v,x,I),n._OrtReleaseTensor=l=>(n._OrtReleaseTensor=we.Ba)(l),n._OrtCreateRunOptions=(l,y,v,x)=>(n._OrtCreateRunOptions=we.Ca)(l,y,v,x),n._OrtAddRunConfigEntry=(l,y,v)=>(n._OrtAddRunConfigEntry=we.Da)(l,y,v),n._OrtReleaseRunOptions=l=>(n._OrtReleaseRunOptions=we.Ea)(l),n._OrtCreateBinding=l=>(n._OrtCreateBinding=we.Fa)(l),n._OrtBindInput=(l,y,v)=>(n._OrtBindInput=we.Ga)(l,y,v),n._OrtBindOutput=(l,y,v,x)=>(n._OrtBindOutput=we.Ha)(l,y,v,x),n._OrtClearBoundOutputs=l=>(n._OrtClearBoundOutputs=we.Ia)(l),n._OrtReleaseBinding=l=>(n._OrtReleaseBinding=we.Ja)(l),n._OrtRunWithBinding=(l,y,v,x,I)=>(n._OrtRunWithBinding=we.Ka)(l,y,v,x,I),n._OrtRun=(l,y,v,x,I,B,V,K)=>(n._OrtRun=we.La)(l,y,v,x,I,B,V,K),n._OrtEndProfiling=l=>(n._OrtEndProfiling=we.Ma)(l),n._JsepOutput=(l,y,v)=>(n._JsepOutput=we.Na)(l,y,v),n._JsepGetNodeName=l=>(n._JsepGetNodeName=we.Oa)(l);var kr=n._malloc=l=>(kr=n._malloc=we.Pa)(l),At=n._free=l=>(At=n._free=we.Qa)(l),ma=l=>(ma=we.Sa)(l),ga=l=>(ga=we.Ta)(l),Na=()=>(Na=we.Ua)(),Ur=l=>(Ur=we.Wa)(l),xn=()=>(xn=we.Xa)(),ir=l=>(ir=we.Ya)(l),Ft=()=>(Ft=we.Za)();n.___start_em_js=837952,n.___stop_em_js=838113;function Sn(){var l=we;l=Object.assign({},l);var y=v=>x=>v(x)>>>0;return l.la=y(l.la),l.Pa=y(l.Pa),l.Ta=y(l.Ta),l.Ua=(v=>()=>v()>>>0)(l.Ua),l}n.stackSave=()=>Na(),n.stackRestore=l=>ma(l),n.stackAlloc=l=>ga(l),n.UTF8ToString=Xe,n.stringToUTF8=(l,y,v)=>lt(l,ae,y,v),n.lengthBytesUTF8=mr;var xr;et=function l(){xr||Wa(),xr||(et=l)};function Wa(){if(!(0<ze)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var l=n.preRun.shift();ie.unshift(l)}for(;0<ie.length;)ie.shift()(n);if(!(0<ze||xr||(xr=!0,n.calledRun=!0,j))){for(;0<$e.length;)$e.shift()(n);for(u(n);0<Ae.length;)Ae.shift()(n)}}}return Wa(),c}})();typeof e=="object"&&typeof t=="object"?t.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),Em=Ta(()=>{}),Tm=Ta(()=>{}),Cp={};ka(Cp,{cpus:()=>Ep});var Ep,km=Y(()=>{Ep=void 0}),Am=Ta((e,t)=>{var r=(()=>{var i;var a=typeof document<"u"?(i=document.currentScript)==null?void 0:i.src:void 0;return typeof __filename<"u"&&(a||(a=__filename)),function(s={}){function n(){return M.buffer!=Ae.buffer&&Le(),Ae}function u(){return M.buffer!=Ae.buffer&&Le(),ze}function d(){return M.buffer!=Ae.buffer&&Le(),et}function c(){return M.buffer!=Ae.buffer&&Le(),at}function h(){return M.buffer!=Ae.buffer&&Le(),ot}function m(){return M.buffer!=Ae.buffer&&Le(),$t}function g(){return M.buffer!=Ae.buffer&&Le(),ut}function w(){return M.buffer!=Ae.buffer&&Le(),Ct}var p=s,_,C,E=new Promise((o,f)=>{_=o,C=f});p.mountExternalData=(o,f)=>{(p.Db||(p.Db=new Map)).set(o,f)},p.unmountExternalData=()=>{delete p.Db};let S=()=>{let o=(b,$,T)=>(...z)=>{let U=Ft,q=$==null?void 0:$();z=b(...z);let se=$==null?void 0:$();return q!==se&&(b=se,T(q),$=T=null),Ft!=U?I():z},f=b=>async(...$)=>{var T;try{if(p.Cb)throw Error("Session already started");let z=p.Cb={ec:$[0],errors:[]},U=await b(...$);if(p.Cb!==z)throw Error("Session mismatch");(T=p.Kb)==null||T.flush();let q=z.errors;if(0<q.length){let se=await Promise.all(q);if(se=se.filter(ee=>ee),0<se.length)throw Error(se.join(`
`))}return U}finally{p.Cb=null}};p._OrtCreateSession=o(p._OrtCreateSession,()=>p._OrtCreateSession,b=>p._OrtCreateSession=b),p._OrtRun=f(o(p._OrtRun,()=>p._OrtRun,b=>p._OrtRun=b)),p._OrtRunWithBinding=f(o(p._OrtRunWithBinding,()=>p._OrtRunWithBinding,b=>p._OrtRunWithBinding=b)),p._OrtBindInput=o(p._OrtBindInput,()=>p._OrtBindInput,b=>p._OrtBindInput=b),S=void 0};p.jsepInit=(o,f)=>{if(S==null||S(),o==="webgpu"){[p.Kb,p.Wb,p.$b,p.Lb,p.Zb,p.ob,p.ac,p.cc,p.Xb,p.Yb,p.bc]=f;let b=p.Kb;p.jsepRegisterBuffer=($,T,z,U)=>b.registerBuffer($,T,z,U),p.jsepGetBuffer=$=>b.getBuffer($),p.jsepCreateDownloader=($,T,z)=>b.createDownloader($,T,z),p.jsepOnReleaseSession=$=>{b.onReleaseSession($)},p.jsepOnRunStart=$=>b.onRunStart($)}};var A=Object.assign({},p),O="./this.program",R=(o,f)=>{throw f},k=typeof window=="object",P=typeof importScripts=="function",W=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",H=p.ENVIRONMENT_IS_PTHREAD||!1,j="";function be(o){return p.locateFile?p.locateFile(o,j):j+o}var te,ae,fe;if(W){var ve=(_p(),ta(Os)),D=(Sp(),ta(Rs));j=P?D.dirname(j)+"/":__dirname+"/",te=(o,f)=>(o=lt(o)?new URL(o):D.normalize(o),ve.readFileSync(o,f?void 0:"utf8")),fe=o=>(o=te(o,!0),o.buffer||(o=new Uint8Array(o)),o),ae=(o,f,b,$=!0)=>{o=lt(o)?new URL(o):D.normalize(o),ve.readFile(o,$?void 0:"utf8",(T,z)=>{T?b(T):f($?z.buffer:z)})},!p.thisProgram&&1<process.argv.length&&(O=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),R=(o,f)=>{throw process.exitCode=o,f},global.Worker=Em().Worker}else(k||P)&&(P?j=self.location.href:typeof document<"u"&&document.currentScript&&(j=document.currentScript.src),typeof a<"u"&&a&&(j=a),j.startsWith("blob:")?j="":j=j.substr(0,j.replace(/[?#].*/,"").lastIndexOf("/")+1),W||(te=o=>{var f=new XMLHttpRequest;return f.open("GET",o,!1),f.send(null),f.responseText},P&&(fe=o=>{var f=new XMLHttpRequest;return f.open("GET",o,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),ae=(o,f,b)=>{var $=new XMLHttpRequest;$.open("GET",o,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?f($.response):b()},$.onerror=b,$.send(null)}));W&&typeof performance>"u"&&(global.performance=Tm().performance);var ue=console.log.bind(console),Z=console.error.bind(console);W&&(ue=(...o)=>ve.writeSync(1,o.join(" ")+`
`),Z=(...o)=>ve.writeSync(2,o.join(" ")+`
`));var ne=ue,oe=Z;Object.assign(p,A),A=null;var M,X,ie=!1,$e,Ae,ze,et,at,ot,$t,ut,Ge,qe,Ct;function Le(){var o=M.buffer;p.HEAP8=Ae=new Int8Array(o),p.HEAP16=et=new Int16Array(o),p.HEAPU8=ze=new Uint8Array(o),p.HEAPU16=at=new Uint16Array(o),p.HEAP32=ot=new Int32Array(o),p.HEAPU32=$t=new Uint32Array(o),p.HEAPF32=ut=new Float32Array(o),p.HEAPF64=Ct=new Float64Array(o),p.HEAP64=Ge=new BigInt64Array(o),p.HEAPU64=qe=new BigUint64Array(o)}var Et=16777216;if(H)M=p.wasmMemory;else if(p.wasmMemory)M=p.wasmMemory;else if(M=new WebAssembly.Memory({initial:Et/65536,maximum:65536,shared:!0}),!(M.buffer instanceof SharedArrayBuffer))throw oe("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),W&&oe("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Le(),Et=M.buffer.byteLength;var $r=[],Zt=[],qt=[],jt=0,Kt=null;function zt(){if(jt--,jt==0&&Kt){var o=Kt;Kt=null,o()}}function Xe(o){throw o="Aborted("+o+")",oe(o),ie=!0,$e=1,o=new WebAssembly.RuntimeError(o+". Build with -sASSERTIONS for more info."),C(o),o}var mr=o=>o.startsWith("data:application/octet-stream;base64,"),lt=o=>o.startsWith("file://"),Yt;Yt="ort-wasm-simd-threaded.wasm",mr(Yt)||(Yt=be(Yt));function Qe(o){if(fe)return fe(o);throw"both async and sync fetching of the wasm failed"}function Tt(o){if(k||P){if(typeof fetch=="function"&&!lt(o))return fetch(o,{credentials:"same-origin"}).then(f=>{if(!f.ok)throw`failed to load wasm binary file at '${o}'`;return f.arrayBuffer()}).catch(()=>Qe(o));if(ae)return new Promise((f,b)=>{ae(o,$=>f(new Uint8Array($)),b)})}return Promise.resolve().then(()=>Qe(o))}function gr(o,f,b){return Tt(o).then($=>WebAssembly.instantiate($,f)).then(b,$=>{oe(`failed to asynchronously prepare wasm: ${$}`),Xe($)})}function ct(o,f){var b=Yt;return typeof WebAssembly.instantiateStreaming!="function"||mr(b)||lt(b)||W||typeof fetch!="function"?gr(b,o,f):fetch(b,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,o).then(f,function(T){return oe(`wasm streaming compile failed: ${T}`),oe("falling back to ArrayBuffer instantiation"),gr(b,o,f)}))}var je={826468:(o,f,b,$)=>{if(typeof p>"u"||!p.Db)return 1;if(o=ht(o>>>0),o.startsWith("./")&&(o=o.substring(2)),o=p.Db.get(o),!o)return 2;if(f>>>=0,b>>>=0,$>>>=0,f+b>o.byteLength)return 3;try{return u().set(o.subarray(f,f+b),$>>>0),0}catch{return 4}},826969:()=>{p.Xb()},827e3:()=>{p.Yb()},827029:()=>{p.bc()},827054:o=>p.Wb(o),827087:o=>p.$b(o),827119:(o,f,b)=>{p.Lb(o,f,b,!0)},827158:(o,f,b)=>{p.Lb(o,f,b)},827191:o=>{p.ob("Abs",o,void 0)},827242:o=>{p.ob("Neg",o,void 0)},827293:o=>{p.ob("Floor",o,void 0)},827346:o=>{p.ob("Ceil",o,void 0)},827398:o=>{p.ob("Reciprocal",o,void 0)},827456:o=>{p.ob("Sqrt",o,void 0)},827508:o=>{p.ob("Exp",o,void 0)},827559:o=>{p.ob("Erf",o,void 0)},827610:o=>{p.ob("Sigmoid",o,void 0)},827665:(o,f,b)=>{p.ob("HardSigmoid",o,{alpha:f,beta:b})},827744:o=>{p.ob("Log",o,void 0)},827795:o=>{p.ob("Sin",o,void 0)},827846:o=>{p.ob("Cos",o,void 0)},827897:o=>{p.ob("Tan",o,void 0)},827948:o=>{p.ob("Asin",o,void 0)},828e3:o=>{p.ob("Acos",o,void 0)},828052:o=>{p.ob("Atan",o,void 0)},828104:o=>{p.ob("Sinh",o,void 0)},828156:o=>{p.ob("Cosh",o,void 0)},828208:o=>{p.ob("Asinh",o,void 0)},828261:o=>{p.ob("Acosh",o,void 0)},828314:o=>{p.ob("Atanh",o,void 0)},828367:o=>{p.ob("Tanh",o,void 0)},828419:o=>{p.ob("Not",o,void 0)},828470:(o,f,b)=>{p.ob("Clip",o,{min:f,max:b})},828539:o=>{p.ob("Clip",o,void 0)},828591:(o,f)=>{p.ob("Elu",o,{alpha:f})},828649:o=>{p.ob("Relu",o,void 0)},828701:(o,f)=>{p.ob("LeakyRelu",o,{alpha:f})},828765:(o,f)=>{p.ob("ThresholdedRelu",o,{alpha:f})},828835:(o,f)=>{p.ob("Cast",o,{to:f})},828893:o=>{p.ob("Add",o,void 0)},828944:o=>{p.ob("Sub",o,void 0)},828995:o=>{p.ob("Mul",o,void 0)},829046:o=>{p.ob("Div",o,void 0)},829097:o=>{p.ob("Pow",o,void 0)},829148:o=>{p.ob("Equal",o,void 0)},829201:o=>{p.ob("Greater",o,void 0)},829256:o=>{p.ob("GreaterOrEqual",o,void 0)},829318:o=>{p.ob("Less",o,void 0)},829370:o=>{p.ob("LessOrEqual",o,void 0)},829429:(o,f,b,$,T)=>{p.ob("ReduceMean",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},829588:(o,f,b,$,T)=>{p.ob("ReduceMax",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},829746:(o,f,b,$,T)=>{p.ob("ReduceMin",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},829904:(o,f,b,$,T)=>{p.ob("ReduceProd",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},830063:(o,f,b,$,T)=>{p.ob("ReduceSum",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},830221:(o,f,b,$,T)=>{p.ob("ReduceL1",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},830378:(o,f,b,$,T)=>{p.ob("ReduceL2",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},830535:(o,f,b,$,T)=>{p.ob("ReduceLogSum",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},830696:(o,f,b,$,T)=>{p.ob("ReduceSumSquare",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},830860:(o,f,b,$,T)=>{p.ob("ReduceLogSumExp",o,{keepDims:!!f,noopWithEmptyAxes:!!b,axes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},831024:o=>{p.ob("Where",o,void 0)},831077:(o,f,b)=>{p.ob("Transpose",o,{perm:f?Array.from(h().subarray(f>>>0,b>>>0)):[]})},831185:(o,f,b,$)=>{p.ob("DepthToSpace",o,{blocksize:f,mode:ht(b),format:$?"NHWC":"NCHW"})},831318:(o,f,b,$)=>{p.ob("DepthToSpace",o,{blocksize:f,mode:ht(b),format:$?"NHWC":"NCHW"})},831451:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te)=>{p.ob("ConvTranspose",o,{format:se?"NHWC":"NCHW",autoPad:f,dilations:[b],group:$,kernelShape:[T],pads:[z,U],strides:[q],wIsConst:()=>!!n()[ee>>>0],outputPadding:me?Array.from(h().subarray(me>>>0,Ve>>>0)):[],outputShape:Ke?Array.from(h().subarray(Ke>>>0,N>>>0)):[],activation:ht(Te)})},831852:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N)=>{p.ob("ConvTranspose",o,{format:q?"NHWC":"NCHW",autoPad:f,dilations:Array.from(h().subarray(b>>>0,(b>>>0)+2>>>0)),group:$,kernelShape:Array.from(h().subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(h().subarray(z>>>0,(z>>>0)+4>>>0)),strides:Array.from(h().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!n()[se>>>0],outputPadding:ee?Array.from(h().subarray(ee>>>0,me>>>0)):[],outputShape:Ve?Array.from(h().subarray(Ve>>>0,Ke>>>0)):[],activation:ht(N)})},832417:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te)=>{p.ob("ConvTranspose",o,{format:se?"NHWC":"NCHW",autoPad:f,dilations:[b],group:$,kernelShape:[T],pads:[z,U],strides:[q],wIsConst:()=>!!n()[ee>>>0],outputPadding:me?Array.from(h().subarray(me>>>0,Ve>>>0)):[],outputShape:Ke?Array.from(h().subarray(Ke>>>0,N>>>0)):[],activation:ht(Te)})},832818:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N)=>{p.ob("ConvTranspose",o,{format:q?"NHWC":"NCHW",autoPad:f,dilations:Array.from(h().subarray(b>>>0,(b>>>0)+2>>>0)),group:$,kernelShape:Array.from(h().subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(h().subarray(z>>>0,(z>>>0)+4>>>0)),strides:Array.from(h().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!n()[se>>>0],outputPadding:ee?Array.from(h().subarray(ee>>>0,me>>>0)):[],outputShape:Ve?Array.from(h().subarray(Ve>>>0,Ke>>>0)):[],activation:ht(N)})},833383:(o,f)=>{p.ob("GlobalAveragePool",o,{format:f?"NHWC":"NCHW"})},833474:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te,Ne)=>{p.ob("AveragePool",o,{format:Ne?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:T,dilations:[z,U],kernel_shape:[q,se],pads:[ee,me,Ve,Ke],strides:[N,Te]})},833758:(o,f)=>{p.ob("GlobalAveragePool",o,{format:f?"NHWC":"NCHW"})},833849:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te,Ne)=>{p.ob("AveragePool",o,{format:Ne?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:T,dilations:[z,U],kernel_shape:[q,se],pads:[ee,me,Ve,Ke],strides:[N,Te]})},834133:(o,f)=>{p.ob("GlobalMaxPool",o,{format:f?"NHWC":"NCHW"})},834220:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te,Ne)=>{p.ob("MaxPool",o,{format:Ne?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:T,dilations:[z,U],kernel_shape:[q,se],pads:[ee,me,Ve,Ke],strides:[N,Te]})},834500:(o,f)=>{p.ob("GlobalMaxPool",o,{format:f?"NHWC":"NCHW"})},834587:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te,Ne)=>{p.ob("MaxPool",o,{format:Ne?"NHWC":"NCHW",auto_pad:f,ceil_mode:b,count_include_pad:$,storage_order:T,dilations:[z,U],kernel_shape:[q,se],pads:[ee,me,Ve,Ke],strides:[N,Te]})},834867:(o,f,b,$,T)=>{p.ob("Gemm",o,{alpha:f,beta:b,transA:$,transB:T})},834971:o=>{p.ob("MatMul",o,void 0)},835025:(o,f,b,$)=>{p.ob("ArgMax",o,{keepDims:!!f,selectLastIndex:!!b,axis:$})},835133:(o,f,b,$)=>{p.ob("ArgMin",o,{keepDims:!!f,selectLastIndex:!!b,axis:$})},835241:(o,f)=>{p.ob("Softmax",o,{axis:f})},835304:(o,f)=>{p.ob("Concat",o,{axis:f})},835364:(o,f,b,$,T)=>{p.ob("Split",o,{axis:f,numOutputs:b,splitSizes:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},835504:o=>{p.ob("Expand",o,void 0)},835558:(o,f)=>{p.ob("Gather",o,{axis:Number(f)})},835629:(o,f)=>{p.ob("GatherElements",o,{axis:Number(f)})},835708:(o,f,b,$,T,z,U,q,se,ee,me)=>{p.ob("Resize",o,{antialias:f,axes:b?Array.from(h().subarray(b>>>0,$>>>0)):[],coordinateTransformMode:ht(T),cubicCoeffA:z,excludeOutside:U,extrapolationValue:q,keepAspectRatioPolicy:ht(se),mode:ht(ee),nearestMode:ht(me)})},836054:(o,f,b,$,T,z,U)=>{p.ob("Slice",o,{starts:f?Array.from(h().subarray(f>>>0,b>>>0)):[],ends:$?Array.from(h().subarray($>>>0,T>>>0)):[],axes:z?Array.from(h().subarray(z>>>0,U>>>0)):[]})},836270:o=>{p.ob("Tile",o,void 0)},836322:(o,f,b,$)=>{p.ob("LayerNormalization",o,{axis:f,epsilon:b,simplified:!!$})},836433:(o,f,b)=>{p.ob("InstanceNormalization",o,{epsilon:f,format:b?"NHWC":"NCHW"})},836547:(o,f,b)=>{p.ob("InstanceNormalization",o,{epsilon:f,format:b?"NHWC":"NCHW"})},836661:o=>{p.ob("Range",o,void 0)},836714:(o,f)=>{p.ob("Einsum",o,{equation:ht(f)})},836795:(o,f,b,$,T)=>{p.ob("Pad",o,{mode:f,value:b,pads:$?Array.from(h().subarray($>>>0,T>>>0)):[]})},836922:(o,f,b,$,T,z)=>{p.ob("BatchNormalization",o,{epsilon:f,momentum:b,spatial:!!T,trainingMode:!!$,format:z?"NHWC":"NCHW"})},837091:(o,f,b,$,T,z)=>{p.ob("BatchNormalization",o,{epsilon:f,momentum:b,spatial:!!T,trainingMode:!!$,format:z?"NHWC":"NCHW"})},837260:(o,f,b)=>{p.ob("CumSum",o,{exclusive:Number(f),reverse:Number(b)})},837357:(o,f,b,$,T,z,U,q,se)=>{p.ob("Attention",o,{numHeads:f,isUnidirectional:b,maskFilterValue:$,scale:T,doRotary:z,qkvHiddenSizes:U?Array.from(h().subarray(Number(q)>>>0,Number(q)+U>>>0)):[],pastPresentShareBuffer:!!se})},837629:o=>{p.ob("BiasAdd",o,void 0)},837684:o=>{p.ob("BiasSplitGelu",o,void 0)},837745:o=>{p.ob("FastGelu",o,void 0)},837801:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke)=>{p.ob("Conv",o,{format:se?"NHWC":"NCHW",auto_pad:f,dilations:[b],group:$,kernel_shape:[T],pads:z?Array.from(h().subarray(z>>>0,U>>>0)):[],strides:[q],w_is_const:()=>!!n()[ee>>>0],activation:ht(me),activation_params:Ve?Array.from(g().subarray(Ve>>>0,Ke>>>0)):[]})},838171:(o,f,b,$,T,z,U,q,se,ee,me,Ve,Ke,N,Te,Ne)=>{p.ob("Conv",o,{format:Ve?"NHWC":"NCHW",auto_pad:f,dilations:[b,$],group:T,kernel_shape:[z,U],pads:q?Array.from(h().subarray(q>>>0,se>>>0)):[],strides:[ee,me],w_is_const:()=>!!n()[Ke>>>0],activation:ht(N),activation_params:Te?Array.from(g().subarray(Te>>>0,Ne>>>0)):[]})},838562:o=>{p.ob("Gelu",o,void 0)},838614:(o,f,b,$,T,z)=>{p.ob("MatMulNBits",o,{k:f,n:b,accuracyLevel:$,bits:T,blockSize:z})},838741:(o,f,b,$,T,z)=>{p.ob("MultiHeadAttention",o,{numHeads:f,isUnidirectional:b,maskFilterValue:$,scale:T,doRotary:z})},838900:(o,f,b,$,T)=>{p.ob("RotaryEmbedding",o,{interleaved:!!f,numHeads:b,rotaryEmbeddingDim:$,scale:T})},839039:(o,f,b)=>{p.ob("SkipLayerNormalization",o,{epsilon:f,simplified:!!b})},839141:(o,f,b)=>{p.ob("SkipLayerNormalization",o,{epsilon:f,simplified:!!b})},839243:(o,f,b,$)=>{p.ob("LayerNormalization",o,{axis:f,epsilon:b,simplified:!!$})},839354:o=>{p.ac(o)},839388:(o,f)=>p.cc(o,f,p.Cb.ec,p.Cb.errors)};function yt(o){this.name="ExitStatus",this.message=`Program terminated with exit(${o})`,this.status=o}var _r=o=>{o.terminate(),o.onmessage=()=>{}},st=o=>{le.xb.length==0&&(kt(),le.Mb(le.xb[0]));var f=le.xb.pop();if(!f)return 6;le.yb.push(f),le.ub[o.wb]=f,f.wb=o.wb;var b={cmd:"run",start_routine:o.fc,arg:o.Rb,pthread_ptr:o.wb};return W&&f.unref(),f.postMessage(b,o.mc),0},Q=0,Se=o=>{var f=wi();return o=o(),kn(f),o},ce=(o,f,...b)=>Se(()=>{for(var $=2*b.length,T=vi(8*$),z=T>>>3,U=0;U<b.length;U++){var q=b[U];typeof q=="bigint"?(Ge[z+2*U]=1n,Ge[z+2*U+1]=q):(Ge[z+2*U]=0n,w()[z+2*U+1>>>0]=q)}return yo(o,0,$,T,f)});function Oe(o){var f;if(H)return ce(0,1,o);$e=o,0<Q||(le.hc(),(f=p.onExit)==null||f.call(p,o),ie=!0),R(o,new yt(o))}var Ut=o=>{if($e=o,H)throw dn(o),"unwind";Oe(o)};function er(){for(var o=p.numThreads;o--;)kt();$r.unshift(()=>{jt++,xt(()=>zt())})}function kt(){var o=be("ort-wasm-simd-threaded.worker.js");o=new Worker(o),le.xb.push(o)}function xt(o){H?o():Promise.all(le.xb.map(le.Mb)).then(o)}var le={xb:[],yb:[],Qb:[],ub:{},Gb(){H?(le.receiveObjectTransfer=le.dc,le.threadInitTLS=le.Pb,le.setExitStatus=le.Ob):er()},Ob:o=>$e=o,pc:["$terminateWorker"],hc:()=>{for(var o of le.yb)_r(o);for(o of le.xb)_r(o);le.xb=[],le.yb=[],le.ub=[]},Nb:o=>{var f=o.wb;delete le.ub[f],le.xb.push(o),le.yb.splice(le.yb.indexOf(o),1),o.wb=0,yi(f)},dc(){},Pb(){le.Qb.forEach(o=>o())},Mb:o=>new Promise(f=>{o.onmessage=z=>{z=z.data;var U=z.cmd;if(z.targetThread&&z.targetThread!=En()){var q=le.ub[z.targetThread];q?q.postMessage(z,z.transferList):oe(`Internal error! Worker sent a message "${U}" to target pthread ${z.targetThread}, but that thread no longer exists!`)}else U==="checkMailbox"?At():U==="spawnThread"?st(z):U==="cleanupThread"?le.Nb(le.ub[z.thread]):U==="killThread"?(z=z.thread,U=le.ub[z],delete le.ub[z],_r(U),yi(z),le.yb.splice(le.yb.indexOf(U),1),U.wb=0):U==="cancelThread"?le.ub[z.thread].postMessage({cmd:"cancel"}):U==="loaded"?(o.loaded=!0,W&&!o.wb&&o.unref(),f(o)):U==="alert"?alert(`Thread ${z.threadId}: ${z.text}`):z.target==="setimmediate"?o.postMessage(z):U==="callHandler"?p[z.handler](...z.args):U&&oe(`worker sent an unknown command ${U}`)},o.onerror=z=>{throw oe(`worker sent an error! ${z.filename}:${z.lineno}: ${z.message}`),z},W&&(o.on("message",z=>o.onmessage({data:z})),o.on("error",z=>o.onerror(z)));var b=[],$=["onExit"],T;for(T of $)p.hasOwnProperty(T)&&b.push(T);o.postMessage({cmd:"load",handlers:b,urlOrBlob:p.mainScriptUrlOrBlob||a,wasmMemory:M,wasmModule:X})})};p.PThread=le;var tr=o=>{for(;0<o.length;)o.shift()(p)};p.establishStackSpace=()=>{var o=En(),f=m()[o+52>>>2>>>0];o=m()[o+56>>>2>>>0],vo(f,f-o),kn(f)};function dn(o){if(H)return ce(1,0,o);Ut(o)}p.invokeEntryPoint=(o,f)=>{Q=0,o=wo(o,f),0<Q?le.Ob(o):bi(o)};class li{constructor(f){this.Ib=f-24}Gb(f,b){m()[this.Ib+16>>>2>>>0]=0,m()[this.Ib+4>>>2>>>0]=f,m()[this.Ib+8>>>2>>>0]=b}}var pn=0;function cn(o,f,b,$){return H?ce(2,1,o,f,b,$):la(o,f,b,$)}function la(o,f,b,$){if(o>>>=0,f>>>=0,b>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return oe("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var T=[];return H&&T.length===0?cn(o,f,b,$):(o={fc:b,wb:o,Rb:$,mc:T},H?(o.oc="spawnThread",postMessage(o,T),0):st(o))}var Aa=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Nr=(o,f,b)=>{f>>>=0;var $=f+b;for(b=f;o[b]&&!(b>=$);)++b;if(16<b-f&&o.buffer&&Aa)return Aa.decode(o.buffer instanceof SharedArrayBuffer?o.slice(f,b):o.subarray(f,b));for($="";f<b;){var T=o[f++];if(T&128){var z=o[f++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|z);else{var U=o[f++]&63;T=(T&240)==224?(T&15)<<12|z<<6|U:(T&7)<<18|z<<12|U<<6|o[f++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},ht=(o,f)=>(o>>>=0)?Nr(u(),o,f):"";function hn(o,f,b){return H?ce(3,1,o,f,b):0}function rr(o,f){if(H)return ce(4,1,o,f)}var Pt=o=>{for(var f=0,b=0;b<o.length;++b){var $=o.charCodeAt(b);127>=$?f++:2047>=$?f+=2:55296<=$&&57343>=$?(f+=4,++b):f+=3}return f},Ia=(o,f,b,$)=>{if(b>>>=0,!(0<$))return 0;var T=b;$=b+$-1;for(var z=0;z<o.length;++z){var U=o.charCodeAt(z);if(55296<=U&&57343>=U){var q=o.charCodeAt(++z);U=65536+((U&1023)<<10)|q&1023}if(127>=U){if(b>=$)break;f[b++>>>0]=U}else{if(2047>=U){if(b+1>=$)break;f[b++>>>0]=192|U>>6}else{if(65535>=U){if(b+2>=$)break;f[b++>>>0]=224|U>>12}else{if(b+3>=$)break;f[b++>>>0]=240|U>>18,f[b++>>>0]=128|U>>12&63}f[b++>>>0]=128|U>>6&63}f[b++>>>0]=128|U&63}}return f[b>>>0]=0,b-T},ar=(o,f,b)=>Ia(o,u(),f,b);function Oa(o,f){if(H)return ce(5,1,o,f)}function Ra(o,f,b){if(H)return ce(6,1,o,f,b)}function fn(o,f,b){return H?ce(7,1,o,f,b):0}function da(o,f){if(H)return ce(8,1,o,f)}function mn(o,f,b){if(H)return ce(9,1,o,f,b)}function gn(o,f,b,$){if(H)return ce(10,1,o,f,b,$)}function yn(o,f,b,$){if(H)return ce(11,1,o,f,b,$)}function bn(o,f,b,$){if(H)return ce(12,1,o,f,b,$)}function za(o){if(H)return ce(13,1,o)}function Wr(o,f){if(H)return ce(14,1,o,f)}function vn(o,f,b){if(H)return ce(15,1,o,f,b)}var pa,Vt=o=>{for(var f="";u()[o>>>0];)f+=pa[u()[o++>>>0]];return f},Pa={},Ma={},nr;function di(o,f,b={}){var $=f.name;if(!o)throw new nr(`type "${$}" must have a positive integer typeid pointer`);if(Ma.hasOwnProperty(o)){if(b.Ub)return;throw new nr(`Cannot register type '${$}' twice`)}Ma[o]=f,Pa.hasOwnProperty(o)&&(f=Pa[o],delete Pa[o],f.forEach(T=>T()))}function St(o,f,b={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");return di(o,f,b)}var Ba=(o,f,b)=>{switch(f){case 1:return b?$=>n()[$>>>0]:$=>u()[$>>>0];case 2:return b?$=>d()[$>>>1>>>0]:$=>c()[$>>>1>>>0];case 4:return b?$=>h()[$>>>2>>>0]:$=>m()[$>>>2>>>0];case 8:return b?$=>Ge[$>>>3]:$=>qe[$>>>3];default:throw new TypeError(`invalid integer width (${f}): ${o}`)}},ca=[],Gt=[];function ha(o){o>>>=0,9<o&&--Gt[o+1]===0&&(Gt[o]=void 0,ca.push(o))}var bt=o=>{if(!o)throw new nr("Cannot use deleted val. handle = "+o);return Gt[o]},Mt=o=>{switch(o){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let f=ca.pop()||Gt.length;return Gt[f]=o,Gt[f+1]=1,f}};function Hr(o){return this.fromWireType(m()[o>>>2>>>0])}var pi={name:"emscripten::val",fromWireType:o=>{var f=bt(o);return ha(o),f},toWireType:(o,f)=>Mt(f),argPackAdvance:8,readValueFromPointer:Hr,Bb:null},wn=(o,f)=>{switch(f){case 4:return function(b){return this.fromWireType(g()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(w()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${o}`)}},Da=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ci=(o,f)=>{for(var b=o>>1,$=b+f/2;!(b>=$)&&c()[b>>>0];)++b;if(b<<=1,32<b-o&&Da)return Da.decode(u().slice(o,b));for(b="",$=0;!($>=f/2);++$){var T=d()[o+2*$>>>1>>>0];if(T==0)break;b+=String.fromCharCode(T)}return b},$n=(o,f,b)=>{if(b??(b=2147483647),2>b)return 0;b-=2;var $=f;b=b<2*o.length?b/2:o.length;for(var T=0;T<b;++T){var z=o.charCodeAt(T);d()[f>>>1>>>0]=z,f+=2}return d()[f>>>1>>>0]=0,f-$},_n=o=>2*o.length,fa=(o,f)=>{for(var b=0,$="";!(b>=f/4);){var T=h()[o+4*b>>>2>>>0];if(T==0)break;++b,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},hi=(o,f,b)=>{if(f>>>=0,b??(b=2147483647),4>b)return 0;var $=f;b=$+b-4;for(var T=0;T<o.length;++T){var z=o.charCodeAt(T);if(55296<=z&&57343>=z){var U=o.charCodeAt(++T);z=65536+((z&1023)<<10)|U&1023}if(h()[f>>>2>>>0]=z,f+=4,f+4>b)break}return h()[f>>>2>>>0]=0,f-$},we=o=>{for(var f=0,b=0;b<o.length;++b){var $=o.charCodeAt(b);55296<=$&&57343>=$&&++b,f+=4}return f},La=o=>{if(!ie)try{if(o(),!(0<Q))try{H?bi($e):Ut($e)}catch(f){f instanceof yt||f=="unwind"||R(1,f)}}catch(f){f instanceof yt||f=="unwind"||R(1,f)}};function kr(o){o>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(h(),o>>>2,o).value.then(At),o+=128,Atomics.store(h(),o>>>2,1))}p.__emscripten_thread_mailbox_await=kr;var At=()=>{var o=En();o&&(kr(o),La(bo))};p.checkMailbox=At;var ma=[],ga=(o,f)=>{var b=Ma[o];if(b===void 0)throw o=mo(o),b=Vt(o),yr(o),new nr(`${f} has unknown type ${b}`);return b},Na=(o,f,b)=>{var $=[];return o=o.toWireType($,b),$.length&&(m()[f>>>2>>>0]=Mt($)),o},Ur=o=>{try{o()}catch(f){Xe(f)}};function xn(){var o=de,f={};for(let[b,$]of Object.entries(o))f[b]=typeof $=="function"?(...T)=>{xr.push(b);try{return $(...T)}finally{ie||(xr.pop(),Ft&&ir===1&&xr.length===0&&(ir=0,Q+=1,Ur(_o),typeof Fibers<"u"&&Fibers.rc()))}}:$;return f}var ir=0,Ft=null,Sn=0,xr=[],Wa={},l={},y=0,v=null,x=[];function I(){return new Promise((o,f)=>{v={resolve:o,reject:f}})}function B(){var o=Tn(65548),f=o+12;m()[o>>>2>>>0]=f,m()[o+4>>>2>>>0]=f+65536,f=xr[0];var b=Wa[f];return b===void 0&&(b=y++,Wa[f]=b,l[b]=f),f=b,h()[o+8>>>2>>>0]=f,o}function V(){var o=h()[Ft+8>>>2>>>0];return o=de[l[o]],--Q,o()}function K(o){if(!ie){if(ir===0){var f=!1,b=!1;o(($=0)=>{if(!ie&&(Sn=$,f=!0,b)){ir=2,Ur(()=>xo(Ft)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),$=!1;try{var T=V()}catch(q){T=q,$=!0}var z=!1;if(!Ft){var U=v;U&&(v=null,($?U.reject:U.resolve)(T),z=!0)}if($&&!z)throw T}}),b=!0,f||(ir=1,Ft=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Ur(()=>$o(Ft)))}else ir===2?(ir=0,Ur(So),yr(Ft),Ft=null,x.forEach(La)):Xe(`invalid state: ${ir}`);return Sn}}function re(o){return K(f=>{o().then(f)})}var J=[],pe={},Me=o=>{var f=pe[o];return f===void 0?Vt(o):f},Ue=()=>typeof globalThis=="object"?globalThis:Function("return this")(),L=o=>{var f=J.length;return J.push(o),f},Ce=(o,f)=>{for(var b=Array(o),$=0;$<o;++$)b[$]=ga(m()[f+4*$>>>2>>>0],"parameter "+$);return b},Pe=(o,f)=>Object.defineProperty(f,"name",{value:o});function Sr(o){var f=Function;if(!(f instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof f} which is not a function`);var b=Pe(f.name||"unknownFunctionName",function(){});return b.prototype=f.prototype,b=new b,o=f.apply(b,o),o instanceof Object?o:b}var Cr=o=>o%4===0&&(o%100!==0||o%400===0),Js=[0,31,60,91,121,152,182,213,244,274,305,335],Zs=[0,31,59,90,120,151,181,212,243,273,304,334];function eo(o,f,b,$,T,z,U){return H?ce(16,1,o,f,b,$,T,z,U):-52}function to(o,f,b,$,T,z){if(H)return ce(17,1,o,f,b,$,T,z)}var fi=[],ro=(o,f)=>{fi.length=0;for(var b;b=u()[o++>>>0];){var $=b!=105;$&=b!=112,f+=$&&f%8?4:0,fi.push(b==112?m()[f>>>2>>>0]:b==106?Ge[f>>>3]:b==105?h()[f>>>2>>>0]:w()[f>>>3>>>0]),f+=$?8:4}return fi},mi={},ao=()=>{if(!gi){var o={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:O||"./this.program"},f;for(f in mi)mi[f]===void 0?delete o[f]:o[f]=mi[f];var b=[];for(f in o)b.push(`${f}=${o[f]}`);gi=b}return gi},gi;function no(o,f){if(H)return ce(18,1,o,f);o>>>=0,f>>>=0;var b=0;return ao().forEach(($,T)=>{var z=f+b;for(T=m()[o+4*T>>>2>>>0]=z,z=0;z<$.length;++z)n()[T++>>>0]=$.charCodeAt(z);n()[T>>>0]=0,b+=$.length+1}),0}function io(o,f){if(H)return ce(19,1,o,f);o>>>=0,f>>>=0;var b=ao();m()[o>>>2>>>0]=b.length;var $=0;return b.forEach(T=>$+=T.length+1),m()[f>>>2>>>0]=$,0}function so(o){return H?ce(20,1,o):52}function oo(o,f,b,$){return H?ce(21,1,o,f,b,$):52}function uo(o,f,b,$){return H?ce(22,1,o,f,b,$):70}var Ff=[null,[],[]];function lo(o,f,b,$){if(H)return ce(23,1,o,f,b,$);f>>>=0,b>>>=0,$>>>=0;for(var T=0,z=0;z<b;z++){var U=m()[f>>>2>>>0],q=m()[f+4>>>2>>>0];f+=8;for(var se=0;se<q;se++){var ee=u()[U+se>>>0],me=Ff[o];ee===0||ee===10?((o===1?ne:oe)(Nr(me,0)),me.length=0):me.push(ee)}T+=q}return m()[$>>>2>>>0]=T,0}var po=[31,29,31,30,31,30,31,31,30,31,30,31],co=[31,28,31,30,31,30,31,31,30,31,30,31];function qf(o){var f=Array(Pt(o)+1);return Ia(o,f,0,f.length),f}var jf=(o,f)=>{n().set(o,f>>>0)};function ho(o,f,b,$){function T(N,Te,Ne){for(N=typeof N=="number"?N.toString():N||"";N.length<Te;)N=Ne[0]+N;return N}function z(N,Te){return T(N,Te,"0")}function U(N,Te){function Ne(Eo){return 0>Eo?-1:0<Eo?1:0}var Vr;return(Vr=Ne(N.getFullYear()-Te.getFullYear()))===0&&(Vr=Ne(N.getMonth()-Te.getMonth()))===0&&(Vr=Ne(N.getDate()-Te.getDate())),Vr}function q(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function se(N){var Te=N.zb;for(N=new Date(new Date(N.Ab+1900,0,1).getTime());0<Te;){var Ne=N.getMonth(),Vr=(Cr(N.getFullYear())?po:co)[Ne];if(Te>Vr-N.getDate())Te-=Vr-N.getDate()+1,N.setDate(1),11>Ne?N.setMonth(Ne+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+Te);break}}return Ne=new Date(N.getFullYear()+1,0,4),Te=q(new Date(N.getFullYear(),0,4)),Ne=q(Ne),0>=U(Te,N)?0>=U(Ne,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}o>>>=0,f>>>=0,b>>>=0,$>>>=0;var ee=m()[$+40>>>2>>>0];$={kc:h()[$>>>2>>>0],jc:h()[$+4>>>2>>>0],Eb:h()[$+8>>>2>>>0],Jb:h()[$+12>>>2>>>0],Fb:h()[$+16>>>2>>>0],Ab:h()[$+20>>>2>>>0],vb:h()[$+24>>>2>>>0],zb:h()[$+28>>>2>>>0],qc:h()[$+32>>>2>>>0],ic:h()[$+36>>>2>>>0],lc:ee?ht(ee):""},b=ht(b),ee={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in ee)b=b.replace(new RegExp(me,"g"),ee[me]);var Ve="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ke="January February March April May June July August September October November December".split(" ");ee={"%a":N=>Ve[N.vb].substring(0,3),"%A":N=>Ve[N.vb],"%b":N=>Ke[N.Fb].substring(0,3),"%B":N=>Ke[N.Fb],"%C":N=>z((N.Ab+1900)/100|0,2),"%d":N=>z(N.Jb,2),"%e":N=>T(N.Jb,2," "),"%g":N=>se(N).toString().substring(2),"%G":se,"%H":N=>z(N.Eb,2),"%I":N=>(N=N.Eb,N==0?N=12:12<N&&(N-=12),z(N,2)),"%j":N=>{for(var Te=0,Ne=0;Ne<=N.Fb-1;Te+=(Cr(N.Ab+1900)?po:co)[Ne++]);return z(N.Jb+Te,3)},"%m":N=>z(N.Fb+1,2),"%M":N=>z(N.jc,2),"%n":()=>`
`,"%p":N=>0<=N.Eb&&12>N.Eb?"AM":"PM","%S":N=>z(N.kc,2),"%t":()=>"	","%u":N=>N.vb||7,"%U":N=>z(Math.floor((N.zb+7-N.vb)/7),2),"%V":N=>{var Te=Math.floor((N.zb+7-(N.vb+6)%7)/7);if(2>=(N.vb+371-N.zb-2)%7&&Te++,Te)Te==53&&(Ne=(N.vb+371-N.zb)%7,Ne==4||Ne==3&&Cr(N.Ab)||(Te=1));else{Te=52;var Ne=(N.vb+7-N.zb-1)%7;(Ne==4||Ne==5&&Cr(N.Ab%400-1))&&Te++}return z(Te,2)},"%w":N=>N.vb,"%W":N=>z(Math.floor((N.zb+7-(N.vb+6)%7)/7),2),"%y":N=>(N.Ab+1900).toString().substring(2),"%Y":N=>N.Ab+1900,"%z":N=>{N=N.ic;var Te=0<=N;return N=Math.abs(N)/60,(Te?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0");for(me in ee)b.includes(me)&&(b=b.replace(new RegExp(me,"g"),ee[me]($)));return b=b.replace(/\0\0/g,"%"),me=qf(b),me.length>f?0:(jf(me,o),me.length-1)}le.Gb();for(var fo=Array(256),Cn=0;256>Cn;++Cn)fo[Cn]=String.fromCharCode(Cn);pa=fo,nr=p.BindingError=class extends Error{constructor(o){super(o),this.name="BindingError"}},p.InternalError=class extends Error{constructor(o){super(o),this.name="InternalError"}},Gt.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>Gt.length/2-5-ca.length;var Kf=[Oe,dn,cn,hn,rr,Oa,Ra,fn,da,mn,gn,yn,bn,za,Wr,vn,eo,to,no,io,so,oo,uo,lo],Yf={ua:function(o,f,b){return re(async()=>{await p.Zb(o,f,b)})},b:function(o,f,b){throw o>>>=0,new li(o).Gb(f>>>0,b>>>0),pn=o,pn},ia:function(o){go(o>>>0,!P,1,!k,131072,!1),le.Pb()},G:function(o){o>>>=0,H?postMessage({cmd:"cleanupThread",thread:o}):le.Nb(le.ub[o])},_:la,A:hn,pa:rr,W:Oa,Y:Ra,qa:fn,na:da,fa:mn,ma:gn,K:yn,X:bn,U:za,oa:Wr,V:vn,E:function(o,f,b){o>>>=0,b>>>=0,f=Vt(f>>>0),St(o,{name:f,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:Ba(f,b,f.indexOf("u")==-1),Bb:null})},O:function(o,f,b,$){o>>>=0,f=Vt(f>>>0),St(o,{name:f,fromWireType:function(T){return!!T},toWireType:function(T,z){return z?b:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(u()[T>>>0])},Bb:null})},N:function(o){return St(o>>>0,pi)},D:function(o,f,b){o>>>=0,b>>>=0,f=Vt(f>>>0),St(o,{name:f,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:wn(f,b),Bb:null})},t:function(o,f,b,$,T){if(o>>>=0,b>>>=0,f=Vt(f>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var z=32-8*b;T=q=>q<<z>>>z}var U=f.includes("unsigned")?function(q,se){return se>>>0}:function(q,se){return se};St(o,{name:f,fromWireType:T,toWireType:U,argPackAdvance:8,readValueFromPointer:Ba(f,b,$!==0),Bb:null})},p:function(o,f,b){function $(z){var U=m()[z>>>2>>>0];return z=m()[z+4>>>2>>>0],new T(n().buffer,z,U)}o>>>=0;var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];b=Vt(b>>>0),St(o,{name:b,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{Ub:!0})},F:function(o,f){o>>>=0,f=Vt(f>>>0);var b=f==="std::string";St(o,{name:f,fromWireType:function($){var T=m()[$>>>2>>>0],z=$+4;if(b)for(var U=z,q=0;q<=T;++q){var se=z+q;if(q==T||u()[se>>>0]==0){if(U=ht(U,se-U),ee===void 0)var ee=U;else ee+="\0",ee+=U;U=se+1}}else{for(ee=Array(T),q=0;q<T;++q)ee[q]=String.fromCharCode(u()[z+q>>>0]);ee=ee.join("")}return yr($),ee},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var z=typeof T=="string";if(!(z||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new nr("Cannot pass non-string to std::string");var U=b&&z?Pt(T):T.length,q=Tn(4+U+1),se=q+4;if(m()[q>>>2>>>0]=U,b&&z)ar(T,se,U+1);else if(z)for(z=0;z<U;++z){var ee=T.charCodeAt(z);if(255<ee)throw yr(se),new nr("String has UTF-16 code units that do not fit in 8 bits");u()[se+z>>>0]=ee}else for(z=0;z<U;++z)u()[se+z>>>0]=T[z];return $!==null&&$.push(yr,q),q},argPackAdvance:8,readValueFromPointer:Hr,Bb($){yr($)}})},z:function(o,f,b){if(o>>>=0,f>>>=0,b>>>=0,b=Vt(b),f===2)var $=ci,T=$n,z=_n,U=q=>c()[q>>>1>>>0];else f===4&&($=fa,T=hi,z=we,U=q=>m()[q>>>2>>>0]);St(o,{name:b,fromWireType:q=>{for(var se=m()[q>>>2>>>0],ee,me=q+4,Ve=0;Ve<=se;++Ve){var Ke=q+4+Ve*f;(Ve==se||U(Ke)==0)&&(me=$(me,Ke-me),ee===void 0?ee=me:(ee+="\0",ee+=me),me=Ke+f)}return yr(q),ee},toWireType:(q,se)=>{if(typeof se!="string")throw new nr(`Cannot pass non-string to C++ string type ${b}`);var ee=z(se),me=Tn(4+ee+f);return m()[me>>>2>>>0]=ee/f,T(se,me+4,ee+f),q!==null&&q.push(yr,me),me},argPackAdvance:8,readValueFromPointer:Hr,Bb(q){yr(q)}})},P:function(o,f){o>>>=0,f=Vt(f>>>0),St(o,{Vb:!0,name:f,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(o,f){o>>>=0,o==f>>>0?setTimeout(At):H?postMessage({targetThread:o,cmd:"checkMailbox"}):(o=le.ub[o])&&o.postMessage({cmd:"checkMailbox"})},$:function(o,f,b,$,T){f>>>=0,b>>>=0,$/=2,ma.length=$,T=T>>>0>>>3;for(var z=0;z<$;z++)ma[z]=Ge[T+2*z]?Ge[T+2*z+1]:w()[T+2*z+1>>>0];return o=f?je[f]:Kf[o],le.Sb=b,b=o(...ma),le.Sb=0,b},ha:kr,sa:function(o){W&&le.ub[o>>>0].ref()},w:function(o,f,b){return f>>>=0,b>>>=0,o=bt(o>>>0),f=ga(f,"emval::as"),Na(f,b,o)},y:function(o){return o>>>=0,re(()=>(o=bt(o),o.then(Mt)))},o:function(o,f,b,$){return b>>>=0,$>>>=0,o=J[o>>>0],f=bt(f>>>0),o(null,f,b,$)},k:function(o,f,b,$,T){return b>>>=0,$>>>=0,T>>>=0,o=J[o>>>0],f=bt(f>>>0),b=Me(b),o(f,f[b],$,T)},c:ha,C:function(o,f){return f>>>=0,o=bt(o>>>0),f=bt(f),o==f},n:function(o){return o>>>=0,o===0?Mt(Ue()):(o=Me(o),Mt(Ue()[o]))},j:function(o,f,b){f=Ce(o,f>>>0);var $=f.shift();o--;var T=`return function (obj, func, destructorsRef, args) {
`,z=0,U=[];b===0&&U.push("obj");for(var q=["retType"],se=[$],ee=0;ee<o;++ee)U.push("arg"+ee),q.push("argType"+ee),se.push(f[ee]),T+=`  var arg${ee} = argType${ee}.readValueFromPointer(args${z?"+"+z:""});
`,z+=f[ee].argPackAdvance;return T+=`  var rv = ${b===1?"new func":"func.call"}(${U.join(", ")});
`,$.Vb||(q.push("emval_returnValue"),se.push(Na),T+=`  return emval_returnValue(retType, destructorsRef, rv);
`),q.push(T+`};
`),o=Sr(q)(...se),b=`methodCaller<(${f.map(me=>me.name).join(", ")}) => ${$.name}>`,L(Pe(b,o))},s:function(o,f){return f>>>=0,o=bt(o>>>0),f=bt(f),Mt(o[f])},d:function(o){o>>>=0,9<o&&(Gt[o+1]+=1)},v:function(){return Mt([])},m:function(o){o=bt(o>>>0);for(var f=Array(o.length),b=0;b<o.length;b++)f[b]=o[b];return Mt(f)},g:function(o){return Mt(Me(o>>>0))},l:function(){return Mt({})},i:function(o){o>>>=0;for(var f=bt(o);f.length;){var b=f.pop();f.pop()(b)}ha(o)},h:function(o,f,b){f>>>=0,b>>>=0,o=bt(o>>>0),f=bt(f),b=bt(b),o[f]=b},e:function(o,f){return f>>>=0,o=ga(o>>>0,"_emval_take_value"),o=o.readValueFromPointer(f),Mt(o)},ca:function(o,f){o=-9007199254740992>o||9007199254740992<o?NaN:Number(o),f>>>=0,o=new Date(1e3*o),h()[f>>>2>>>0]=o.getUTCSeconds(),h()[f+4>>>2>>>0]=o.getUTCMinutes(),h()[f+8>>>2>>>0]=o.getUTCHours(),h()[f+12>>>2>>>0]=o.getUTCDate(),h()[f+16>>>2>>>0]=o.getUTCMonth(),h()[f+20>>>2>>>0]=o.getUTCFullYear()-1900,h()[f+24>>>2>>>0]=o.getUTCDay(),o=(o.getTime()-Date.UTC(o.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,h()[f+28>>>2>>>0]=o},da:function(o,f){o=-9007199254740992>o||9007199254740992<o?NaN:Number(o),f>>>=0,o=new Date(1e3*o),h()[f>>>2>>>0]=o.getSeconds(),h()[f+4>>>2>>>0]=o.getMinutes(),h()[f+8>>>2>>>0]=o.getHours(),h()[f+12>>>2>>>0]=o.getDate(),h()[f+16>>>2>>>0]=o.getMonth(),h()[f+20>>>2>>>0]=o.getFullYear()-1900,h()[f+24>>>2>>>0]=o.getDay();var b=(Cr(o.getFullYear())?Js:Zs)[o.getMonth()]+o.getDate()-1|0;h()[f+28>>>2>>>0]=b,h()[f+36>>>2>>>0]=-(60*o.getTimezoneOffset()),b=new Date(o.getFullYear(),6,1).getTimezoneOffset();var $=new Date(o.getFullYear(),0,1).getTimezoneOffset();o=(b!=$&&o.getTimezoneOffset()==Math.min($,b))|0,h()[f+32>>>2>>>0]=o},ea:function(o){o>>>=0;var f=new Date(h()[o+20>>>2>>>0]+1900,h()[o+16>>>2>>>0],h()[o+12>>>2>>>0],h()[o+8>>>2>>>0],h()[o+4>>>2>>>0],h()[o>>>2>>>0],0),b=h()[o+32>>>2>>>0],$=f.getTimezoneOffset(),T=new Date(f.getFullYear(),6,1).getTimezoneOffset(),z=new Date(f.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(z,T);return 0>b?h()[o+32>>>2>>>0]=+(T!=z&&U==$):0<b!=(U==$)&&(T=Math.max(z,T),f.setTime(f.getTime()+6e4*((0<b?U:T)-$))),h()[o+24>>>2>>>0]=f.getDay(),b=(Cr(f.getFullYear())?Js:Zs)[f.getMonth()]+f.getDate()-1|0,h()[o+28>>>2>>>0]=b,h()[o>>>2>>>0]=f.getSeconds(),h()[o+4>>>2>>>0]=f.getMinutes(),h()[o+8>>>2>>>0]=f.getHours(),h()[o+12>>>2>>>0]=f.getDate(),h()[o+16>>>2>>>0]=f.getMonth(),h()[o+20>>>2>>>0]=f.getYear(),o=f.getTime(),BigInt(isNaN(o)?-1:o/1e3)},aa:eo,ba:to,R:function(o,f,b,$){o>>>=0,f>>>=0,b>>>=0,$>>>=0;var T=new Date().getFullYear(),z=new Date(T,0,1),U=new Date(T,6,1);T=z.getTimezoneOffset();var q=U.getTimezoneOffset(),se=Math.max(T,q);m()[o>>>2>>>0]=60*se,h()[f>>>2>>>0]=+(T!=q),o=ee=>ee.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],z=o(z),U=o(U),q<T?(ar(z,b,17),ar(U,$,17)):(ar(z,$,17),ar(U,b,17))},q:()=>{Xe("")},f:function(o,f,b){return o>>>=0,f=ro(f>>>0,b>>>0),je[o](...f)},M:function(o,f,b){return o>>>=0,f=ro(f>>>0,b>>>0),je[o](...f)},H:()=>{},L:()=>Date.now(),ra:()=>{throw Q+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>W?(km(),ta(Cp)).cpus().length:navigator.hardwareConcurrency,Q:function(o){o>>>=0;var f=u().length;if(o<=f||4294901760<o)return!1;for(var b=1;4>=b;b*=2){var $=f*(1+.2/b);$=Math.min($,o+100663296);var T=Math;$=Math.max(o,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-M.buffer.byteLength+65535)/65536;try{M.grow(T),Le();var z=1;break e}catch{}z=void 0}if(z)return!0}return!1},ja:no,la:io,Z:Ut,B:so,J:oo,ga:uo,I:lo,a:M||p.wasmMemory,ka:ho,r:function(o,f,b,$){return ho(o>>>0,f>>>0,b>>>0,$>>>0)}},de=function(){function o(b,$){return de=b.exports,de=xn(),de=Xf(),le.Qb.push(de.cb),Zt.unshift(de.va),X=$,zt(),de}var f={a:Yf};if(jt++,p.instantiateWasm)try{return p.instantiateWasm(f,o)}catch(b){oe(`Module.instantiateWasm callback failed with error: ${b}`),C(b)}return ct(f,function(b){o(b.instance,b.module)}).catch(C),{}}(),mo=o=>(mo=de.wa)(o);p.__embind_initialize_bindings=()=>(p.__embind_initialize_bindings=de.xa)(),p._OrtInit=(o,f)=>(p._OrtInit=de.ya)(o,f),p._OrtGetLastError=(o,f)=>(p._OrtGetLastError=de.za)(o,f),p._OrtCreateSessionOptions=(o,f,b,$,T,z,U,q,se,ee)=>(p._OrtCreateSessionOptions=de.Aa)(o,f,b,$,T,z,U,q,se,ee),p._OrtAppendExecutionProvider=(o,f)=>(p._OrtAppendExecutionProvider=de.Ba)(o,f),p._OrtAddFreeDimensionOverride=(o,f,b)=>(p._OrtAddFreeDimensionOverride=de.Ca)(o,f,b),p._OrtAddSessionConfigEntry=(o,f,b)=>(p._OrtAddSessionConfigEntry=de.Da)(o,f,b),p._OrtReleaseSessionOptions=o=>(p._OrtReleaseSessionOptions=de.Ea)(o),p._OrtCreateSession=(o,f,b)=>(p._OrtCreateSession=de.Fa)(o,f,b),p._OrtReleaseSession=o=>(p._OrtReleaseSession=de.Ga)(o),p._OrtGetInputOutputCount=(o,f,b)=>(p._OrtGetInputOutputCount=de.Ha)(o,f,b),p._OrtGetInputName=(o,f)=>(p._OrtGetInputName=de.Ia)(o,f),p._OrtGetOutputName=(o,f)=>(p._OrtGetOutputName=de.Ja)(o,f),p._OrtFree=o=>(p._OrtFree=de.Ka)(o),p._OrtCreateTensor=(o,f,b,$,T,z)=>(p._OrtCreateTensor=de.La)(o,f,b,$,T,z),p._OrtGetTensorData=(o,f,b,$,T)=>(p._OrtGetTensorData=de.Ma)(o,f,b,$,T),p._OrtReleaseTensor=o=>(p._OrtReleaseTensor=de.Na)(o),p._OrtCreateRunOptions=(o,f,b,$)=>(p._OrtCreateRunOptions=de.Oa)(o,f,b,$),p._OrtAddRunConfigEntry=(o,f,b)=>(p._OrtAddRunConfigEntry=de.Pa)(o,f,b),p._OrtReleaseRunOptions=o=>(p._OrtReleaseRunOptions=de.Qa)(o),p._OrtCreateBinding=o=>(p._OrtCreateBinding=de.Ra)(o),p._OrtBindInput=(o,f,b)=>(p._OrtBindInput=de.Sa)(o,f,b),p._OrtBindOutput=(o,f,b,$)=>(p._OrtBindOutput=de.Ta)(o,f,b,$),p._OrtClearBoundOutputs=o=>(p._OrtClearBoundOutputs=de.Ua)(o),p._OrtReleaseBinding=o=>(p._OrtReleaseBinding=de.Va)(o),p._OrtRunWithBinding=(o,f,b,$,T)=>(p._OrtRunWithBinding=de.Wa)(o,f,b,$,T),p._OrtRun=(o,f,b,$,T,z,U,q)=>(p._OrtRun=de.Xa)(o,f,b,$,T,z,U,q),p._OrtEndProfiling=o=>(p._OrtEndProfiling=de.Ya)(o),p._JsepOutput=(o,f,b)=>(p._JsepOutput=de.Za)(o,f,b),p._JsepGetNodeName=o=>(p._JsepGetNodeName=de._a)(o);var En=p._pthread_self=()=>(En=p._pthread_self=de.$a)(),Tn=p._malloc=o=>(Tn=p._malloc=de.ab)(o),yr=p._free=o=>(yr=p._free=de.bb)(o);p.__emscripten_tls_init=()=>(p.__emscripten_tls_init=de.cb)();var go=p.__emscripten_thread_init=(o,f,b,$,T,z)=>(go=p.__emscripten_thread_init=de.eb)(o,f,b,$,T,z);p.__emscripten_thread_crashed=()=>(p.__emscripten_thread_crashed=de.fb)();var yo=(o,f,b,$,T)=>(yo=de.gb)(o,f,b,$,T),yi=o=>(yi=de.hb)(o),bi=p.__emscripten_thread_exit=o=>(bi=p.__emscripten_thread_exit=de.ib)(o),bo=()=>(bo=de.jb)(),vo=(o,f)=>(vo=de.kb)(o,f),kn=o=>(kn=de.lb)(o),vi=o=>(vi=de.mb)(o),wi=()=>(wi=de.nb)(),wo=p.dynCall_ii=(o,f)=>(wo=p.dynCall_ii=de.pb)(o,f),$o=o=>($o=de.qb)(o),_o=()=>(_o=de.rb)(),xo=o=>(xo=de.sb)(o),So=()=>(So=de.tb)();p.___start_em_js=839500,p.___stop_em_js=839661;function Xf(){var o=de;o=Object.assign({},o);var f=$=>T=>$(T)>>>0,b=$=>()=>$()>>>0;return o.wa=f(o.wa),o.$a=b(o.$a),o.ab=f(o.ab),o.emscripten_main_runtime_thread_id=b(o.emscripten_main_runtime_thread_id),o.mb=f(o.mb),o.nb=b(o.nb),o}p.wasmMemory=M,p.stackSave=()=>wi(),p.stackRestore=o=>kn(o),p.stackAlloc=o=>vi(o),p.keepRuntimeAlive=()=>0<Q,p.UTF8ToString=ht,p.stringToUTF8=ar,p.lengthBytesUTF8=Pt,p.ExitStatus=yt,p.PThread=le;var An;Kt=function o(){An||Co(),An||(Kt=o)};function Co(){if(!(0<jt))if(H)_(p),H||tr(Zt),startWorker(p);else{if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)$r.unshift(p.preRun.shift());tr($r),0<jt||An||(An=!0,p.calledRun=!0,ie||(H||tr(Zt),_(p),H||tr(qt)))}}return Co(),E}})();typeof e=="object"&&typeof t=="object"?t.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),Im=Ta((e,t)=>{t.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\n'}),Io,Oo,Si,Rn,Va,Ci,Ro,zo,Po,Tp,ft,un=Y(()=>{Io=Cm(),Oo=Am(),Rn=!1,Va=!1,Ci=!1,Ro=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},zo=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Po=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Tp=async e=>{if(Rn)return Promise.resolve();if(Va)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ci)throw new Error("previous call to 'initializeWebAssembly()' failed.");Va=!0;let t=e.initTimeout,r=e.numThreads,a=e.simd,i=Ro(r),s=a&&zo(),n=e.wasmPaths,u=typeof n=="string"?n:void 0,d=Po(s,i),c=typeof n=="object"?n[d]:void 0,h=!1,m=[];if(t>0&&m.push(new Promise(g=>{setTimeout(()=>{h=!0,g()},t)})),m.push(new Promise((g,w)=>{let p=i?Oo:Io,_={locateFile:(C,E)=>{if(i&&C.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Im()],{type:"text/javascript"}));if(C.endsWith(".wasm")){if(c)return c;let S=u??E;return d==="ort-wasm-simd.wasm"?S+"ort-wasm-simd.jsep.wasm":d==="ort-wasm-simd-threaded.wasm"?S+"ort-wasm-simd-threaded.jsep.wasm":S+d}return E+C}};if(i)if(_.numThreads=r,typeof Blob>"u")_.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let C=`var ortWasmThreaded=${p.toString()};`;_.mainScriptUrlOrBlob=new Blob([C],{type:"text/javascript"})}p(_).then(C=>{Va=!1,Rn=!0,Si=C,g()},C=>{Va=!1,Ci=!0,w(C)})})),await Promise.race(m),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},ft=()=>{if(Rn&&Si)return Si;throw new Error("WebAssembly is not initialized yet.")}}),dt,Qn,Je,zs=Y(()=>{un(),dt=(e,t)=>{let r=ft(),a=r.lengthBytesUTF8(e)+1,i=r._malloc(a);return r.stringToUTF8(e,i,a),t.push(i),i},Qn=(e,t,r,a)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,s])=>{let n=t?t+i:i;if(typeof s=="object")Qn(s,n+".",r,a);else if(typeof s=="string"||typeof s=="number")a(n,s.toString());else if(typeof s=="boolean")a(n,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Je=e=>{let t=ft(),r=t.stackSave();try{let a=t.stackAlloc(8);t._OrtGetLastError(a,a+4);let i=t.HEAP32[a/4],s=t.HEAPU32[a/4+1],n=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${n}`)}finally{t.stackRestore(r)}}}),kp,Om=Y(()=>{un(),zs(),kp=e=>{let t=ft(),r=0,a=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let s=0;return(e==null?void 0:e.tag)!==void 0&&(s=dt(e.tag,a)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,s),r===0&&Je("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&Qn(e.extra,"",new WeakSet,(n,u)=>{let d=dt(n,a),c=dt(u,a);t._OrtAddRunConfigEntry(r,d,c)!==0&&Je(`Can't set a run config entry: ${n} - ${u}.`)}),[r,a]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),a.forEach(n=>t._free(n)),s}}}),Mo,Bo,Do,Lo,Ap,Rm=Y(()=>{un(),zs(),Mo=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Bo=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Do=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Lo=(e,t,r)=>{for(let a of t){let i=typeof a=="string"?a:a.name;switch(i){case"webnn":if(i="WEBNN",typeof a!="string"){let n=a;if(n!=null&&n.deviceType){let u=dt("deviceType",r),d=dt(n.deviceType,r);ft()._OrtAddSessionConfigEntry(e,u,d)!==0&&Je(`Can't set a session config entry: 'deviceType' - ${n.deviceType}.`)}if(n!=null&&n.numThreads){let u=n.numThreads;(typeof u!="number"||!Number.isInteger(u)||u<0)&&(u=0);let d=dt("numThreads",r),c=dt(u.toString(),r);ft()._OrtAddSessionConfigEntry(e,d,c)!==0&&Je(`Can't set a session config entry: 'numThreads' - ${n.numThreads}.`)}if(n!=null&&n.powerPreference){let u=dt("powerPreference",r),d=dt(n.powerPreference,r);ft()._OrtAddSessionConfigEntry(e,u,d)!==0&&Je(`Can't set a session config entry: 'powerPreference' - ${n.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof a!="string"){let n=a;if(n!=null&&n.preferredLayout){if(n.preferredLayout!=="NCHW"&&n.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${n.preferredLayout}`);let u=dt("preferredLayout",r),d=dt(n.preferredLayout,r);ft()._OrtAddSessionConfigEntry(e,u,d)!==0&&Je(`Can't set a session config entry: 'preferredLayout' - ${n.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let s=dt(i,r);ft()._OrtAppendExecutionProvider(e,s)!==0&&Je(`Can't append execution provider: ${i}.`)}},Ap=e=>{let t=ft(),r=0,a=[],i=e||{};Do(i);try{let s=Mo(i.graphOptimizationLevel??"all"),n=Bo(i.executionMode??"sequential"),u=typeof i.logId=="string"?dt(i.logId,a):0,d=i.logSeverityLevel??2;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log serverity level is not valid: ${d}`);let c=i.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let h=typeof i.optimizedModelFilePath=="string"?dt(i.optimizedModelFilePath,a):0;if(r=t._OrtCreateSessionOptions(s,!!i.enableCpuMemArena,!!i.enableMemPattern,n,!!i.enableProfiling,0,u,d,c,h),r===0&&Je("Can't create session options."),i.executionProviders&&Lo(r,i.executionProviders,a),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let m=dt("enableGraphCapture",a),g=dt(i.enableGraphCapture.toString(),a);t._OrtAddSessionConfigEntry(r,m,g)!==0&&Je(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[m,g]of Object.entries(i.freeDimensionOverrides)){if(typeof m!="string")throw new Error(`free dimension override name must be a string: ${m}`);if(typeof g!="number"||!Number.isInteger(g)||g<0)throw new Error(`free dimension override value must be a non-negative integer: ${g}`);let w=dt(m,a);t._OrtAddFreeDimensionOverride(r,w,g)!==0&&Je(`Can't set a free dimension override: ${m} - ${g}.`)}return i.extra!==void 0&&Qn(i.extra,"",new WeakSet,(m,g)=>{let w=dt(m,a),p=dt(g,a);t._OrtAddSessionConfigEntry(r,w,p)!==0&&Je(`Can't set a session config entry: ${m} - ${g}.`)}),[r,a]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),a.forEach(n=>t._free(n)),s}}}),rs,ea,an,Ps,Jn,Ms,as,xe=Y(()=>{rs=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},ea=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},an=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Ps=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Jn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ms=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",as=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}}),Zn,Ip=Y(()=>{Zn=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),a=[];for await(let i of r)a.push(i);return new Uint8Array(Buffer.concat(a))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),a=r?parseInt(r,10):0;if(a<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),s;try{s=new ArrayBuffer(a)}catch(u){if(u instanceof RangeError){let d=Math.ceil(a/65536);s=new WebAssembly.Memory({initial:d,maximum:d}).buffer}else throw u}let n=0;for(;;){let{done:u,value:d}=await i.read();if(u)break;let c=d.byteLength;new Uint8Array(s,n,c).set(d),n+=c}return new Uint8Array(s,0,a)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),No,Wo,Ho,Uo,Op,Vo,pt,oa=Y(()=>{xe(),No=["V","I","W","E","F"],Wo=(e,t)=>{console.log(`[${No[e]},${new Date().toISOString()}]${t}`)},Op=(e,t)=>{Ho=e,Uo=t},Vo=(e,t)=>{let r=Jn(e),a=Jn(Ho);r>=a&&Wo(r,typeof t=="function"?t():t)},pt=(...e)=>{Uo&&Vo(...e)}}),Rp,zm=Y(()=>{xe(),Rp=(e,t)=>new(Ps(t))(e)}),Bs=Y(()=>{}),Ei,zn,Pn,Go,Fo,Ti,ns,qo,zp,Pm=Y(()=>{oa(),Bs(),Ei=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),zn=[],Pn=e=>Math.ceil(e/16)*16,Go=e=>{for(let t=0;t<zn.length;t++){let r=zn[t];if(e<=r)return r}return Math.ceil(e/16)*16},Fo=1,Ti=()=>Fo++,ns=async(e,t,r,a)=>{let i=Pn(r),s=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let n=e.getCommandEncoder();e.endComputePass(),n.copyBufferToBuffer(t,0,s,0,i),e.flush(),await s.mapAsync(GPUMapMode.READ);let u=s.getMappedRange();if(a){let d=a();return d.set(new Uint8Array(u,0,r)),d}else return new Uint8Array(u.slice(0,r))}finally{s.destroy()}},qo=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[t]of Ei)zn.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[])}upload(e,t){let r=t.buffer,a=t.byteOffset,i=t.byteLength,s=Pn(i),n=this.storageCache.get(e);if(!n)throw new Error("gpu data for uploading does not exist");if(n.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${n.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),d=u.getMappedRange();new Uint8Array(d).set(new Uint8Array(r,a,i)),u.unmap();let c=this.backend.getCommandEncoder();this.backend.endComputePass(),c.copyBufferToBuffer(u,0,n.gpuData.buffer,0,s),pt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let a=this.storageCache.get(t);if(!a)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==a.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Pn(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,a.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let a;if(r){if(a=this.externalBuffers.get(r),a===void 0)throw new Error("previous buffer is not registered");if(e===r)return pt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${a}, buffer is the same, skip.`),a;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(r)}else a=Ti();return this.storageCache.set(a,{gpuData:{id:a,type:0,buffer:e},originalSize:t}),this.externalBuffers.set(e,a),pt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${a}, registered.`),a}unregisterExternalBuffer(e){let t=this.externalBuffers.get(e);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(e),pt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=Go(e),a,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?a=u.pop():a=this.backend.device.createBuffer({size:r,usage:t}):a=this.backend.device.createBuffer({size:r,usage:t})}else a=this.backend.device.createBuffer({size:r,usage:t});let n={id:Ti(),type:0,buffer:a};return this.storageCache.set(n.id,{gpuData:n,originalSize:e}),pt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${n.id}`),n}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return pt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await ns(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Ei.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e))}},zp=(...e)=>new qo(...e)}),jo,Ze,wt=Y(()=>{jo=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ze=e=>new jo(e)}),Ko,Ca,G,ei,Pp,Ds,Ls,Ie=Y(()=>{Ko=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Ca=class{static calcShape(e,t,r=!1){let a=e.length,i=t.length;if(a===0)return t;if(i===0)return e;let s=Math.max(e.length,t.length),n=new Array(s);if(r){if(a<2||i<2)return;let u=Ko.calcMatMulShape([e[a-2],e[a-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[n[s-2],n[s-1]]=u}for(let u=r?3:1;u<=s;u++){let d=a-u<0?1:e[a-u],c=i-u<0?1:t[i-u];if(d!==c&&d>1&&c>1)return;let h=Math.max(d,c);if(d&&c)n[s-u]=Math.max(d,c);else{if(h>1)return;n[s-u]=0}}return n}static isValidBroadcast(e,t){let r=e.length,a=t.length;if(r>a)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[a-i])return!1;return!0}},G=class qn{static size(t){return qn.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let a=t.length;if(a===0)return[];let i=new Array(a),s=a-1;for(;s>=0;){if(t[s]%r===0){i[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");i[s]=1,r/=t[s],s--}for(s--;s>=0;s--)i[s]=t[s];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return qn.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return qn.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,a){let i=1;for(let s=r;s<a;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[s]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let a=new Array(r);a[r-1]=1,a[r-2]=t[r-1];for(let i=r-3;i>=0;--i)a[i]=a[i+1]*t[i+1];return a}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(a=>this.normalizeAxis(a,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(a=>t[a]):t.slice().reverse()}static padShape(t,r){let a=t.length;return t.map((i,s)=>i+r[s]+r[s+a])}static areEqual(t,r){return t.length!==r.length?!1:t.every((a,i)=>a===r[i])}},ei=class tn{static adjustPoolAttributes(t,r,a,i,s,n){if(!t&&a.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=a.length?a.push(r[u+2]):a[u]=r[u+2];for(let u=0;u<a.length;u++)if(u<i.length){if(i[u]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let u=0;u<a.length;u++)if(u<s.length){if(s[u]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let u=0;u<a.length*2;u++)if(u<n.length){if(n[u]<0)throw new Error("pad should be greater than or equal to 1")}else n.push(0);for(let u=0;u<a.length;u++){if(a[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(n[u]>=a[u]||n[u+a.length]>=a[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,a,i,s,n,u){if(u){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let d=0;d<t.length-2;d++)tn.adjustPadAndReturnShape(t[d+(n?1:2)],r[d],a[d],i[d],s,d,d+t.length-2,u)}}static computePoolOutputShape(t,r,a,i,s,n,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let d=[r[0],r[1]];return tn.computeShapeHelper(t,r,d,a,i,s,n,u),d}static computeConvOutputShape(t,r,a,i,s,n,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let d=[t[0],r[0]];return tn.computeShapeHelper(!1,t,d,a,i,s,n,u),d}static computeShapeHelper(t,r,a,i,s,n,u,d){if(t)for(let c=0;c<r.length-2;c++)a.push(1);else for(let c=0;c<r.length-2;c++)a.push(tn.adjustPadAndReturnShape(r[c+2],i[c],s[c],n[c],u,c,c+r.length-2,d))}static adjustPadAndReturnShape(t,r,a,i,s,n,u,d){let c=a*(i-1)+1;if(d&&d!=="NOTSET")switch(d){case"VALID":return s[n]=0,s[u]=0,Math.floor((t-c)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(a!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((t+r-1)/r-1)*r+i-t;return s[n]=Math.floor(d==="SAME_LOWER"?(h+1)/2:h/2),s[u]=h-s[n],Math.floor((t+h-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[n]+s[u]-c)/r+1)}},Pp=class{static getShapeOfGemmResult(e,t,r,a,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,n,u;t?(s=e[1],n=e[0]):(s=e[0],n=e[1]);let d=-1;if(a?(u=r[0],d=1):(u=r[1],d=0),r[d]!==n)throw new Error("dimension mismatch");if(s<=0||u<=0||n<=0)throw new Error("invalid shape specified");if(i&&!Ca.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,n]}},Ds=-34028234663852886e22,Ls=34028234663852886e22}),Ea,Mn,_t,Nt,ye,mt,Er,wa,Lr,Ee,Bn,F,he,Ns,Yo,Mp,nn,ke=Y(()=>{xe(),Ie(),Ea=64,Mn=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},_t=(e,t=1)=>{let r=Mn(e,t);return typeof r=="string"?r:r[0]},Nt=(e,t=1)=>{let r=Mn(e,t);return typeof r=="string"?r:r[1]},ye=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:G.computeStrides(r)})}),t},mt=e=>e%4===0?4:e%2===0?2:1,Er=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,wa=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Lr=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Ee=(e,t,r,a)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?a==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:a==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Bn=(e,t,r,a,i)=>{let s=typeof r=="number",n=s?r:r.length,u=[...new Array(n).keys()],d=n<2?"u32":n<=4?`vec${n}<u32>`:`array<u32, ${n}>`,c=Mn(t,i),h=typeof c=="string"?c:c[1],m=typeof c=="string"?c:c[0],g={indices:d,value:h,storage:m,tensor:t},w=M=>typeof M=="string"?M:`${M}u`,p={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},_=s?"uniforms.":"",C=`${_}${e}_shape`,E=`${_}${e}_strides`,S="";for(let M=0;M<n-1;M++)S+=`
    let dim${M} = current / ${Ee(E,M,n)};
    let rest${M} = current % ${Ee(E,M,n)};
    indices[${M}] = dim${M};
    current = rest${M};
    `;S+=`indices[${n-1}] = current;`;let A=n<2?"":`
  fn o2i_${e}(offset: u32) -> ${g.indices} {
    var indices: ${g.indices};
    var current = offset;
    ${S}
    return indices;
  }`,O=M=>(p.offsetToIndices=!0,n<2?M:`o2i_${e}(${M})`),R=[];if(n>=2)for(let M=n-1;M>=0;M--)R.push(`${Ee(E,M,n)} * (indices[${M}])`);let k=n<2?"":`
  fn i2o_${e}(indices: ${g.indices}) -> u32 {
    return ${R.join("+")};
  }`,P=M=>(p.indicesToOffset=!0,n<2?M:`i2o_${e}(${M})`),W=(...M)=>n===0?"0u":`${g.indices}(${M.map(w).join(",")})`,H=(M,X)=>n<2?`${M}`:`${Ee(M,X,n)}`,j=(M,X,ie)=>n<2?`${M}=${ie};`:`${Ee(M,X,n)}=${ie};`,be={},te=(M,X)=>{p.broadcastedIndicesToOffset=!0;let ie=`${X.name}broadcastedIndicesTo${e}Offset`;if(ie in be)return`${ie}(${M})`;let $e=[];for(let Ae=n-1;Ae>=0;Ae--){let ze=X.indicesGet("outputIndices",Ae+X.rank-n);$e.push(`${H(E,Ae)} * (${ze} % ${H(C,Ae)})`)}return be[ie]=`fn ${ie}(outputIndices: ${X.type.indices}) -> u32 {
             return ${$e.length>0?$e.join("+"):"0u"};
           }`,`${ie}(${M})`},ae=(M,X)=>(()=>{if(g.storage===g.value)return`${e}[${M}]=${X};`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`${e}[${M}]=vec2<u32>(u32(${X}), select(0u, 0xFFFFFFFFu, ${X} < 0));`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`${e}[${M}]=vec2<u32>(u32(${X}), 0u);`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`${e}[${M}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${X}));`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),fe=M=>(()=>{if(g.storage===g.value)return`${e}[${M}]`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`i32(${e}[${M}].x)`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`u32(${e}[${M}].x)`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${M}] & 0xFFu), bool(${e}[${M}] & 0xFF00u), bool(${e}[${M}] & 0xFF0000u), bool(${e}[${M}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),ve=n<2?"":`
  fn get_${e}ByIndices(indices: ${g.indices}) -> ${h} {
    return ${fe(`i2o_${e}(indices)`)};
  }`,D=n<2?"":(()=>{let M=u.map(ie=>`d${ie}: u32`).join(", "),X=u.map(ie=>`d${ie}`).join(", ");return`
  fn get_${e}(${M}) -> ${h} {
    return get_${e}ByIndices(${W(X)});
  }`})(),ue=(...M)=>{if(M.length!==n)throw new Error(`indices length must be ${n}`);let X=M.map(w).join(",");return n===0?fe("0u"):n===1?fe(X[0]):(p.get=!0,p.getByIndices=!0,p.indicesToOffset=!0,`get_${e}(${X})`)},Z=M=>n<2?fe(M):(p.getByIndices=!0,p.indicesToOffset=!0,`get_${e}ByIndices(${M})`),ne=n<2?"":`
  fn set_${e}ByIndices(indices: ${g.indices}, value: ${h}) {
    ${ae(`i2o_${e}(indices)`,"value")}
  }`,oe=n<2?"":(()=>{let M=u.map(ie=>`d${ie}: u32`).join(", "),X=u.map(ie=>`d${ie}`).join(", ");return`
  fn set_${e}(${M}, value: ${h}) {
    set_${e}ByIndices(${W(X)}, value);
  }`})();return{impl:()=>{let M=[],X=!1;return p.offsetToIndices&&(M.push(A),X=!0),p.indicesToOffset&&(M.push(k),X=!0),p.broadcastedIndicesToOffset&&(Object.values(be).forEach(ie=>M.push(ie)),X=!0),p.set&&(M.push(oe),X=!0),p.setByIndices&&(M.push(ne),X=!0),p.get&&(M.push(D),X=!0),p.getByIndices&&(M.push(ve),X=!0),!s&&X&&M.unshift(`const ${C} = ${g.indices}(${r.join(",")});`,`const ${E} = ${g.indices}(${G.computeStrides(r).join(",")});`),M.join(`
`)},type:g,offsetToIndices:O,indicesToOffset:P,broadcastedIndicesToOffset:te,indices:W,indicesGet:H,indicesSet:j,set:(...M)=>{if(M.length!==n+1)throw new Error(`indices length must be ${n}`);let X=M[n];if(typeof X!="string")throw new Error("value must be string");let ie=M.slice(0,n).map(w).join(",");return n===0?ae("0u",X):n===1?ae(ie[0],X):(p.set=!0,p.setByIndices=!0,p.indicesToOffset=!0,`set_${e}(${ie}, ${X})`)},setByOffset:ae,setByIndices:(M,X)=>n<2?ae(M,X):(p.setByIndices=!0,p.indicesToOffset=!0,`set_${e}ByIndices(${M}, ${X});`),get:ue,getByOffset:fe,getByIndices:Z,usage:a,name:e,strides:E,shape:C,rank:n}},F=(e,t,r,a=1)=>Bn(e,t,r,"input",a),he=(e,t,r,a=1)=>Bn(e,t,r,"output",a),Ns=(e,t,r,a=1)=>Bn(e,t,r,"internal",a),Yo=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Ea){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],a=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||a>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${a}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*a>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${a}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,n=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*r*a}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${a})
  fn main(${s}) {
    ${n}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",a=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${a}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:a}of this.uniforms)if(a&&a>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(a/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(a/4)}>`);else{let i=a==null||a===1?r:`vec${a}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Mp=(e,t)=>new Yo(e,t),nn=(e,t)=>{let r=e.length,a=[];for(let i=0;i<r;i++){let s=r-1-i,n=e[s]||1;(t[t.length-1-i]||1)>1&&n===1&&a.unshift(s)}return a}}),Xo,ki,Qo,Jo,Tr,Bp,Dp,ln=Y(()=>{xe(),Ie(),wt(),ke(),Xo=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},ki=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Qo=(e,t)=>G.sortBasedOnPerm(e,ki(e.length,t)),Jo=(e,t,r,a)=>{let i=[];i.push(`fn perm(i: ${a.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},Tr=(e,t)=>{let r=e.dataType,a=e.dims.length,i=ki(a,t),s=Qo(e.dims,i),n=he("output",r,s.length),u=F("a",r,a),d=c=>`
  ${c.registerUniform("output_size","u32").declareVariables(u,n)}

  ${Jo(i,a,u,n)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${n.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${n.setByOffset("global_idx",u.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:c=>{let h=G.size(s);return{outputs:[{dims:s,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},...ye(c[0].dims,s)]}},getShaderSource:d}},Bp=(e,t)=>{Xo(e.inputs),e.compute(Tr(e.inputs[0],t.perm))},Dp=e=>Ze({perm:e.perm})}),Zo,eu,tu,ru,au,nu,iu,su,ou,uu,sr,Lp,Np,Wp,Hp,Up,Vp,Gp,Fp,qp,jp,Mm=Y(()=>{xe(),Ie(),ke(),Ws(),ln(),Zo={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},eu={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},tu={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ru={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},au=(e,t)=>{let r=[];for(let a=t-e;a<t;++a)r.push(a);return r},nu=(e,t)=>{let r=[],a=e.length;for(let s=0;s<a;s++)t.indexOf(s)===-1&&r.push(e[s]);let i=t.map(s=>e[s]);return[r,i]},iu=(e,t)=>{let r=e.length+t.length,a=[],i=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?a.push(e[i++]):a.push(1);return a},su=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},ou=(e,t)=>{let r=[];if(!su(e,t)){for(let a=0;a<t;++a)e.indexOf(a)===-1&&r.push(a);e.forEach(a=>r.push(a))}return r},uu=(e,t,r,a,i,s,n)=>{let u=r[0].dims,d=G.size(s),c=G.size(n),h=F("_A",r[0].dataType,u),m=he("output",i,s),g=32,w=`
          var<workgroup> aBestValues : array<f32, ${g}>;
       `;return{name:e,shaderCache:t,getShaderSource:p=>`
        ${p.registerUniform("reduceSize","u32").declareVariables(h,m)}
        ${w}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${p.mainStart(g)}

          let outputIndex = global_idx / ${g};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${tu[a]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${g}) {
           let candidate = f32(${h.getByOffset("offset + k")});
           bestValue = ${Zo[a]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${g}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${eu[a]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${m.setByOffset("outputIndex",`${a==="mean"?`${m.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${m.type.storage}(${ru[a]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:d},programUniforms:[{type:12,data:c}]})}},sr=(e,t,r,a)=>{let i=e.inputs.length===1?r:is(e.inputs,r),s=i.axes;s.length===0&&!i.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((w,p)=>p));let n=G.normalizeAxes(s,e.inputs[0].dims.length),u=n,d=e.inputs[0],c=ou(u,e.inputs[0].dims.length);c.length>0&&(d=e.compute(Tr(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],u=au(u.length,d.dims.length));let[h,m]=nu(d.dims,u),g=h;i.keepDims&&(g=iu(h,n)),e.compute(uu(t,{hint:i.cacheKey,inputDependencies:["type"]},[d],a,e.inputs[0].dataType,g,m),{inputs:[d]})},Lp=(e,t)=>{sr(e,"ReduceMeanShared",t,"mean")},Np=(e,t)=>{sr(e,"ReduceL1Shared",t,"l1")},Wp=(e,t)=>{sr(e,"ReduceL2Shared",t,"l2")},Hp=(e,t)=>{sr(e,"ReduceLogSumExpShared",t,"logSumExp")},Up=(e,t)=>{sr(e,"ReduceMaxShared",t,"max")},Vp=(e,t)=>{sr(e,"ReduceMinShared",t,"min")},Gp=(e,t)=>{sr(e,"ReduceProdShared",t,"prod")},Fp=(e,t)=>{sr(e,"ReduceSumShared",t,"sum")},qp=(e,t)=>{sr(e,"ReduceSumSquareShared",t,"sumSquare")},jp=(e,t)=>{sr(e,"ReduceLogSumShared",t,"logSum")}}),or,lu,ti,is,ur,du,pu,cu,hu,fu,mu,gu,yu,bu,vu,lr,Kp,Yp,Xp,Qp,Jp,Zp,ec,tc,rc,ac,Ws=Y(()=>{xe(),Ie(),wt(),ke(),Mm(),or=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},lu=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ti=(e,t,r,a,i,s,n=!1,u=!1)=>{let d=[],c=r[0].dims,h=c.length,m=G.normalizeAxes(i,h),g=!u&&m.length===0;c.forEach((_,C)=>{g||m.indexOf(C)>=0?n&&d.push(1):d.push(_)});let w=d.length,p=G.size(d);return{name:e,shaderCache:t,getShaderSource:_=>{let C=[],E=F("_A",r[0].dataType,h),S=he("output",s,w),A=a(E,S,m),O=A[2];for(let R=0,k=0;R<h;R++)g||m.indexOf(R)>=0?(n&&k++,O=`for(var j${R}: u32 = 0; j${R} < ${c[R]}; j${R}++) {
                  ${A[2].includes("last_index")?`let last_index = j${R};`:""}
                  ${E.indicesSet("input_indices",R,`j${R}`)}
                  ${O}
                }`):(C.push(`${E.indicesSet("input_indices",R,S.indicesGet("output_indices",k))};`),k++);return`

        ${_.registerUniform("output_size","u32").declareVariables(E,S)}

        ${_.mainStart()}
          ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${E.type.indices};
          let output_indices = ${S.offsetToIndices("global_idx")};

          ${C.join(`
`)}
          ${A[0]}       // init ops for reduce max/min
          ${A[1]}
          ${O}
          ${A[3]}
          ${A.length===4?S.setByOffset("global_idx","value"):A.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...ye(c,d)]})}},is=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(a=>r.push(Number(a))),Ze({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},ur=(e,t,r,a)=>{let i=e.inputs,s=i.length===1?r:is(i,r);e.compute(ti(t,{hint:s.cacheKey,inputDependencies:["rank"]},[i[0]],s.noopWithEmptyAxes&&s.axes.length===0?lu:a,s.axes,i[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},du=(e,t)=>{or(e.inputs),ur(e,"ReduceLogSum",t,(r,a)=>[`var value = ${a.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},pu=(e,t)=>{or(e.inputs),ur(e,"ReduceL1",t,(r,a)=>[`var value = ${a.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},cu=(e,t)=>{or(e.inputs),ur(e,"ReduceL2",t,(r,a)=>[`var t = ${a.type.value}(0); var value = ${a.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},hu=(e,t)=>{or(e.inputs),ur(e,"ReduceLogSumExp",t,(r,a)=>[`var value = ${a.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},fu=(e,t)=>{or(e.inputs),ur(e,"ReduceMax",t,(r,a,i)=>{let s=[];for(let n=0;n<r.rank;n++)(i.indexOf(n)>=0||i.length===0)&&s.push(r.indicesSet("input_indices",n,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},mu=(e,t)=>{or(e.inputs),ur(e,"ReduceMean",t,(r,a,i)=>{let s=1;for(let n=0;n<r.rank;n++)(i.indexOf(n)>=0||i.length===0)&&(s*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${a.type.value}(sum / ${s});`]})},gu=(e,t)=>{or(e.inputs),ur(e,"ReduceMin",t,(r,a,i)=>{let s=[];for(let n=0;n<r.rank;n++)(i.indexOf(n)>=0||i.length===0)&&s.push(`input_indices[${n}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},yu=(e,t)=>{or(e.inputs),ur(e,"ReduceProd",t,(r,a)=>[`var value = ${a.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},bu=(e,t)=>{or(e.inputs),ur(e,"ReduceSum",t,(r,a)=>[`var value = ${a.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},vu=(e,t)=>{or(e.inputs),ur(e,"ReduceSumSquare",t,(r,a)=>[`var t = ${a.type.value}(0); var value = ${a.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},lr=(e,t,r)=>{if(t.length===0)return r;let a=1,i=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?a*=e[s]:i*=e[s];return i<32&&a>1024},Kp=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?mu(e,t):Lp(e,t)},Yp=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?pu(e,t):Np(e,t)},Xp=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?cu(e,t):Wp(e,t)},Qp=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?hu(e,t):Hp(e,t)},Jp=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fu(e,t):Up(e,t)},Zp=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gu(e,t):Vp(e,t)},ec=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yu(e,t):Gp(e,t)},tc=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bu(e,t):Fp(e,t)},rc=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vu(e,t):qp(e,t)},ac=(e,t)=>{lr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?du(e,t):jp(e,t)}}),Ai,nc,ic,ss,Bm=Y(()=>{xe(),wt(),Ws(),Ai=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},nc=(e,t)=>{Ai(e.inputs);let r=(a,i,s)=>{let n=[];for(let u=0;u<a.rank;u++)(s.indexOf(u)>=0||s.length===0)&&n.push(`input_indices[${u}] = 0;`);return[`${n.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${a.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${a.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ti("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ic=(e,t)=>{Ai(e.inputs);let r=(a,i,s)=>{let n=[];for(let u=0;u<a.rank;u++)(s.indexOf(u)>=0||s.length===0)&&n.push(`input_indices[${u}] = 0;`);return[`${n.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${a.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${a.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ti("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ss=e=>Ze(e)}),wu,$u,_u,ri,sc,oc,uc=Y(()=>{xe(),Ie(),wt(),ke(),wu=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,a=e[r],i=a.dataType,s=a.dims.length;e.forEach((n,u)=>{if(u!==r){if(n.dataType!==i)throw new Error("input tensors should be one type");if(n.dims.length!==s)throw new Error("input tensors should have the same shape");n.dims.forEach((d,c)=>{if(c!==t&&d!==a.dims[c])throw new Error("non concat dimensions must match")})}})},$u=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,_u=(e,t)=>{let r=e.length,a=[];for(let i=0;i<r;++i){let s=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?a.push(s):i===0?a.push(`if (inputIndex == ${i}u) { ${s} }`):i===r-1?a.push(`else { ${s} }`):a.push(`else if (inputIndex == ${i}) { ${s} }`)}return a.join(`
`)},ri=(e,t,r,a)=>{let i=G.size(r),s=new Array(e.length),n=new Array(e.length),u=0,d=[],c=[],h=[{type:12,data:i}];for(let _=0;_<e.length;++_)u+=e[_].dims[t],s[_]=u,c.push(e[_].dims.length),n[_]=F(`input${_}`,a,c[_]),d.push("rank"),h.push({type:12,data:s[_]});for(let _=0;_<e.length;++_)h.push(...ye(e[_].dims));h.push(...ye(r));let m=he("output",a,r.length),g=m.indicesGet("indices",t),w=Array.from(Array(s.length).keys()).map(_=>`uniforms.sizeInConcatAxis${_}`).join(","),p=_=>`

  ${(()=>{_.registerUniform("outputSize","u32");for(let C=0;C<e.length;C++)_.registerUniform(`sizeInConcatAxis${C}`,"u32");return _.declareVariables(...n,m)})()}

  ${$u(s.length,w)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${m.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${g});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${w});
      ${g} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${_u(n,m)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:a}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h}),getShaderSource:p}},sc=(e,t)=>{let r=e.inputs,a=r[0].dims,i=G.normalizeAxis(t.axis,a.length);wu(r,i);let s=a.slice();s[i]=r.reduce((u,d)=>u+(d.dims.length>i?d.dims[i]:0),0);let n=r.filter(u=>G.size(u.dims)>0);e.compute(ri(n,i,s,r[0].dataType),{inputs:n})},oc=e=>Ze({axis:e.axis})}),xu,Su,Cu,Eu,ai,Tu,lc,dc=Y(()=>{xe(),Bs(),ke(),uc(),xu=(e,t)=>{let r=e[0],a=e[1],i=e[2],s=e[3],n=e[4],u=e[5];if(n&&u)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let d=r.dims[0],c=r.dims[1],h=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(a.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(a.dims[0]!==h)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==a.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let m=i.dims[0]/3,g=m,w=g;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let A of t.qkvHiddenSizes)if(A%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");m=t.qkvHiddenSizes[0],g=t.qkvHiddenSizes[1],w=t.qkvHiddenSizes[2]}let p=c;if(m!==g)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==m+g+w)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let _=0;if(n){if(g!==w)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(n.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(n.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(n.dims[1]!==d)throw new Error('Input "past" second dimension must be batch_size');if(n.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(n.dims[4]!==g/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(_=n.dims[3])}let C=p+_,E=-1,S=0;if(s)throw new Error("Mask not supported");if(n)throw new Error("past is not supported");return{batchSize:d,sequenceLength:c,pastSequenceLength:_,kvSequenceLength:p,totalSequenceLength:C,maxSequenceLength:E,inputHiddenSize:h,hiddenSize:m,vHiddenSize:w,headSize:Math.floor(m/t.numHeads),vHeadSize:Math.floor(w/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:S,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Su=(e,t,r,a)=>{let i=mt(a),s=64,n=a/i;n<s?s=1:n/8<64&&(s=Math.ceil(n/8));let u=Math.ceil(a/i/s),d=[{type:t.dataType,data:1/a},{type:12,data:n},{type:12,data:u}],c=_t(t.dataType,i),h=Nt(1,i),m=g=>{let w=he("x",t.dataType,t.dims,i),p=[{name:"d_inv",type:Nt(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${s}>;
  var<workgroup> thread_sum: array<f32, ${s}>;
  ${g.registerUniforms(p).declareVariables(w)}
  ${g.mainStart([s,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = workgroup_id.x * uniforms.d_comp + local_offset;

    var thread_max_vector = ${h}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${h}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${s}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${h}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${h}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${s}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${w.type.value}(uniforms.d_inv);
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${h}(x[offset + i]);
        x[offset + i] = ${w.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${c};${i}`},getShaderSource:m,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:d})}},Cu=(e,t,r,a,i,s,n)=>{let u=n+i.kvSequenceLength,d=[i.batchSize,i.numHeads,i.sequenceLength,u],c=s.scale===0?1/Math.sqrt(i.headSize):s.scale,h=mt(i.headSize),m=i.headSize/h,g=12,w={x:Math.ceil(u/g),y:Math.ceil(i.sequenceLength/g),z:i.batchSize*i.numHeads},p=[{type:12,data:i.sequenceLength},{type:12,data:m},{type:12,data:u},{type:12,data:i.numHeads},{type:1,data:c}],_=a?["type","type","type"]:["type","type"],C=E=>{let S=F("q",t.dataType,t.dims,h),A=F("key",r.dataType,r.dims,h),O=[S,A];a&&O.push(F("relative_position_bias",a.dataType,a.dims));let R=he("output",t.dataType,d),k=Nt(1,h),P=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${S.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${S.type.storage}, ${g*g}>;
  ${E.registerUniforms(P).declareVariables(...O,R)}
  ${E.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;

    var value = ${k}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${k}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(h){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${h}`)}})()};
        output[outputIdx] = ${R.type.value} (sum * uniforms.alpha) + ${a?"relative_position_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${h}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:w,programUniforms:p}),getShaderSource:C}},Eu=(e,t,r,a,i)=>{let s=i+a.kvSequenceLength,n=[a.batchSize,a.sequenceLength,a.vHiddenSize],u=12,d={x:Math.ceil(a.vHeadSize/u),y:Math.ceil(a.sequenceLength/u),z:a.batchSize*a.numHeads},c=[{type:12,data:a.sequenceLength},{type:12,data:s},{type:12,data:a.vHeadSize},{type:12,data:a.numHeads},{type:12,data:a.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:t.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:c}),getShaderSource:h=>{let m=F("probs",t.dataType,t.dims),g=F("v",r.dataType,r.dims),w=he("output",t.dataType,n),p=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${u}u;
  var<workgroup> tileQ: array<${m.type.value}, ${u*u}>;
  var<workgroup> tileK: array<${m.type.value}, ${u*u}>;
  ${h.registerUniforms(p).declareVariables(m,g,w)}
  ${h.mainStart([u,u,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${m.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},ai=(e,t,r,a,i,s,n,u,d,c,h)=>{let m=e.outputCount>1,g=e.outputCount>2,w=m&&g?c.pastSequenceLength:0,p=w+c.kvSequenceLength,_=[c.batchSize,c.numHeads,p,c.headSize],C=n?[n,r]:[r],E=m?e.compute(ri(C,2,_,r.dataType),{inputs:C,outputs:[1]})[0]:r,S=[c.batchSize,c.numHeads,p,c.headSize],A=u?[u,a]:[a],O=g?e.compute(ri(A,2,S,a.dataType),{inputs:A,outputs:[2]})[0]:a,R=[t,E];d&&R.push(d);let k=e.compute(Cu(e,t,E,d,c,h,w),{inputs:R,outputs:[-1]})[0];e.compute(Su(e,k,c.batchSize*c.numHeads*c.sequenceLength,p),{inputs:[k],outputs:[]});let P=[k,O];e.compute(Eu(e,k,O,c,w),{inputs:P,outputs:[0]})},Tu=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],a=t.sequenceLength,i=t.inputHiddenSize,s=t.headSize,n=12,u={x:Math.ceil(t.headSize/n),y:Math.ceil(t.sequenceLength/n),z:t.batchSize*t.numHeads},d=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:a},{type:12,data:i},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],h=m=>{let g=he("output_q",d[0].dataType,r),w=he("output_k",d[0].dataType,r),p=he("output_v",d[0].dataType,r),_=F("input",d[0].dataType,d[0].dims),C=F("weight",d[1].dataType,d[1].dims),E=F("bias",d[2].dataType,d[2].dims),S=_.type.storage,A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${n}u;
  var<workgroup> tileInput: array<${S}, ${n*n}>;
  var<workgroup> tileWeightQ: array<${S}, ${n*n}>;
  var<workgroup> tileWeightK: array<${S}, ${n*n}>;
  var<workgroup> tileWeightV: array<${S}, ${n*n}>;
  ${m.registerUniforms(A).declareVariables(_,C,E,g,w,p)}
  ${m.mainStart([n,n,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${S}(0);
    var valueK = ${S}(0);
    var valueV = ${S}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:c}),getShaderSource:h},{inputs:d,outputs:[-1,-1,-1]})},lc=(e,t)=>{let r=xu(e.inputs,t),[a,i,s]=Tu(e,r);return ai(e,a,i,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}}),ku,Au,Iu,pc,Dm=Y(()=>{fr(),xe(),Ie(),wt(),ke(),ku=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(a,i,s)=>{let n=i.length;if(n!==a.length)throw new Error(`${s}: num dimensions != ${n}`);i.forEach((u,d)=>{if(u!==a[d])throw new Error(`${s}: dim[${d}] do not match`)})};if(e[0].dims.length>1){let a=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,a,"Invalid input scale"),r(e[2].dims,a,"Invalid input B"),r(e[3].dims,a,"Invalid input mean"),r(e[4].dims,a,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Au=(e,t)=>{let{epsilon:r,spatial:a,format:i}=t,s=e[0].dims,n=a?mt(s[s.length-1]):1,u=i==="NHWC"&&s.length>1?n:1,d=G.size(s)/n,c=a,h=c?s.length:s,m=F("x",e[0].dataType,e[0].dims,n),g=F("scale",e[1].dataType,e[1].dims,u),w=F("bias",e[2].dataType,e[2].dims,u),p=F("inputMean",e[3].dataType,e[3].dims,u),_=F("inputVar",e[4].dataType,e[4].dims,u),C=he("y",e[0].dataType,h,n),E=()=>{let A="";if(a)A=`let cOffset = ${s.length===1?"0u":i==="NHWC"?`outputIndices[${s.length-1}] / ${n}`:"outputIndices[1]"};`;else if(i==="NCHW")A=`
            ${C.indicesSet("outputIndices","0","0")}
            let cOffset = ${C.indicesToOffset("outputIndices")};`;else{A=`var cIndices = ${g.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let O=1;O<g.rank;O++)A+=`cIndices[${O}] = outputIndices[${O}];`;A+=`let cOffset = ${g.indicesToOffset("cIndices")};`}return A},S=A=>`
  const epsilon = ${r};
  ${A.registerUniform("outputSize","u32").declareVariables(m,g,w,p,_,C)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${C.offsetToIndices(`global_idx * ${n}`)};
    ${E()}
    let scale = ${g.getByOffset("cOffset")};
    let bias = ${w.getByOffset("cOffset")};
    let inputMean = ${p.getByOffset("cOffset")};
    let inputVar = ${_.getByOffset("cOffset")};
    let x = ${m.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${C.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${a}_${n}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c?[{type:12,data:d},...ye(s)]:[{type:12,data:d}]})}},Iu=e=>Ze(e),pc=(e,t)=>{let{inputs:r,outputCount:a}=e,i=Iu({...t,outputCount:a});if(Fe.webgpu.validateInputContent&&ku(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Au(r,i))}}),Ou,Ru,cc,Lm=Y(()=>{Ie(),ke(),Ou=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ru=e=>{let t=e[0].dims,r=e[0].dims[2],a=G.size(t)/4,i=e[0].dataType,s=F("input",i,t,4),n=F("bias",i,[r],4),u=F("residual",i,t,4),d=he("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:c=>`
  const channels = ${r}u / 4;
  ${c.declareVariables(s,n,u,d)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let value = ${s.getByOffset("global_idx")}
      + ${n.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${d.setByOffset("global_idx","value")}
  }`}},cc=e=>{Ou(e.inputs),e.compute(Ru(e.inputs))}}),zu,De,hc,fc,mc,gc,yc,bc,vc,wc,$c,Pu,_c,xc,Sc,Cc,jn,Ec,Kn,Tc,kc,Ac,Ic,Oc,Rc,zc,Pc,Mc,Bc,Dc,Lc,Nc,Wc,Hc,Uc,Ii,Vc,os,us,Gc,Fc,qc,Hs=Y(()=>{xe(),Ie(),wt(),ke(),zu=(e,t,r,a,i,s)=>{let n=Math.ceil(t/4),u="";typeof i=="string"?u=`${i}(a)`:u=i("a");let d=F("inputData",r,[n],4),c=he("outputData",a,[n],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(d,c)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${d.getByOffset("global_idx")};
    ${c.setByOffset("global_idx",u)}
  }`},De=(e,t,r,a,i,s=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:n=>zu(n,G.size(e.dims),e.dataType,s,r,a),getRunData:n=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(G.size(n[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(G.size(e.dims)/4)}]})}),hc=e=>{e.compute(De(e.inputs[0],"Abs","abs"))},fc=e=>{e.compute(De(e.inputs[0],"Acos","acos"))},mc=e=>{e.compute(De(e.inputs[0],"Acosh","acosh"))},gc=e=>{e.compute(De(e.inputs[0],"Asin","asin"))},yc=e=>{e.compute(De(e.inputs[0],"Asinh","asinh"))},bc=e=>{e.compute(De(e.inputs[0],"Atan","atan"))},vc=e=>{e.compute(De(e.inputs[0],"Atanh","atanh"))},wc=e=>Ze(e),$c=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(De(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Pu=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Ds,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Ls;return Ze({min:t,max:r})},_c=(e,t)=>{let r=e.inputs.length===1?t:Pu(e.inputs),a=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${a}> = vec4(${a}(${r.min}));
    const clip_max_: vec4<${a}> = vec4(${a}(${r.max}));
`,r.cacheKey),{inputs:[0]})},xc=e=>{e.compute(De(e.inputs[0],"Ceil","ceil"))},Sc=e=>{e.compute(De(e.inputs[0],"Cos","cos"))},Cc=e=>{e.compute(De(e.inputs[0],"Cosh","cosh"))},jn=e=>Ze(e),Ec=(e,t)=>{let r=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"Elu",a=>`elu_vf32(${a})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},Kn=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Tc=e=>{let t=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Kn(t)))},kc=e=>{e.compute(De(e.inputs[0],"Exp","exp"))},Ac=e=>{e.compute(De(e.inputs[0],"Floor","floor"))},Ic=e=>{let t=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Kn(t)))},Oc=(e,t)=>{let r=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"LeakyRelu",a=>`select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Rc=e=>{e.compute(De(e.inputs[0],"Not",t=>`!${t}`))},zc=e=>{e.compute(De(e.inputs[0],"Neg",t=>`-${t}`))},Pc=e=>{e.compute(De(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Mc=e=>{let t=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Bc=e=>{e.compute(De(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Dc=e=>Ze(e),Lc=(e,t)=>{let r=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"HardSigmoid",a=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${a} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Nc=e=>{e.compute(De(e.inputs[0],"Sin","sin"))},Wc=e=>{e.compute(De(e.inputs[0],"Sinh","sinh"))},Hc=e=>{e.compute(De(e.inputs[0],"Sqrt","sqrt"))},Uc=e=>{e.compute(De(e.inputs[0],"Tan","tan"))},Ii=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Vc=e=>{e.compute(De(e.inputs[0],"Tanh",Ii))},os=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Ii("v")};
}
`,us=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Gc=e=>{let t=Nt(e.inputs[0].dataType);e.compute(De(e.inputs[0],"FastGelu",us,os(t),void 0,e.inputs[0].dataType))},Fc=(e,t)=>{let r=Nt(e.inputs[0].dataType);return e.compute(De(e.inputs[0],"ThresholdedRelu",a=>`select(vec4<${r}>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},qc=e=>{e.compute(De(e.inputs[0],"Log","log"))}}),Mu,Bu,jc,Nm=Y(()=>{Ie(),ke(),Hs(),Mu=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Bu=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=F("input",e[0].dataType,e[0].dims,4),a=F("bias",e[0].dataType,[e[0].dims[2]],4),i=he("output",e[0].dataType,t,4),s=G.size(t)/4,n=_t(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,a,i)}

  ${Kn(n)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},jc=e=>{Mu(e.inputs),e.compute(Bu(e.inputs))}}),Du,Lu,dr,Kc,Yc,Xc,Qc,Jc,Zc,eh,th,rh,ah,Wm=Y(()=>{xe(),Ie(),ke(),Du=(e,t,r,a,i,s,n,u,d,c,h,m)=>{let g,w;typeof u=="string"?g=w=(S,A)=>`${u}((${S}),(${A}))`:typeof u=="function"?g=w=u:(g=u.scalar,w=u.vector);let p=he("outputData",h,a.length,4),_=F("aData",d,t.length,4),C=F("bData",c,r.length,4),E;if(i)if(s){let S=G.size(t)===1,A=G.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,R=r.length>0&&r[r.length-1]%4===0;S||A?E=p.setByOffset("global_idx",w(S?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"),A?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"))):E=`
            let outputIndices = ${p.offsetToIndices("global_idx * 4u")};
            let offsetA = ${_.broadcastedIndicesToOffset("outputIndices",p)};
            let offsetB = ${C.broadcastedIndicesToOffset("outputIndices",p)};
            ${p.setByOffset("global_idx",w(n||O?_.getByOffset("offsetA / 4u"):`${_.type.value}(${_.getByOffset("offsetA / 4u")}[offsetA % 4u])`,n||R?C.getByOffset("offsetB / 4u"):`${C.type.value}(${C.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else E=p.setByOffset("global_idx",w(_.getByOffset("global_idx"),C.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let S=(A,O,R="")=>{let k=`aData[indexA${O}][componentA${O}]`,P=`bData[indexB${O}][componentB${O}]`;return`
            let outputIndices${O} = ${p.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offsetA${O} = ${_.broadcastedIndicesToOffset(`outputIndices${O}`,p)};
            let offsetB${O} = ${C.broadcastedIndicesToOffset(`outputIndices${O}`,p)};
            let indexA${O} = offsetA${O} / 4u;
            let indexB${O} = offsetB${O} / 4u;
            let componentA${O} = offsetA${O} % 4u;
            let componentB${O} = offsetB${O} % 4u;
            ${A}[${O}] = ${R}(${g(k,P)});
          `};h===9?E=`
            var data = vec4<u32>(0);
            ${S("data",0,"u32")}
            ${S("data",1,"u32")}
            ${S("data",2,"u32")}
            ${S("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:E=`
            ${S("outputData[global_idx]",0)}
            ${S("outputData[global_idx]",1)}
            ${S("outputData[global_idx]",2)}
            ${S("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(_,C,p)}

        ${m??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${E}
      }`},Lu=(e,t,r,a,i,s,n=r.dataType)=>{let u=!G.areEqual(r.dims,a.dims),d=r.dims,c=G.size(r.dims),h=!1,m=!1,g=[u];if(u){let w=Ca.calcShape(r.dims,a.dims,!1);if(!w)throw new Error("Can't perform binary op on the given tensors");d=w,c=G.size(d);let p=G.size(r.dims)===1,_=G.size(a.dims)===1,C=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,E=a.dims.length>0&&a.dims[a.dims.length-1]%4===0;g.push(p),g.push(_),g.push(C),g.push(E);let S=1;for(let A=1;A<d.length;A++){let O=r.dims[r.dims.length-A]??1,R=a.dims[a.dims.length-A]??1;if(O===R)S*=O;else break}S%4===0?(m=!0,h=!0):(p||_||C||E)&&(h=!0)}else h=!0;return g.push(h),{name:e,shaderCache:{hint:t+g.map(w=>w.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:w=>Du(w,r.dims,a.dims,d,h,u,m,i,r.dataType,a.dataType,n,s),getRunData:()=>({outputs:[{dims:d,dataType:n}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:Math.ceil(G.size(d)/4)},...ye(r.dims,a.dims,d)]})}},dr=(e,t,r,a,i,s)=>{e.compute(Lu(t,i??"",e.inputs[0],e.inputs[1],r,a,s))},Kc=e=>{dr(e,"Add",(t,r)=>`${t}+${r}`)},Yc=e=>{dr(e,"Div",(t,r)=>`${t}/${r}`)},Xc=e=>{dr(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Qc=e=>{dr(e,"Mul",(t,r)=>`${t}*${r}`)},Jc=e=>{let t=F("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;dr(e,"Pow",{scalar:(r,a)=>`pow_custom(${r},${a})`,vector:(r,a)=>`pow_vector_custom(${r},${a})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Zc=e=>{dr(e,"Sub",(t,r)=>`${t}-${r}`)},eh=e=>{dr(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},th=e=>{dr(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},rh=e=>{dr(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},ah=e=>{dr(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),ra,aa,na,Us,ua=Y(()=>{xe(),Ie(),ra=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},aa=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},na=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Us=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[r,a]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:a}}else if(t==="Clip"){let[r,a]=(e==null?void 0:e.activation_params)||[Ds,Ls];return{activation:t,clipMax:a,clipMin:r}}else if(t==="LeakyRelu"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),Ot,Vs,Gs=Y(()=>{Ot=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Vs=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Fs,nh=Y(()=>{Fs=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Nu,Wu,ni,Oi,Hu,ii,Uu,qs,oi=Y(()=>{xe(),Ie(),ke(),ua(),Gs(),Nu=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Wu=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ni=(e,t,r="f32",a,i=!1,s=32,n=!1,u=32)=>{let d=t[1]*e[1],c=t[0]*e[0],h=i?d:s,m=i?s:d,g=h/t[0],w=s/t[1];if(!((i&&g===4&&e[1]===4||!i&&(g===3||g===4))&&h%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${g} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${g} must be 3 or 4.
  tileAWidth ${h} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${g}<${r}>, ${h/g}>, ${m}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${c/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${g};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${n?"0":"i32(globalId.z)"};
  ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${d};

  let num_tiles = ${n?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${n?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${w};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Nu(i,a)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${a?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${g===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Wu(i,g)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Oi=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Hu=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ii=(e,t,r="f32",a,i=!1,s=32,n=!1,u=32,d=!1)=>{let c=e[1]*t[1],h=e[0]*t[0],m=i?c:s,g=i?s:c;if(!(g%t[1]===0&&m%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${g} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${m} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=g/t[1],p=m/t[0],_=s/t[1],C=d?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${h};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${g}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${t[0]}) {
          ${Oi(i,a)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${a?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${w};
let tileColA = i32(localId.x) * ${p};
let tileRowB = i32(localId.y) * ${_};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${p}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Oi(i,a)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${a?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Hu(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${m}>, ${g}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${h}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${n?"0":"i32(globalId.z)"};
    ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${n?`${Math.ceil(u/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${n?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${C}
  }
`},Uu=(e,t,r,a,i,s=!1)=>{let[n,u,d]=i,[c,h,m,g]=a,w=nn(n,d),p=nn(u,d),_=_t(a[0].type.tensor),C=()=>{let S=h.rank,A=c.rank,O=`var aIndices: ${h.type.indices};`;for(let R=S-2-1,k=A-1;R>=0;R--,k--)O+=`
aIndices[${R}] = ${A>1?`batchIndices[${k}]`:"batchIndices"};`;return w.forEach(R=>{O+=`
aIndices[${R}] = 0;`}),O+=`
aIndices[${S-2}] = u32(row);
                   aIndices[${S-1}] = u32(colIn);`,O},E=()=>{let S=m.rank,A=c.rank,O=`var bIndices: ${m.type.indices};`;for(let R=S-2-1,k=A-1;R>=0;R--,k--)O+=`
bIndices[${R}] = ${A>1?`batchIndices[${k}]`:"batchIndices"};`;return p.forEach(R=>{O+=`
bIndices[${R}] = 0;`}),O+=`
bIndices[${S-2}] = u32(row);
                   bIndices[${S-1}] = u32(colIn);`,O};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${c.type.indices}) -> ${Ot(e,_)} {
      var value = ${Ot(e,_)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${C()}
        value = ${h.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${c.type.indices}) -> ${Ot(e,_)} {
      var value = ${Ot(e,_)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${E()}
        value = ${m.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ot(e,_)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${Ot(e,_)}(bias[row])`};`:""}
        ${r}
        ${g.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},qs=(e,t,r,a,i=!1)=>{let s=e[0].dims,n=e[1].dims,u=s.slice(0,-2),d=n.slice(0,-2),c=a?a.slice(0,-2):r.slice(0,-2),h=G.size(c),m=s[s.length-2],g=s[s.length-1],w=n[n.length-1],p=g%4===0&&w%4===0,_=m<=8?[4,1,1]:[4,4,1],C=[8,8,1],E=[Math.ceil(w/C[0]/_[0]),Math.ceil(m/C[1]/_[1]),Math.ceil(h/C[2]/_[2])],S=p?4:1,A=[...u,m,g/S],O=A.length,R=[...d,g,w/S],k=R.length,P=[h,m,w/S],W=[{type:6,data:m},{type:6,data:w},{type:6,data:g}];aa(t,W),W.push(...ye(c,A,R));let H=["rank","rank"],j=e.length>2;j&&(W.push(...ye(e[2].dims)),H.push("rank")),W.push(...ye(P));let be=te=>{let ae=c.length,fe=Ns("batchDims",e[0].dataType,ae,1),ve=_t(e[0].dataType),D=F("a",e[0].dataType,O,S),ue=F("b",e[1].dataType,k,S),Z=he("result",e[0].dataType,P.length,S),ne=[D,ue];if(j){let $e=i?S:1;ne.push(F("bias",e[2].dataType,e[2].dims.length,$e))}let oe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];na(t,oe);let M=_t(Z.type.tensor),X=ra(t,Z.type.value,M),ie=Uu(S,j,X,[fe,D,ue,Z],[u,d,c],i);return`
  ${te.registerUniforms(oe).registerInternalVariables(fe).declareVariables(...ne,Z)}
  ${ie}
  ${p?ni(_,C,ve,fe):ii(_,C,ve,fe)}
                   `};return{name:"MatMul",shaderCache:{hint:`${_};${t.activation};${p};${i}`,inputDependencies:H},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:be}}}),Vu,ih,Hm=Y(()=>{xe(),oa(),ke(),ua(),Gs(),nh(),oi(),Vu=(e,t,r,a,i=!1,s,n=4,u=4,d=4,c="f32")=>{let h=H=>{switch(H){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${H} is not supported.`)}},m=H=>{switch(H){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${H} is not supported.`)}},g=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,w=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",_=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",C=e?"row":"col",E=e?"col":"row",S=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${C} / outWidth;
    let outCol = ${C} % outWidth;

    let WRow = ${E} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${E} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${E} % inChannels;
    var resData = ${Ot(n,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${_}) {
      ${g}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${h(n)}
    }
    return resData;`,A=e?t&&a?`
    let col = colIn * ${n};
    ${S}`:`
    let col = colIn * ${n};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${S}
    }
    return ${Ot(n,c)}(0.0);`:a&&r?`
    let col = colIn * ${n};
    ${S}`:`
    let col = colIn * ${n};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${S}
    }
    return ${Ot(n,c)}(0.0);`,O=`${m(u)}`,R=Ot(d,c),k=Ot(e?n:u,c),P=Ot(e?u:n,c),W=ra(s,R,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${k} {
      ${e?A:O}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${P} {
      ${e?O:A}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${R}) {
      let col = colIn * ${d};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${w}
      ${Vs(i)}
      ${W}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ih=(e,t,r,a,i,s,n,u)=>{let d=t.format==="NHWC",c=d?e[0].dims[3]:e[0].dims[1],h=r[0],m=d?r[2]:r[3],g=d?r[1]:r[2],w=d?r[3]:r[1],p=d&&(c%4===0||c%3===0)&&w%4===0,_=d?w:m*g,C=d?m*g:w,E=[8,8,1],S=a<=8?[4,1,1]:[4,4,1],A=[Math.ceil(_/E[0]/S[0]),Math.ceil(C/E[1]/S[1]),Math.ceil(h/E[2]/S[2])];pt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${A}`);let O=p?d&&c%4!==0?3:4:1,R=E[1]*S[1],k=E[0]*S[0],P=Math.max(E[0]*O,E[1]),W=a%R===0,H=i%k===0,j=s%P===0,be=p?[O,4,4]:[1,1,1],te=[{type:6,data:a},{type:6,data:i},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];aa(t,te),te.push(...ye(e[0].dims,e[1].dims));let ae=["rank","rank"];n&&(te.push(...ye(e[2].dims)),ae.push("rank")),te.push(...ye(r));let fe=ve=>{let D=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];na(t,D);let ue=p?4:1,Z=_t(e[0].dataType),ne=`
      fn setOutputAtIndex(flatIndex : i32, value : ${p?`vec4<${Z}>`:Z}) {
        result[flatIndex] = ${p?`vec4<${Z}>`:Z}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${p?`vec4<${Z}>`:Z}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${p?"/ 4":""}, value);
      }`,oe=F("x",e[0].dataType,e[0].dims.length,O===3?1:O),M=F("w",e[1].dataType,e[1].dims.length,ue),X=[oe,M],ie=he("result",e[0].dataType,r.length,ue);if(n){let $e=F("bias",e[2].dataType,e[2].dims.length,ue);X.push($e),ne+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${p?`vec4<${Z}>`:Z} {
          return bias[coords.${d?"w":"y"}${p?"/ 4":""}];
        }`}return`
        ${Fs("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ve.registerUniforms(D).declareVariables(...X,ie)}
        ${ne}
        ${Vu(d,W,H,j,n,t,be[0],be[1],be[2],Z)}
        ${p?ni(S,E,Z,void 0,!d,P):ii(S,E,Z,void 0,!d,P,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${p};${W};${H};${j};${R};${k};${P}`,inputDependencies:ae},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:te}),getShaderSource:fe}}}),ls,sh,Um=Y(()=>{xe(),Ie(),ke(),lh(),ua(),ls=(e,t,r)=>{let a=e.length>2,i=a?"value += b[output_channel];":"",s=e[0].dims,n=e[1].dims,u=n[0]/t.group,d=t.format==="NHWC",c=Yn(s,n,t.dilations,t.pads,t.strides,d),h=G.size(c),m=[{type:12,data:h},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:u}];aa(t,m),m.push(...ye(s,n));let g=["rank","rank"];a&&(m.push(...ye(e[2].dims)),g.push("rank")),m.push(...ye(c));let w=p=>{let _=he("output",e[0].dataType,c.length),C=_t(_.type.tensor),E=ra(t,_.type.value,C),S=F("x",e[0].dataType,s.length),A=F("w",e[1].dataType,n.length),O=[S,A];a&&O.push(F("b",e[2].dataType,e[2].dims.length));let R=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return na(t,R),`
  ${p.registerUniforms(R).declareVariables(...O,_)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${_.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${d?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${d?1:2}], outputIndices[${d?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${_.type.value} = ${_.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${d?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${d?2:3}]) {
            continue;
          }

          let xVal = ${d?S.get("batch","xHeight","xWidth","input_channel"):S.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${A.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${E}
    ${_.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:g},getRunData:()=>({outputs:[{dims:r?r(c):c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:m}),getShaderSource:w}},sh=(e,t,r)=>{let a=e.length>2,i=mt(r[3]),s=mt(r[2]),n=G.size(r)/i/s,u=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],d=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],c=[r[0],r[1],r[2],r[3]/i],h=[{type:12,data:n},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];aa(t,h),h.push(...ye(u,d,c));let m=(s-1)*t.strides[1]+d[1],g=w=>{let p=he("output",e[0].dataType,c.length,i),_=_t(p.type.tensor),C=ra(t,p.type.value,_),E=F("x",e[0].dataType,u.length,i),S=F("w",e[1].dataType,d.length,i),A=[E,S];a&&A.push(F("b",e[2].dataType,e[2].dims,i));let O=a?"value += b[output_channel];":"",R=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return na(t,R),`
  ${w.registerUniforms(R).declareVariables(...A,p)}
  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${s}u;
    let col = (index1 % width1) * ${s}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${E.type.value}, ${m}>;
    var values: array<${p.type.value}, ${s}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${m}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${E.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${E.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${S.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${s}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${s}u; i++) {
      var value = values[i];
      ${O}
      ${C}
      ${p.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${s};${m};${d[0]};${d[1]}`,inputDependencies:a?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:h}),getShaderSource:g}}}),ds,Gu,oh,uh=Y(()=>{xe(),Ie(),oi(),ke(),ua(),ds=(e,t,r,a,i=!1)=>{let s=e[0].dims,n=e[1].dims,u=s[s.length-2],d=n[n.length-1],c=s[s.length-1],h=mt(d),m=mt(c),g=mt(u),w=G.size(r)/h/g,p=e.length>2,_=a?a.slice(0,-2):r.slice(0,-2),C=[G.size(_),u,d],E=[{type:12,data:w},{type:12,data:u},{type:12,data:d},{type:12,data:c}];aa(t,E),E.push(...ye(_,s,n)),p&&E.push(...ye(e[2].dims)),E.push(...ye(C));let S=A=>{let O=Ns("batch_dims",e[0].dataType,_.length),R=F("a",e[0].dataType,s.length,m),k=F("b",e[1].dataType,n.length,h),P=he("output",e[0].dataType,C.length,h),W=_t(P.type.tensor),H=ra(t,P.type.value,W),j=[R,k],be="";if(p){let ne=i?h:1;j.push(F("bias",e[2].dataType,e[2].dims.length,ne)),be=`${i?`value += bias[col / ${ne}];`:`value += ${P.type.value}(bias[row + i]);`}`}let te=s.slice(0,-2),ae=n.slice(0,-2),fe=nn(te,_),ve=nn(ae,_),D=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];na(t,D);let ue=(ne,oe)=>{let M=ne.rank,X=ne.name;if(M===2)return`var ${X}_indices = ${ne.type.indices}(0u, 0u);`;let ie=O.rank,$e=`var ${X}_indices: ${ne.type.indices};`;for(let Ae=M-2-1,ze=ie-1;Ae>=0;Ae--,ze--)$e+=`
${X}_indices[${Ae}] = ${ie>1?`batch_indices[${ze}]`:"batch_indices"};`;return oe.forEach(Ae=>{$e+=`
${X}_indices[${Ae}] = 0;`}),$e+=`${X}_indices[${M-2}] = 0u;
                     ${X}_indices[${M-1}] = 0u;`,$e},Z=()=>{let ne=`var a_data: ${R.type.value};`;for(let oe=0;oe<m;oe++)ne+=`
              let b_data${oe} = b[(b_offset + (k + ${oe}) * uniforms.N + col) / ${h}];`;for(let oe=0;oe<g;oe++){ne+=`a_data = a[(a_offset + (row + ${oe}) * uniforms.K + k) / ${m}];`;for(let M=0;M<m;M++)ne+=`
            values[${oe}] = fma(${k.type.value}(a_data${m===1?"":`[${M}]`}), b_data${M}, values[${oe}]);
`}return ne};return`
  ${A.registerUniforms(D).registerInternalVariables(O).declareVariables(...j,P)}
  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${h})) * ${h};
    var index1 = global_idx / (uniforms.N / ${h});
    let stride1 = uniforms.M / ${g};
    let row = (index1 % stride1) * ${g};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}
    ${ue(R,fe)}
    let a_offset = ${R.indicesToOffset("a_indices")};
    ${ue(k,ve)}
    let b_offset = ${k.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${g}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${m}) {
      ${Z()}
    }
    for (var i = 0u; i < ${g}u; i++) {
      var value = values[i];
      ${be}
      ${H}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${h}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${h};${m};${g};${i}`,inputDependencies:p?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:E}),getShaderSource:S}},Gu=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},oh=e=>{Gu(e.inputs);let t=Ca.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],a=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&a<8?e.compute(ds(e.inputs,{activation:""},t)):e.compute(qs(e.inputs,{activation:""},t))}}),Yn,Dn,Fu,Ri,ps,qu,ju,cs,lh=Y(()=>{Ie(),Hm(),oi(),Um(),ua(),uh(),ln(),Yn=(e,t,r,a,i,s)=>{let n=e[0],u=e.slice(s?1:2,s?3:4),d=u.length,c=t[0],h=t.slice(2).map((g,w)=>g+(g-1)*(r[w]-1)),m=u.map((g,w)=>g+a[w]+a[w+d]).map((g,w)=>Math.floor((g-h[w]+i[w])/i[w]));return m.splice(0,0,n),m.splice(s?3:1,0,c),m},Dn=[2,3,1,0],Fu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[1]*t.group;if(r!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ri=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let a=e.pads.slice();ei.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,a,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:a}),i},ps=e=>{let t=Us(e),r=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,s=e.group,n=e.kernel_shape,u=e.pads,d=e.strides,c=e.w_is_const();return{autoPad:a,format:r,dilations:i,group:s,kernelShape:n,pads:u,strides:d,wIsConst:c,...t,cacheKey:`${e.format};${t.activation};`}},qu=(e,t,r)=>{let a=Ri(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let k=Yn(t[0].dims,t[1].dims,r.dilations,a.pads,r.strides,i),P=e.kernelCustomData.wT??e.compute(Tr(t[1],Dn),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=P);let W=[t[0],P];t.length===3&&W.push(t[2]),e.compute(sh(W,a,k),{inputs:W})}else e.compute(ls(t,a));return}let s=t.length===3,n=t[0].dims[i?1:2],u=t[0].dims[i?2:3],d=t[0].dims[i?3:1],c=t[1].dims[2],h=t[1].dims[3],m=Yn(t[0].dims,t[1].dims,r.dilations,a.pads,r.strides,i),g=m[i?1:2],w=m[i?2:3],p=m[i?3:1],_=i&&c===n&&h===u&&r.pads[0]===0&&r.pads[1]===0;if(_||c===1&&h===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let k=m[0],P,W,H,j=[];if(i){let ae=e.kernelCustomData.wT??e.compute(Tr(t[1],Dn),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ae),_){let fe=n*u*d;P=t[0].reshape([1,k,fe]),W=ae.reshape([1,fe,p]),H=[1,k,p]}else P=t[0].reshape([k,n*u,d]),W=ae.reshape([1,d,p]),H=[k,g*w,p];j.push(P),j.push(W)}else P=t[0].reshape([k,d,n*u]),W=t[1].reshape([1,p,d]),H=[k,p,g*w],j.push(W),j.push(P);s&&j.push(t[2]);let be=H[2],te=j[0].dims[j[0].dims.length-1];be<8&&te<8?e.compute(ds(j,a,m,H,i),{inputs:j}):e.compute(qs(j,a,m,H,i),{inputs:j});return}let C=!0,E=e.kernelCustomData.wT??e.compute(Tr(t[1],Dn),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=E);let S=[t[0],E];s&&S.push(t[2]);let A=i?g*w:p,O=i?p:g*w,R=c*h*d;e.compute(ih(S,a,m,A,O,R,s,C),{inputs:S})},ju=(e,t)=>{let r=t.format==="NHWC",a=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&a.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),n=[1].concat(t.dilations),u=[1].concat(t.kernelShape),d=Ri({...t,pads:i,strides:s,dilations:n,kernelShape:u},a);e.compute(ls(a,d,c=>r?[c[0],c[2],c[3]]:[]))},cs=(e,t)=>{Fu(e.inputs,t),e.inputs[0].dims.length===3?ju(e,t):qu(e,e.inputs,t)}}),Ku,dh,Vm=Y(()=>{xe(),oa(),ke(),ua(),Gs(),nh(),oi(),Ku=(e,t=!1,r,a,i=4)=>{let s=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${a}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},n=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,u=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,d=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",c=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",h=e?"row":"col",m=e?"col":"row",g=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${h} / outWidth;
      let outCol = ${h} % outWidth;

      let WRow = ${m} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${m} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${d}) || fract(xR) > 0.0) {
        return ${a}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${c}) || fract(xC) > 0.0) {
        return ${a}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${m} % inChannels;
      ${n}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,w=e?`
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${g}
      }
      return ${a}(0.0);`:`
      let col = colIn * ${i};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${g}
      }
      return ${a}(0.0);`,p=`
      let col = colIn * ${i};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(i)}
      }
      return ${a}(0.0);
      `,_=ra(r,a);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${a} {
    ${e?w:p}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${a} {
    ${e?p:w}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${a}) {
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${u}
      ${Vs(t)}
      ${_}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;
    }
  }`},dh=(e,t,r,a,i,s,n,u)=>{let d=t.format==="NHWC",c=d?e[0].dims[3]:e[0].dims[1],h=r[0],m=d?r[2]:r[3],g=d?r[1]:r[2],w=d?r[3]:r[1],p=d&&c%4===0&&c%3&&w%4===0,_=d?w:m*g,C=d?m*g:w,E=[8,8,1],S=a<=8?[4,1,1]:[4,4,1],A=[Math.ceil(_/E[0]/S[0]),Math.ceil(C/E[1]/S[1]),Math.ceil(h/E[2]/S[2])];pt("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${A}`);let O=p?4:1,R=Math.max(E[0]*O,E[1]),k=p?4:1,P=[t.kernelShape[d?1:2],t.kernelShape[d?2:3]],W=[P[0]+(t.dilations[0]<=1?0:(P[0]-1)*(t.dilations[0]-1)),P[1]+(t.dilations[1]<=1?0:(P[1]-1)*(t.dilations[1]-1))],H=[W[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),W[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],j=[{type:6,data:a},{type:6,data:i},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:P},{type:6,data:H}];aa(t,j),j.push(...ye(e[0].dims,e[1].dims));let be=["rank","rank"];n&&(j.push(...ye(e[2].dims)),be.push("rank")),j.push(...ye(r));let te=ae=>{let fe=F("x",e[0].dataType,e[0].dims.length,k),ve=F("w",e[1].dataType,e[1].dims.length,1),D=he("result",e[0].dataType,r.length,k),ue=[fe,ve],Z="";if(n){let M=F("bias",e[2].dataType,e[2].dims.length,k);ue.push(M),Z+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${M.type.value} {
            return bias[coords.${d?"w":"y"}${p?"/ 4":""}];
          }`}let ne=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:P.length},{name:"pads",type:"i32",length:H.length}];na(t,ne);let oe=_t(e[0].dataType,1);if(oe!=="f16"&&oe!=="f32")throw new Error(`elemType ${oe} is not supported.`);return`
        ${Fs("uniforms.result_strides")}
        ${ae.registerUniforms(ne).declareVariables(...ue,D)};
        ${Z}
        ${Ku(d,n,t,fe.type.value,O)}
        ${p?ni(S,E,oe,void 0,!d,R):ii(S,E,oe,void 0,!d,R,!1,void 0,u)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${S};${E};${p}`,inputDependencies:be},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:j}),getShaderSource:te}}}),Yu,hs,Gm=Y(()=>{xe(),oa(),Ie(),ke(),Yu=(e,t,r,a,i,s=!1,n,u,d=!1)=>{let c=d?1:2,h=d?2:3,m=d?3:1,g=s?2:1,w=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${n}>`:n}) {
    result[flatIndex] = ${s?`vec4<${n}>`:n}(value);
  }`;a&&(w+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${n}>`:n} {
      return bias[coords.${d?"w":"y"}${s?"/ 4":""}];
    }`);let p=s?4:1,_=F("W",t[1].dataType,t[1].dims.length,p),C=F("Dy",t[0].dataType,t[0].dims.length,p),E=[C,_];a&&E.push(F("bias",t[2].dataType,[r[m]].length,p));let S=he("result",t[0].dataType,r.length,p),A=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${n}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${n}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${n}(dyCorner.x) + ${n}(wR)) / ${n}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${n}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${n}(dyCorner.y) + ${n}(wC)) / ${n}(uniforms.strides.y);
            let dyC2 = (${n}(dyCorner.y) + 1.0 + ${n}(wC)) / ${n}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${n}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${n}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${C.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${n}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${C.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${n}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${m}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${C.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${n}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${_.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${C.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${n}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${a?"bias[c+i]":`vec4<${n}>(0.0)`};
          ${S.set("batch","r","c + i","d1","value")};
        }
      }`,O=`
          let outputIndices = ${S.offsetToIndices("global_idx")};
          let batch = ${S.indicesGet("outputIndices",0)};
          let d1 = ${S.indicesGet("outputIndices",m)};
          let r = ${S.indicesGet("outputIndices",c)};
          let c = ${S.indicesGet("outputIndices",h)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${n}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${n}(dyRCorner) + ${n}(wR)) / ${n}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${n}(uniforms.Dy_shape[${c}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${n}(dyCCorner) + ${n}(wC)) / ${n}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${n}(uniforms.Dy_shape[${h}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${d?C.get("batch","idyR","idyC","inputChannel"):C.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${_.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${a?"bias[d1]":`${n}(0.0)`};
          ${S.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(u).declareVariables(...E,S)}
  ${w}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?A:O}}`},hs=(e,t,r)=>{let a=e.length>2,i=t.outputShape,s=G.size(i),n=[Math.ceil(s/64),1,1];pt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${n}`);let u=t.format==="NHWC",d=["rank","rank"],c=[t.strides[0],t.strides[1]],h=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],m=[t.dilations[0],t.dilations[1]],g=[h[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),h[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],w=[g[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),g[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],p=!1,_=t.group,C=e[1].dims,E=C[0]/_,S=C[1],A=[{type:12,data:s},{type:12,data:c},{type:12,data:h},{type:12,data:m},{type:12,data:g},{type:6,data:w},{type:12,data:E},{type:12,data:S},...ye(e[0].dims,e[1].dims)];a&&(A.push(...ye(e[2].dims)),d.push("rank")),A.push(...ye(i));let O=n[1]===1&&n[2]===1,R=k=>{let P=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:c.length},{name:"filter_dims",type:"u32",length:h.length},{name:"dilations",type:"u32",length:h.length},{name:"effective_filter_dims",type:"u32",length:g.length},{name:"pads",type:"i32",length:w.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],W=_t(e[0].dataType);return`${Yu(k,e,i,a,O,p,W,P,u)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:d},getRunData:()=>({dispatchGroup:{x:n[0],y:n[1],z:n[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:A}),getShaderSource:R}}}),Xu,Qu,Ju,zi,ph,Zu,el,tl,rl,ch,Fm=Y(()=>{Vm(),Gm(),ua(),ln(),Xu=(e,t,r,a,i,s)=>(e-1)*t+r+(a-1)*i+1-s,Qu=(e,t,r,a,i)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[a]=s,r[i]=e-s):t==="SAME_LOWER"&&(r[a]=e-s,r[i]=s)},Ju=(e,t,r,a,i,s,n,u,d,c)=>{let h=e.length-2,m=c.length===0;if(d.length===0)for(let p=0;p<h;++p)d.push(0);let g=e[0],w=t[u?3:1]*i;for(let p=0,_=e.length-h-(u?1:0);p<h;++p,++_){let C=e[_],E=m?C*n[p]:c[p],S=Xu(C,n[p],s[p],t[_],r[p],E);Qu(S,a,s,p,p+h),m&&c.push(n[p]*(C-1)+d[p]+(t[_]-1)*r[p]+1-s[p]-s[p+h])}c.splice(0,0,g),c.splice(u?3:1,0,w)},zi=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((m,g)=>m*g,1)===0){r.length=0;for(let m=2;m<t[1].dims.length;++m)r.push(t[1].dims[m])}let a=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(a?3:1,0,t[1].dims[1]);let i=e.pads.slice(),s=e.outputShape.slice(),n=e.outputPadding.slice(),u=t[0].dims,d=e.dilations.slice();if(d.reduce((m,g)=>m+g,0)===0){let m=t[0].dims.length-2;d=new Array(m).fill(1)}let c=e.strides.slice();if(c.reduce((m,g)=>m+g,0)===0){let m=t[0].dims.length-2;c=new Array(m).fill(1)}Ju(u,r,d,e.autoPad,e.group,i,c,a,n,s);let h=Object.assign({},e);return Object.assign(h,{kernelShape:r,pads:i,outputPadding:n,outputShape:s,dilations:d,strides:c}),h},ph=e=>{let t=Us(e),r=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,s=e.group,n=e.kernelShape,u=e.pads,d=e.strides,c=e.wIsConst(),h=e.outputPadding,m=e.outputShape;return{autoPad:a,format:r,dilations:i,group:s,kernelShape:n,outputPadding:h,outputShape:m,pads:u,strides:d,wIsConst:c,...t,cacheKey:`${e.format};${t.activation};`}},Zu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[0];if(r!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((n,u)=>n+u,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((n,u)=>n+u,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((n,u)=>n+u,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((n,u)=>n+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},el=[2,3,1,0],tl=(e,t,r)=>{let a=zi(r,t),i=r.format==="NHWC",s=a.outputShape,n=s[i?3:1],u=t[0].dims[i?3:1];if(a.group!==1||n===1&&u===1){e.compute(hs(t,a));return}let d=s[i?1:2],c=s[i?2:3],h=t[1].dims[2],m=t[1].dims[3],g=i?d*c:n,w=i?n:d*c,p=h*m*u,_=!0,C=e.kernelCustomData.wT??e.compute(Tr(t[1],el),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let E=[t[0],C],S=t.length===3;S&&(!i&&t[2].dims.length===1?E.push(t[2].reshape([t[2].dims[0],1,1])):E.push(t[2])),e.compute(dh(E,a,s,g,w,p,S,_),{inputs:E})},rl=(e,t)=>{let r=t.format==="NHWC",a=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&a.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let n=t.strides;(n.length===0||n[0]===0)&&(n=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],n=[1].concat(n),s=[1].concat(s),i=[1].concat(i);let d=zi({...t,pads:u,strides:n,dilations:s,kernelShape:i},a);e.compute(hs(a,d,c=>r?[c[0],c[2],c[3]]:[c[0],c[1],c[3]]))},ch=(e,t)=>{Zu(e.inputs,t),e.inputs[0].dims.length===3?rl(e,t):tl(e,e.inputs,t)}}),al,hh,fh,qm=Y(()=>{xe(),Ie(),wt(),ke(),al=(e,t,r,a)=>{let i=G.size(t),s=t.length,n=F("input",e,s),u=he("output",e,s),d=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),c=G.normalizeAxis(d,s),h=m=>{let g=` i32(${n.indicesGet("inputIndices","uniforms.axis")}) `,w=Ee("uniforms.input_shape","uniforms.axis",s),p=a.reverse?g+(a.exclusive?" + 1":""):"0",_=a.reverse?w:g+(a.exclusive?"":" + 1");return`
                ${m.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(n,u)}
                ${m.mainStart()}
                  ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${p};
                  let last : i32 = ${_};
                  for (var i : i32 = first; i < last; i++) {
                    ${n.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${n.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:a.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:c},...ye(t,t)]}),getShaderSource:h}},hh=(e,t)=>{let r=e.inputs[0].dims,a=e.inputs[0].dataType,i=e.inputs[1];e.compute(al(a,r,i,t),{inputs:[0]})},fh=e=>{let t=e.exclusive===1,r=e.reverse===1;return Ze({exclusive:t,reverse:r})}}),nl,il,sl,mh,gh,jm=Y(()=>{xe(),Ie(),wt(),ke(),nl=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},il=(e,t,r,a)=>{let i=[];i.push(`fn perm(i: ${a.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},sl=(e,t)=>{let r,a,i,s,n,u,d=t.format==="NHWC",c=t.blocksize,h=t.mode==="DCR";d?([r,a,i,s]=e.dims,n=h?[r,a,i,c,c,s/c**2]:[r,a,i,s/c**2,c,c],u=h?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,a,i,s]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],n=h?[r,c,c,s/c**2,a,i]:[r,s/c**2,c,c,a,i],u=h?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let m=e.reshape(n),g=m.dims.length,w=e.dataType,p=F("a",w,g),_=he("output",w,g),C=E=>`
  ${E.registerUniform("output_size","u32").declareVariables(p,_)}

  ${il(u,g,p,_)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${_.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${_.setByOffset("global_idx",p.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:E=>{let S=d?[r,a*c,i*c,s/c**2]:[r,s/c**2,a*c,i*c],A=G.size(S),O=m.dims,R=G.sortBasedOnPerm(O,u);return{outputs:[{dims:S,dataType:E[0].dataType}],dispatchGroup:{x:Math.ceil(A/64)},programUniforms:[{type:12,data:A},...ye(O,R)]}},getShaderSource:C}},mh=(e,t)=>{nl(e.inputs),e.compute(sl(e.inputs[0],t))},gh=e=>Ze({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Ln,Ga,Pi,ol,ul,ll,dl,Mi,pl,yh,bh,Km=Y(()=>{xe(),Ie(),wt(),ke(),Ln="[a-zA-Z]|\\.\\.\\.",Ga="("+Ln+")+",Pi="^"+Ga+"$",ol="("+Ga+",)*"+Ga,ul="^"+ol+"$",ll=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},dl=class{constructor(e,t){var i;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,a]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(ul)))throw new Error("Invalid LHS term");if(r.split(",").forEach((s,n)=>{let u=e[n].dims.slice();if(!s.match(RegExp(Pi)))throw new Error("Invalid LHS term");let d=this.processTerm(s,!0,u,n);this.lhs.push(d)}),a==="")a+=[...this.symbolToInfo.entries()].filter(([s,n])=>n.count===1||s==="...").map(([s])=>s).join("");else if(!a.match(RegExp(Ga)))throw new Error("Invalid RHS");(i=a.match(RegExp(Ln,"g")))==null||i.forEach(s=>{if(s==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let n=this.symbolToInfo.get(s);if(n===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(n.dimValue)}}),this.rhs=this.processTerm(a,!1,this.outputDims)}addSymbol(e,t,r){let a=this.symbolToInfo.get(e);if(a!==void 0){if(a.dimValue!==t&&a.count!==1)throw new Error("Dimension mismatch");a.count++,a.inputIndices.push(r)}else a={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,a)}processTerm(e,t,r,a=-1){let i=r.length,s=!1,n=[],u=0;if(!e.match(RegExp(Pi))&&!t&&e!=="")throw new Error("Invalid LHS term");let d=e.match(RegExp(Ln,"g")),c=new ll(a);return d==null||d.forEach((h,m)=>{if(h==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let g=i-d.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(n=r.slice(u,u+g),this.hasEllipsis){if(this.ellipsisDims.length!==n.length||this.ellipsisDims.toString()!==n.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=n;else throw new Error("Ellipsis must be specified in the LHS");for(let w=0;w<n.length;w++){let p=String.fromCharCode(48+w);c.addSymbol(p,m+w),this.addSymbol(p,r[u++],a)}}else c.addSymbol(h,m+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(h,r[u++],a)}),c}},Mi=e=>e+"_max",pl=(e,t,r,a)=>{let i=e.map(c=>c.length).map((c,h)=>F(`input${h}`,t,c)),s=G.size(a),n=he("output",t,a.length),u=[...r.symbolToInfo.keys()].filter(c=>!r.rhs.symbolToIndices.has(c)),d=c=>{let h=[],m="var prod = 1.0;",g="var sum = 0.0;",w="sum += prod;",p=[],_=[],C=[],E=[],S=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{var k;if(r.rhs.symbolToIndices.has(R)){let P=(k=r.rhs.symbolToIndices.get(R))==null?void 0:k[0];P!==void 0&&r.lhs.forEach((W,H)=>{if(O.inputIndices.includes(H)){let j=W.symbolToIndices.get(R);if(j===void 0)throw new Error("Invalid symbol error");j.forEach(be=>{h.push(`${i[H].indicesSet(`input${H}Indices`,be,n.indicesGet("outputIndices",P))}`)})}})}else r.lhs.forEach((P,W)=>{if(O.inputIndices.includes(W)){let H=P.symbolToIndices.get(R);if(H===void 0)throw new Error("Invalid symbol error");H.forEach(j=>{p.push(`${i[W].indicesSet(`input${W}Indices`,j,`${R}`)}`)}),E.push(`prod *= ${i[W].getByIndices(`input${W}Indices`)};`)}}),_.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${Mi(R)}; ${R}++) {`),C.push("}")});let A=S?[...h,`let sum = ${i.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...h,g,..._,...p,m,...E,w,...C];return`
            ${c.registerUniforms(u.map(O=>({name:`${Mi(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,n)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${n.offsetToIndices("global_idx")};
            ${i.map((O,R)=>`var input${R}Indices: ${i[R].type.indices};`).join(`
`)}
            ${A.join(`
`)};
            ${n.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=u.filter(m=>r.symbolToInfo.has(m)).map(m=>{var g;return{type:12,data:((g=r.symbolToInfo.get(m))==null?void 0:g.dimValue)||0}});c.push({type:12,data:s});let h=e.map((m,g)=>[...ye(m)]).reduce((m,g)=>m.concat(g),c);return h.push(...ye(a)),{outputs:[{dims:a,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:h}},getShaderSource:d}},yh=(e,t)=>{let r=new dl(e.inputs,t.equation),a=r.outputDims,i=e.inputs.map((s,n)=>s.dims);e.compute(pl(i,e.inputs[0].dataType,r,a))},bh=e=>{let t=e.equation.replace(/\s+/g,"");return Ze({equation:t})}}),cl,Bi,hl,fl,vh,Ym=Y(()=>{xe(),Ie(),ke(),cl=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),a=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;a<r.length&&i<t.length;++a,++i)if(r[a]!==t[i]&&r[a]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Bi=(e,t)=>{let r=e.length-t.length,a=[];for(let i=0;i<r;++i)a.push(e[i]);for(let i=0;i<t.length;++i)a.push(t[i]===1?e[i+r]:t[i]);return a},hl=(e,t)=>e.length>t.length?Bi(e,t):Bi(t,e),fl=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),a=hl(t,r),i=e[0].dataType,s=i===9?4:1,n=Math.ceil(G.size(a)/s),u=c=>{let h=F("input",i,t.length,s),m=he("output",i,a.length,s),g;if(i===9){let w=(p,_,C="")=>`
          let outputIndices${_} = ${m.offsetToIndices(`outputOffset + ${_}u`)};
          let offset${_} = ${h.broadcastedIndicesToOffset(`outputIndices${_}`,m)};
          let index${_} = offset${_} / 4u;
          let component${_} = offset${_} % 4u;
          ${p}[${_}] = ${C}(${h.getByOffset(`index${_}`)}[component${_}]);
        `;g=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${w("data",0,"u32")}
        ${w("data",1,"u32")}
        ${w("data",2,"u32")}
        ${w("data",3,"u32")}
        ${m.setByOffset("global_idx","data")}
      }`}else g=`
        let outputIndices = ${m.offsetToIndices("global_idx")};
        let inputOffset = ${h.broadcastedIndicesToOffset("outputIndices",m)};
        ${m.setByOffset("global_idx",h.getByOffset("inputOffset"))}
      }`;return`
    ${c.registerUniform("vec_size","u32").declareVariables(h,m)}
    ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${g}`},d=[{type:12,data:n},...ye(t,a)];return{name:"Expand",shaderCache:{hint:`${a.length}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:d})}},vh=e=>{cl(e.inputs),e.compute(fl(e.inputs),{inputs:[0]})}}),ml,wh,Xm=Y(()=>{xe(),Ie(),ke(),Hs(),ml=e=>{let t=e[0].dataType,r=G.size(e[0].dims),a=G.size(e[1].dims),i=a%4===0,s=n=>{let u=F("x",t,[1],4),d=F("bias",t,[1],4),c=he("y",t,[1],4),h=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],m=w=>`
      let bias${w}_offset: u32 = (global_idx * 4 + ${w}) % uniforms.bias_size;
      let bias${w} = ${d.getByOffset(`bias${w}_offset / 4`)}[bias${w}_offset % 4];`,g=i?`
      let bias = ${d.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${m(0)}${m(1)}${m(2)}${m(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${n.registerUniforms(h).declareVariables(u,d,c)}

    ${os(Nt(t))}

    ${n.mainStart(Ea)}
      ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${g}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",us("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:n=>({outputs:[{dims:n[0].dims,dataType:n[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:a}],dispatchGroup:{x:Math.ceil(r/Ea/4)}})}},wh=e=>{e.inputs.length<2||G.size(e.inputs[1].dims)===0?Gc(e):e.compute(ml(e.inputs))}}),gl,yl,$h,_h,Qm=Y(()=>{xe(),Ie(),wt(),ke(),gl=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},yl=(e,t)=>{let r=e[0].dims,a=e[1].dims,i=r.length,s=G.normalizeAxis(t.axis,i),n=r.slice(0);n.splice(s,1,...a);let u=r[s],d=e[0].dataType===9?4:1,c=Math.ceil(G.size(n)/d),h=[{type:12,data:c},{type:6,data:u},{type:12,data:s},...ye(e[0].dims,e[1].dims,n)],m=g=>{let w=F("data",e[0].dataType,e[0].dims.length,d),p=F("inputIndices",e[1].dataType,e[1].dims.length),_=he("output",e[0].dataType,n.length,d),C=S=>{let A=a.length,O=`var indicesIndices${S}  = ${p.type.indices}(0);`;for(let R=0;R<A;R++)O+=`${A>1?`indicesIndices${S}[${R}]`:`indicesIndices${S}`} = ${n.length>1?`outputIndices${S}[uniforms.axis + ${R}]`:`outputIndices${S}`};`;O+=`
          var idx${S} = ${p.getByIndices(`indicesIndices${S}`)};
          if (idx${S} < 0) {
            idx${S} = idx${S} + uniforms.axisDimLimit;
          }
          var dataIndices${S} : ${w.type.indices};
        `;for(let R=0,k=0;R<i;R++)R===s?(O+=`${i>1?`dataIndices${S}[${R}]`:`dataIndices${S}`} = u32(idx${S});`,k+=A):(O+=`${i>1?`dataIndices${S}[${R}]`:`dataIndices${S}`} = ${n.length>1?`outputIndices${S}[${k}]`:`outputIndices${S}`};`,k++);return O},E;if(e[0].dataType===9){let S=(A,O,R="")=>`
          let outputIndices${O} = ${_.offsetToIndices(`outputOffset + ${O}u`)};
          ${C(O)};
          let offset${O} = ${w.indicesToOffset(`dataIndices${O}`)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${A}[${O}] = ${R}(${w.getByOffset(`index${O}`)}[component${O}]);
        `;E=`
        let outputOffset = global_idx * ${d};
        var value = vec4<u32>(0);
        ${S("value",0,"u32")}
        ${S("value",1,"u32")}
        ${S("value",2,"u32")}
        ${S("value",3,"u32")}
        ${_.setByOffset("global_idx","value")}
      `}else E=`
      let outputIndices = ${_.offsetToIndices("global_idx")};
      ${C("")};
      let value = ${w.getByIndices("dataIndices")};
      ${_.setByOffset("global_idx","value")};
      `;return`
      ${g.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(w,p,_)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${E}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h}),getShaderSource:m}},$h=e=>Ze({axis:e.axis}),_h=(e,t)=>{let r=e.inputs;gl(r),e.compute(yl(e.inputs,t))}}),bl,vl,xh,Sh,Jm=Y(()=>{xe(),Ie(),wt(),ke(),bl=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},vl=(e,t)=>{let r=e[0].dims,a=e[0].dataType,i=r.length,s=e[1].dims,n=e[1].dataType,u=G.normalizeAxis(t.axis,i),d=r[u],c=s.slice(0),h=G.size(c),m=F("input",a,i),g=F("indicesInput",n,s.length),w=he("output",a,c.length),p=[{type:12,data:h},{type:6,data:d},{type:12,data:u}];return p.push(...ye(r,s,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:p}),getShaderSource:_=>`
      ${_.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(m,g,w)}
      ${_.mainStart()}
      ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${w.offsetToIndices("global_idx")};

      var idx = ${g.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${m.type.indices}(outputIndices);
      ${m.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${m.getByIndices("inputIndices")};

      ${w.setByOffset("global_idx","value")};
  }`}},xh=e=>Ze({axis:e.axis}),Sh=(e,t)=>{let r=e.inputs;bl(r),e.compute(vl(e.inputs,t))}}),wl,$l,Ch,Eh,Zm=Y(()=>{xe(),Ie(),ke(),wl=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},$l=(e,t)=>{let r=e[0].dims.slice(),a=e[1].dims.slice(),[i,s,n]=Pp.getShapeOfGemmResult(r,t.transA,a,t.transB,e.length===3?e[2].dims:void 0),u=[i,s];if(!u)throw new Error("Can't use gemm on the given tensors");let d=G.size(u),c=[{type:12,data:d},{type:12,data:i},{type:12,data:s},{type:12,data:n},{type:1,data:t.alpha},{type:1,data:t.beta}],h=["type","type"];e.length===3&&(c.push(...ye(e[2].dims)),h.push("rank")),c.push(...ye(u));let m=g=>{let w="";t.transA&&t.transB?w="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?w="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?w="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(w="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let p=t.alpha===1?"":"value *= uniforms.alpha;",_=F("a",e[0].dataType,e[0].dims),C=F("b",e[1].dataType,e[1].dims),E=_.type.value,S=null,A=[_,C];e.length===3&&(S=F("c",e[2].dataType,e[2].dims.length),A.push(S));let O=he("output",e[0].dataType,u.length);A.push(O);let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${g.registerUniforms(R).declareVariables(...A)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${E}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${w}
    }

    ${p}
    ${S!=null?`let cOffset = ${S.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${E}(uniforms.beta) * ${S.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:m}},Ch=e=>{let t=e.transA,r=e.transB,a=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:a,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Eh=(e,t)=>{wl(e.inputs),e.compute($l(e.inputs,t))}}),_l,xl,Sl,Th,eg=Y(()=>{xe(),Ie(),ke(),_l=(e,t)=>{let r=e[0].dims,a=r,i=2,s=G.sizeToDimension(r,i),n=G.sizeFromDimension(r,i),u=mt(n),d=n/u,c=[r[0],r[1],d],h=["rank","type","type"],m=[{type:12,data:n},{type:12,data:d}];m.push(...ye(c,c));let g=w=>{let p=F("x",e[0].dataType,c.length,u),_=F("scale",e[1].dataType,e[1].dims),C=F("bias",e[2].dataType,e[2].dims),E=he("output",e[0].dataType,c.length,u),S=[p,_,C,E],A=p.type.value,O=u===1?"f32":`vec${u}<f32>`,R=64,k=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${O}, ${R}>;
  const workgroupSize = ${R}u;
  ${w.registerUniforms(k).declareVariables(...S)}
  ${w.mainStart(R)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${O}(${p.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Lr("workgroupShared[0]",u)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${O}(${p.get("batch","channel","h")}) - ${O}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Lr("workgroupShared[0]",u)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));
    let channelScale = invStdDev * f32(${_.getByOffset("channel")});
    let channelShift = f32(${C.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${p.get("batch","channel","h")} * ${A}(${O}(channelScale)) + ${A}(${O}(channelShift));
      ${E.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${u}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:s},programUniforms:m}),getShaderSource:g}},xl=(e,t,r,a,i,s,n,u)=>{let d=mt(n),c=64,h=d===1?"vec2f":`mat2x${d}f`,m=d===1?"f32":`vec${d}f`,g=(k,P)=>`${h}(${k}, ${P})`,w=i*n/d,p=Math.ceil(s/c),_=["type"],C=[{type:12,data:p},{type:12,data:s},{type:12,data:Math.floor(n/d)},{type:12,data:Math.floor(s*n/d)}],E=k=>{let P=F("input",t.dataType,t.dims,d);return`
  ${k.declareVariables(P)}
  @group(0) @binding(1) var<storage, read_write> output : array<${h}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${k.mainStart(c)}
    let currentImageNumber = global_idx / ${c} / uniforms.C;
    let currentChannelNumber = (global_idx / ${c}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Er("f32",d)};
    var squaredSum = ${Er("f32",d)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${m}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${g("sum","squaredSum")};
  }`},S=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${d}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:[i,n,c,2],dataType:1}],dispatchGroup:{x:i*n/d},programUniforms:C}),getShaderSource:E},{inputs:[t],outputs:[-1]})[0],A=[{type:12,data:w},{type:12,data:s},{type:12,data:Math.floor(n/d)},{type:12,data:Math.floor(c*n/d)}],O=["type","type","type"],R=k=>{let P=F("scale",r.dataType,r.dims,d),W=F("bias",a.dataType,a.dims,d);return`
  @group(0) @binding(0) var<storage, read> input : array<${h}>;
  @group(0) @binding(1) var<storage, read> scale : array<${P.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${W.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${h}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Er("f32",d)};
    var squaredSum = ${Er("f32",d)};
    for (var i: u32 = 0; i < min(${c}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${c}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${u}));
    let channelScale = invStdDev * ${m}(scale[currentChannelNumber]);
    let channelShift = ${m}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${g("channelScale","channelShift")};
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${d};${u}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,n,2],dataType:1}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:A}),getShaderSource:R},{inputs:[S,r,a],outputs:[-1]})[0]},Sl=(e,t,r)=>{let a=t[0].dims,i=a,s=a[0],n=a[a.length-1],u=G.sizeFromDimension(a,1)/n,d=mt(n),c=G.size(i)/d,h=[{type:12,data:u},{type:12,data:Math.floor(n/d)}],m=["type","type"],g=xl(e,t[0],t[1],t[2],s,u,n,r.epsilon),w=p=>{let _=_t(t[0].dataType),C=d===1?"vec2f":`mat2x${d}f`,E=d===1?_:`vec${d}<${_}>`,S=F("input",t[0].dataType,t[0].dims,d),A=he("output",t[0].dataType,i,d);return`
  @group(0) @binding(0) var<storage, read> input : array<${S.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${C}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${A.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${p.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${E}(scale[0]), ${E}(scale[1]));
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${d}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:h}),getShaderSource:w},{inputs:[t[0],g]})},Th=(e,t)=>{t.format==="NHWC"?Sl(e,e.inputs,t):e.compute(_l(e.inputs,t))}}),Cl,El,kh,tg=Y(()=>{xe(),Ie(),ke(),Cl=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},El=(e,t,r)=>{let a=t.simplified,i=e[0].dims,s=e[1],n=!a&&e[2],u=i,d=G.normalizeAxis(t.axis,i.length),c=G.sizeToDimension(i,d),h=G.sizeFromDimension(i,d),m=G.size(s.dims),g=n?G.size(n.dims):0;if(m!==h||n&&g!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${m} and bias size of ${g}`);let w=[];for(let R=0;R<i.length;++R)R<d?w.push(i[R]):w.push(1);let p=mt(h),_=["type","type"],C=[{type:12,data:c},{type:1,data:h},{type:12,data:Math.floor(h/p)},{type:1,data:t.epsilon}];n&&_.push("type");let E=r>1,S=r>2,A=R=>{let k=_t(e[0].dataType),P=[F("x",e[0].dataType,e[0].dims,p),F("scale",s.dataType,s.dims,p)];n&&P.push(F("bias",n.dataType,n.dims,p)),P.push(he("output",e[0].dataType,u,p)),E&&P.push(he("mean_data_output",1,w)),S&&P.push(he("inv_std_output",1,w));let W=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${R.registerUniforms(W).declareVariables(...P)}
  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Er("f32",p)};
    var mean_square_vector = ${Er("f32",p)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${wa(k,p,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Lr("mean_vector",p)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Lr("mean_square_vector",p)} / uniforms.norm_size ${a?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${wa(k,p,"x[j + offset]")};
      let f32scale = ${wa(k,p,"scale[j]")};
      output[j + offset] = ${P[0].type.value}((f32input ${a?"":"- mean"}) * inv_std_dev * f32scale
        ${n?`+ ${wa(k,p,"bias[j]")}`:""}
      );
    }

    ${E?"mean_data_output[global_idx] = mean":""};
    ${S?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},O=[{dims:u,dataType:e[0].dataType}];return E&&O.push({dims:w,dataType:1}),S&&O.push({dims:w,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${p};${r};${a}`,inputDependencies:_},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:C}),getShaderSource:A}},kh=(e,t)=>{Cl(e.inputs),e.compute(El(e.inputs,t,e.outputCount))}}),Tl,kl,Ah,Ih,rg=Y(()=>{xe(),Ie(),wt(),ke(),Tl=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],a=r.dims.length;if(r.dims[a-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,n=e[1];if(!G.areEqual(n.dims,[t.n,i,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(G.size(u)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,c=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(G.size(d)!==c)throw new Error("zeroPoints input size error.")}},kl=(e,t,r,a)=>{let i=e[0].dims,s=i.length,n=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=i[s-2],d=t.k,c=t.n,h=i.slice(0,s-2),m=G.size(h),g=t.blockSize/8*t.bits/4,w=e[0].dataType,p=mt(u),_=mt(t.k),C=mt(g),E=an(w),S=u*n*E,A=Math.floor(a/S),O=n<=r[0]&&A>0,R=!O||A>=4?mt(c):A>=2&&mt(c)>=2?2:1,k=h.concat([u,c]),P=G.size(k)/R/p,W=O?[]:[{type:12,data:P},{type:12,data:t.blockSize}],H=[m,u,d/_],j=G.convertShape(e[1].dims).slice();j.splice(-1,1,g/C),W.push(...ye(H)),W.push(...ye(j)),W.push(...ye(e[2].dims)),e.length===4&&W.push(...ye(G.convertShape(e[3].dims)));let be=[m,u,c/R];W.push(...ye(be));let te=ae=>{let fe=H.length,ve=F("a",e[0].dataType,fe,_),D=F("b",12,j.length,C),ue=F("scales",e[2].dataType,e[2].dims.length),Z=[ve,D,ue],ne=e.length===4?F("zero_points",12,e[3].dims.length):void 0;ne&&Z.push(ne);let oe=be.length,M=he("output",e[0].dataType,oe,R),X=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],ie=_t(e[0].dataType),$e=(()=>{switch(_){case 1:return`array<${ie}, 8>`;case 2:return`mat4x2<${ie}>`;case 4:return`mat2x4<${ie}>`;default:throw new Error(`${_}-component is not supported.`)}})(),Ae=`
        for (var word: u32 = 0; word < ${g}; word += ${C}) {
          ${D.indicesSet("b_indices","2","word")};
          let b_data = ${D.getByIndices("b_indices")};
          for (var i: u32 = 0; i < ${C}; i++) {
            let b_value: u32 = ${C===1?"b_data":"b_data[word + i]"};
            let b_mask: u32 = 0x0F0F0F0Fu;
            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);
            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);
            let b_quantized_values = ${$e}(${Array.from({length:4},(et,at)=>`${ie}(b_value_lower[${at}]), ${ie}(b_value_upper[${at}])`).join(", ")});
            let b_dequantized_values = ${_===1?`${$e}(${Array.from({length:8},(et,at)=>`(b_quantized_values[${at}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${$e}(${Array(8).fill("zero_point").join(",")})) * scale;`};
            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
            for (var m: u32 = 0; m < ${O?u:p}u; m++) {
              ${ve.indicesSet("a_indices",fe-2,O?"m":`row * ${p} + m`)};
              ${ve.indicesSet("a_indices",fe-1,"word_offset")};
              var input_offset = ${ve.indicesToOffset("a_indices")};
              var a_data: ${$e};
              for (var j: u32 = 0; j < ${8/_}; j++) {
                a_data[j] = ${ve.getByOffset("input_offset")};
                input_offset++;
              }
              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/_},(et,at)=>`${_===1?`a_data[${at}] * b_dequantized_values[${at}]`:`dot(a_data[${at}], b_dequantized_values[${at}])`}`).join(" + ")};
            }
            word_offset += ${8/_};
          }
        }`,ze=ne?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${ne.getByOffset("zero_point_index")};
          }`:"";return O?`
        var<workgroup> workgroup_shared: array<${M.type.value}, ${u*n}>;
        ${ae.declareVariables(...Z,M)}
        ${ae.mainStart([n,1,1])}
          var a_indices: ${ve.type.indices};
          var block = local_id.x;
          var col = workgroup_id.y;
          var batch = workgroup_id.z;
          ${ve.indicesSet("a_indices","0","batch")};
          // Two zero points are packed into one byte when uniforms.bits is 4.
          for (var c: u32 = 0; c < ${R}; c++) {
            let col_times_components_plus_c = col * ${R} + c;
              ${ne?`
            var zero_point_bytes_per_col: u32 = (${n} + 1) / 2;
            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);
            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;
            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;
            var zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            var zero_point_word: u32 = ${ne.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}
            var b_indices: ${D.type.indices};
            ${D.indicesSet("b_indices","0","col_times_components_plus_c")};
            // The scale and zero points are computed per block.
            var scales_index = col_times_components_plus_c * ${n} + block;
            let scale = ${ue.getByOffset("scales_index")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ie}(${ne?"(zero_point_word) & 0xFu":8});
            ${D.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block * ${t.blockSize/_};
            var workgroup_shared_offset: u32 = block * ${u};
            ${Ae}
          }
          workgroupBarrier();
          if (local_id.x == 0u) {
            var output_indices: ${M.type.indices};
            ${M.indicesSet("output_indices","0","batch")};
            ${M.indicesSet("output_indices",oe-1,"col")};
            ${M.indicesSet("output_indices",oe-2,"0")};
            var output_offset = ${M.indicesToOffset("output_indices")};
            for (var m: u32 = 0u; m < ${u}u; m++) {
              var output_value: ${M.type.value} = ${M.type.value}(0);
              var workgroup_shared_offset: u32 = m;
              for (var b: u32 = 0u; b < ${n}u; b++) {
                output_value += workgroup_shared[workgroup_shared_offset];
                workgroup_shared_offset += ${u};
              }
              ${M.setByOffset("output_offset","output_value")};
              output_offset += ${c/R};
            }
          }
        }`:`
        ${ae.registerUniforms(X).declareVariables(...Z,M)}
        ${ae.mainStart()}
          ${ae.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${M.type.value}, ${p}>;
          var output_indices = ${M.offsetToIndices("global_idx")};
          var col = ${M.indicesGet("output_indices",oe-1)};
          var row = ${M.indicesGet("output_indices",oe-2)};
          var a_indices: ${ve.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${ne?`
          var zero_point_abs_offset = col * ${R} * ((${n} + 1) / 2);
          var zero_point_index: u32 = zero_point_abs_offset / 4;
          var zero_point_word: u32 = ${ne.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}
          var scale_index = col * ${n*R};
          var b_indices: ${D.type.indices};
          for (var c: u32 = 0; c < ${R}; c++) {
            ${D.indicesSet("b_indices","0",`col * ${R} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${n}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${ue.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${ie}(${ne?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${D.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              ${Ae}
              scale_index++;
              ${ze}
              block_offset += uniforms.block_size / ${_};
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${ne?`if (zero_point_offset % 8 > 0) {
                ${ze}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${p}u; k++) {
              ${M.indicesSet("output_indices",oe-2,`${p} * row + k`)};
              ${M.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${u};${w};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:k,dataType:w}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(c/R),z:m}:{x:Math.ceil(P/64)},programUniforms:W}),getShaderSource:te}},Ah=(e,t)=>{Tl(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),a=e.getMaxComputeWorkgroupStoragesize();e.compute(kl(e.inputs,t,r,a))},Ih=e=>Ze(e)}),It,Al,Oh,Di,Il,Nn,Rh,ag=Y(()=>{xe(),Ie(),wt(),Bs(),dc(),ke(),ln(),It=(e,t)=>e.length>t&&e[t].dims.length>0&&G.size(e[t].dims)>0?e[t]:void 0,Al=(e,t)=>{let r=e[0],a=It(e,1),i=It(e,2),s=It(e,3),n=It(e,4),u=It(e,5),d=It(e,6),c=It(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let h=!1,m=r.dims[0],g=r.dims[1],w=r.dims.length===3?h?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],p=g,_=0,C=0,E=Math.floor(w/t.numHeads);if(d&&c){if(d.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==m||d.dims[1]!==t.numHeads||d.dims[3]!==E)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==m||c.dims[1]!==t.numHeads||c.dims[3]!==E)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');_=d.dims[2],C=d.dims[2]}else if(d||c)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let S;if(a){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(a.dims.length<3||a.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==a.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(a.dims.length===3){if(a.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');S=2,p=a.dims[1]}else if(a.dims.length===5){if(a.dims[2]!==t.numHeads||a.dims[3]!==2||a.dims[4]!==E)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');S=5,p=a.dims[1]}else{if(a.dims[1]!==t.numHeads||a.dims[3]!==E)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');S=0,p=a.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');S=3}if(s){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let A=0;if(n){A=8;let W=n.dims;throw W.length===1?W[0]===m?A=1:W[0]===3*m+2&&(A=3):W.length===2&&W[0]===m&&W[1]===p&&(A=5),A===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let O=!1,R=w;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(p!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');R=i.dims[2]}else{if(p!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');R=i.dims[1]*i.dims[3],O=!0}}let k=_+p,P=!1;if(n)throw new Error("Key padding mask is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "relative_position_bias" is expected to have 4 dimensions');if(u.dims[0]!==m&&u.dims[0]!==1||u.dims[1]!==t.numHeads||u.dims[2]!==g||u.dims[3]!==k)throw new Error('Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)')}return{batchSize:m,sequenceLength:g,pastSequenceLength:_,kvSequenceLength:p,totalSequenceLength:k,maxSequenceLength:C,inputHiddenSize:0,hiddenSize:w,vHiddenSize:R,headSize:E,vHeadSize:Math.floor(R/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:A,scale:t.scale,broadcastResPosBias:P,passPastInKv:O,qkvFormat:S}},Oh=e=>Ze({...e}),Di=Ze({perm:[0,2,1,3]}),Il=(e,t,r,a,i,s,n)=>{let u=[a,i,s],d=G.size(u),c=[{type:12,data:d},{type:12,data:n},{type:12,data:s}],h=m=>{let g=he("qkv_with_bias",t.dataType,u),w=F("qkv",t.dataType,u),p=F("bias",r.dataType,u),_=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${m.registerUniforms(_).declareVariables(w,p,g)}
  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:h},{inputs:[t,r],outputs:[-1]})[0]},Nn=(e,t,r,a,i,s,n,u)=>{let d=s;if(n){if(a===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return d=Il(e,s,n,t,a,r*i,u),d=d.reshape([t,a,r,i]),e.compute(Tr(d,Di.perm),{inputs:[d],outputs:[-1]})[0]}else return s.dims.length===3&&(d=s.reshape([t,a,r,i])),e.compute(Tr(d,Di.perm),{inputs:[d],outputs:[-1]})[0]},Rh=(e,t)=>{let r=Al(e.inputs,t),a=e.inputs[0],i=It(e.inputs,1),s=It(e.inputs,2),n=It(e.inputs,3),u=It(e.inputs,4),d=It(e.inputs,5),c=It(e.inputs,6),h=It(e.inputs,7);if(a.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let m=i&&s&&i.dims.length===4&&s.dims.length===4,g=Nn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,a,n,0);if(m)return ai(e,g,i,s,u,void 0,c,h,d,r,t);if(!i||!s)throw new Error("key and value must be provided");let w=Nn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,n,r.hiddenSize),p=Nn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,n,2*r.hiddenSize);ai(e,g,w,p,u,void 0,c,h,d,r,t)}}),Ol,Rl,zl,Pl,Ml,Bl,Dl,Ll,zh,ng=Y(()=>{xe(),Ie(),ke(),Ol=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Rl=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
            k = i32(${e.indicesGet("indices",i)}) - ${Ee("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Ee("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${Ee("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${a}
            value = x[offset];
          }
      `},zl=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ee("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Ee("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Ee("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Ee("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},Pl=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ee("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Ee("uniforms.x_shape",i,t)})) {
                  k = i32(${Ee("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${Ee("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},Ml=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Ee("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${Ee("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${Ee("uniforms.x_shape",i,t)})) {
                  k -= i32(${Ee("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${Ee("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},Bl=(e,t,r)=>{switch(r.mode){case 0:return Rl(e,t,r.pads.length);case 1:return zl(e,t,r.pads.length);case 2:return Pl(e,t,r.pads.length);case 3:return Ml(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Dl=(e,t)=>{let r=G.padShape(e[0].dims.slice(),t.pads),a=e[0].dims,i=G.size(r),s=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&s.push({type:e[0].dataType,data:t.value}),s.push(...ye(e[0].dims,r));let n=["rank"],u=d=>{let c=he("output",e[0].dataType,r.length),h=F("x",e[0].dataType,a.length),m=h.type.value,g=Bl(c,a.length,t),w=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&w.push({name:"constant_value",type:m}),`
            ${d.registerUniforms(w).declareVariables(h,c)}
            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${c.offsetToIndices("global_idx")};

            var value = ${m}(0);
            ${g}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:n},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(G.size(r)/64)},programUniforms:s}),getShaderSource:u}},Ll=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),a=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,s=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let d=0;d<u.length;d++)s[Number(u[d])]=Number(r[d]),s[Number(u[d])+i]=Number(r[d+u.length])}else r.forEach((u,d)=>s[Number(d)]=Number(u));let n=[];return s.forEach(u=>n.push(u)),{mode:t.mode,value:a,pads:n}}else return t},zh=(e,t)=>{Ol(e.inputs);let r=Ll(e.inputs,t);e.compute(Dl(e.inputs,r),{inputs:[0]})}}),Fa,Li,Ni,Wi,Hi,Nl,Wl,Ui,Vi,Ph,Mh,Gi,Bh,Dh,Fi,Lh,Nh,Wh,Hh,ig=Y(()=>{fr(),xe(),Ie(),ke(),Fa=e=>{if(Fe.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Li=(e,t,r)=>{let a=t.format==="NHWC",i=e.dims.slice();a&&i.splice(1,0,i.pop());let s=Object.hasOwnProperty.call(t,"dilations"),n=t.kernelShape.slice(),u=t.strides.slice(),d=s?t.dilations.slice():[],c=t.pads.slice();ei.adjustPoolAttributes(r,i,n,u,d,c);let h=ei.computePoolOutputShape(r,i,u,d,n,c,t.autoPad),m=Object.assign({},t);s?Object.assign(m,{kernelShape:n,strides:u,pads:c,dilations:d,cacheKey:t.cacheKey}):Object.assign(m,{kernelShape:n,strides:u,pads:c,cacheKey:t.cacheKey});let g=h.slice();return g.push(g.splice(1,1)[0]),[m,a?g:h]},Ni=(e,t)=>{let r=t.format==="NHWC",a=G.size(e),i=G.size(t.kernelShape),s=[{type:12,data:a},{type:12,data:i}],n=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],d=t.strides[t.strides.length-1],c=t.pads[t.pads.length/2-1],h=t.pads[t.pads.length-1],m=!!(c+h);s.push({type:12,data:u},{type:12,data:d},{type:12,data:c},{type:12,data:h}),n.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let g=!1;if(t.kernelShape.length===2){let w=t.kernelShape[t.kernelShape.length-2],p=t.strides[t.strides.length-2],_=t.pads[t.pads.length/2-2],C=t.pads[t.pads.length-2];g=!!(_+C),s.push({type:12,data:w},{type:12,data:p},{type:12,data:_},{type:12,data:C}),n.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,n,!0,m,g]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=G.computeStrides(t.kernelShape);s.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),n.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let d=t.pads.reduce((c,h)=>c+h);return[s,n,!!d,!1,!1]}},Wi=(e,t,r,a,i,s,n,u,d,c,h,m)=>{let g=i.format==="NHWC",w=t.type.value,p=he("output",t.type.tensor,a);if(i.kernelShape.length<=2){let _="",C="",E="",S=r-(g?2:1);if(h?_=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${S}] < 0 || xIndices[${S}]
                      >= uniforms.x_shape[${S}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:_=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,i.kernelShape.length===2){let A=r-(g?3:2);m?C=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${A}] = indices[${A}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${A}] < 0 || xIndices[${A}] >= uniforms.x_shape[${A}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:C=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${A}] = indices[${A}] * uniforms.sh - uniforms.phStart + j;
                `,E=`
              }
            `}return`
            ${e.registerUniforms(d).declareVariables(t,p)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${p.offsetToIndices("global_idx")};
              var xIndices = ${p.offsetToIndices("global_idx")};

              var value = ${w}(${u});
              var pad = 0;
              ${C}
              ${_}
              ${E}
              ${n}

              output[global_idx] = value;
            }`}else{if(g)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let _=i.kernelShape.length,C=i.pads.length,E="";return c?E=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:E=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.registerUniforms(d).declareVariables(t,p)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${p.offsetToIndices("global_idx")};
              var xIndices = ${p.offsetToIndices("global_idx")};

              var offsets: array<u32, ${_}>;

              var value = ${w}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${_-1}u; j++) {
                  offsets[j] = offset / ${Ee("uniforms.kernelStrides","j",_)};
                  offset -= offsets[j] * ${Ee("uniforms.kernelStrides","j",_)};
                }
                offsets[${_-1}] = offset;

                isPad = false;
                for (var j = ${r-_}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${Ee("uniforms.strides",`j - ${r-_}u`,_)}
                    + offsets[j - ${r-_}u] - ${Ee("uniforms.pads","j - 2u",C)};
                  ${E}
              }
              ${n}

              output[global_idx] = value;
            }`}},Hi=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Nl=e=>`${Hi(e)};${e.countIncludePad}`,Wl=e=>`${Hi(e)};${e.storageOrder};${e.dilations}`,Ui=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Vi=(e,t,r,a)=>{let[i,s]=Li(t,a,r),n=F("x",t.dataType,t.dims.length),u=n.type.value,d="value += x_val;",c="";i.countIncludePad?c+=`value /= ${u}(uniforms.kernelSize);`:c+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[h,m,g,w,p]=Ni(s,i);h.push(...ye(t.dims,s));let _=["rank"];return{name:e,shaderCache:{hint:`${a.cacheKey};${g};${w};${p}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(G.size(s)/64)},programUniforms:h}),getShaderSource:C=>Wi(C,n,t.dims.length,s.length,i,d,c,0,m,g,w,p)}},Ph=e=>{let t=e.count_include_pad!==0,r=Ui(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let a={countIncludePad:t,...r,cacheKey:""};return{...a,cacheKey:Nl(a)}},Mh=(e,t)=>{Fa(e.inputs),e.compute(Vi("AveragePool",e.inputs[0],!1,t))},Gi={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Bh=e=>{let t=e.format;return{format:t,...Gi,cacheKey:t}},Dh=(e,t)=>{Fa(e.inputs),e.compute(Vi("GlobalAveragePool",e.inputs[0],!0,t))},Fi=(e,t,r,a)=>{let[i,s]=Li(t,a,r),n=`
      value = max(x_val, value);
    `,u="",d=F("x",t.dataType,t.dims.length),c=["rank"],[h,m,g,w,p]=Ni(s,i);return h.push(...ye(t.dims,s)),{name:e,shaderCache:{hint:`${a.cacheKey};${g};${w};${p}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(G.size(s)/64)},programUniforms:h}),getShaderSource:_=>Wi(_,d,t.dims.length,s.length,i,n,u,t.dataType===10?-65504:-1e5,m,g,w,p)}},Lh=(e,t)=>{Fa(e.inputs),e.compute(Fi("MaxPool",e.inputs[0],!1,t))},Nh=e=>{let t=e.storage_order,r=e.dilations,a=Ui(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(a.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...a,cacheKey:""};return{...i,cacheKey:Wl(i)}},Wh=e=>{let t=e.format;return{format:t,...Gi,cacheKey:t}},Hh=(e,t)=>{Fa(e.inputs),e.compute(Fi("GlobalMaxPool",e.inputs[0],!0,t))}}),Hl,Ul,Uh,sg=Y(()=>{fr(),xe(),ke(),Hl=(e,t,r)=>{let a=e===t,i=e<t&&r<0,s=e>t&&r>0;if(a||i||s)throw new Error("Range these inputs' contents are invalid.")},Ul=(e,t,r,a)=>{let i=Math.abs(Math.ceil((t-e)/r)),s=[i],n=i,u=[{type:12,data:n},{type:a,data:e},{type:a,data:r},...ye(s)],d=c=>{let h=he("output",a,s.length),m=h.type.value,g=[{name:"outputSize",type:"u32"},{name:"start",type:m},{name:"delta",type:m}];return`
        ${c.registerUniforms(g).declareVariables(h)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${m}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${a}`},getShaderSource:d,getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:u})}},Uh=e=>{let t=0,r=0,a=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],a=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],a=e.inputs[2].getFloat32Array()[0]),Fe.webgpu.validateInputContent&&Hl(t,r,a),e.compute(Ul(t,r,a,e.inputs[0].dataType),{inputs:[]})}}),Vl,Gl,Fl,ql,jl,Kl,Yl,Xl,Ql,Jl,Zl,qi,ed,td,rd,ad,nd,Vh,Gh,og=Y(()=>{xe(),Ie(),wt(),ke(),Vl=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Gl=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let a=new Array(r).fill(1);return t.forEach((i,s)=>a[i]=e[s]),a},Fl=(e,t,r,a,i,s)=>{let[n,u,d]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(n>0&&e.length>n&&e[n].dims.length>0)e[n].getFloat32Array().forEach(h=>s.push(h));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length>0){if(e[u].getFloat32Array().forEach(h=>a.push(h)),a.length!==0&&a.length!==c&&r>=18&&a.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Vl(a,t),t.axes.length>0&&Gl(a,t.axes,c).forEach((h,m)=>a[m]=h)}if(d>0&&e.length>d&&(e[d].getBigInt64Array().forEach(h=>i.push(Number(h))),i.length!==c||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(a.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof a<"u"&&typeof i<"u"&&a.length>0&&i.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},ql=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",jl=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Kl=(e,t,r)=>{let a=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?a:e.slice();return t.length>0?(t.forEach((s,n)=>{a[s]=i[n],a[n+r]=i[t.length+n]}),a):i},Yl=(e,t,r,a)=>{let i=[];if(r.length>0)if(a.length>0){if(e.forEach(s=>i.push(s)),Math.max(...a)>e.length)throw new Error("axes is out of bound");a.forEach((s,n)=>i[s]=r[n])}else r.forEach(s=>i.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((s,n)=>Math.round(s*t[n]))}return i},Xl=(e,t,r)=>{let a=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=a),r.axes.forEach(s=>i[s]=Math.round(e[s]*t[s]))):(t.fill(a,0,t.length),i.forEach((s,n)=>i[n]=Math.round(s*t[n]))),i},Ql=(e,t,r,a,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${Ee("uniforms.scales","i",a)};
        var roi_low = ${Ee("uniforms.roi","i",i)};
        var roi_hi = ${Ee("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${Ee("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${Ee("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Jl=(e,t,r,a,i,s,n)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${a.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Ee("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Ee("uniforms.roi","i",s)};
          var roi_hi = ${Ee("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${Ee("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${Ee("uniforms.output_shape","i",a.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${n} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Zl=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Ee("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,qi=(e,t,r,a)=>e.rank>a?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",ed=(e,t,r,a,i)=>{let[s,n,u,d]=r.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",n,`max(0, min(row, ${r[n]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${qi(e,d,s,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${n}];
      var col:${c} = originalIndices[${u}];
      ${a?`if (row < 0 || row > (${r[n]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[n]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},td=(e,t,r,a,i,s,n,u,d,c)=>{let h=r.length===2,[m,g]=h?[0,1]:[2,3],w=e.type.value,p=_=>{let C=_===m?"row":"col";return`
      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${w} {
        var output_index = ${t.indicesGet("output_indices",_)};
        var originalIdx: ${w} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[_]},
        ${a[_]}, ${r[_]}, ${s[_]}, ${s[_]} + ${r.length});
        var fractOriginalIdx: ${w} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[_]} - 1))) {
          return ${d};
        }
        var data: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${C}: ${w} = originalIdx + ${w}(i);
          if (${C} < 0 || ${C} >= ${r[_]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${d};`:`${C} = max(0, min(${C}, ${r[_]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",_,`u32(${C})`)};
          data[i + 1] = ${_===m?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${p(m)};
    ${p(g)};
  fn getCubicInterpolationCoefs(s: ${w}) -> array<${w}, 4> {
    var absS = abs(s);
    var coeffs: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${w} = 1.0 - absS;
    var twoMinusAbsS: ${w} = 2.0 - absS;
    var onePlusAbsS: ${w} = 1.0 + absS;
    coeffs[0] = ((${n} * onePlusAbsS - 5 * ${n}) * onePlusAbsS + 8 * ${n}) * onePlusAbsS - 4 * ${n};
    coeffs[1] = ((${n} + 2) * absS - (${n} + 3)) * absS * absS + 1;
    coeffs[2] = ((${n} + 2) * oneMinusAbsS - (${n} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${n} * twoMinusAbsS - 5 * ${n}) * twoMinusAbsS + 8 * ${n}) * twoMinusAbsS - 4 * ${n};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${w}, 4>, coefs: array<${w}, 4>) -> ${w} {
    var coefsSum: ${w} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${w} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},rd=(e,t,r,a,i)=>{let[s,n,u,d,c]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",n,`max(0, min(depth, ${r[n]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(width, ${r[d]} - 1))`)};
      ${qi(e,c,s,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${h} = originalIndices[${n}];
      var height:${h} = originalIndices[${u}];
      var width:${h} = originalIndices[${d}];
      ${a?`if (depth < 0 || depth > (${r[n]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[d]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[n]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[d]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${h} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${h} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${h} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${h} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${h} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${h} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${h} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${h} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${h} = abs(depth - ${h}(depth1));
      var dx2: ${h} = abs(${h}(depth2) - depth);
      var dy1: ${h} = abs(height - ${h}(height1));
      var dy2: ${h} = abs(${h}(height2) - height);
      var dz1: ${h} = abs(width - ${h}(width1));
      var dz2: ${h} = abs(${h}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},ad=(e,t,r,a,i,s)=>{let n=e.dims,u=Kl(s,t.axes,n.length),d=Yl(n,a,i,t.axes),c=a.slice();a.length===0&&(c=n.map((S,A)=>S===0?1:d[A]/S),t.keepAspectRatioPolicy!=="stretch"&&(d=Xl(n,c,t)));let h=he("output",e.dataType,d.length),m=F("input",e.dataType,n.length),g=G.size(d),w=n.length===d.length&&n.every((S,A)=>S===d[A]),p=t.coordinateTransformMode==="tf_crop_and_resize",_=t.extrapolationValue,C=m.type.value,E=S=>`
      ${w?"":`
      ${ql(t.coordinateTransformMode,C)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${Zl(m,n)};
              ${jl(t.nearestMode,r,C)};
              ${Jl(m,h,n,d,c.length,u.length,p)};
              `;case"linear":return`
              ${Ql(h,n,d,c.length,u.length)};
              ${(()=>{if(n.length===2||n.length===4)return`${ed(m,h,n,p,_)}`;if(n.length===3||n.length===5)return`${rd(m,h,n,p,_)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(n.length===2||n.length===4)return`${td(m,h,n,d,c,u,t.cubicCoeffA,p,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${S.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",u.length).declareVariables(m,h)}
      ${S.mainStart()}
        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${w?"output[global_idx] = input[global_idx];":`
        let output_indices = ${h.offsetToIndices("global_idx")};
        var input_indices: ${m.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${m.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${n.length===2||n.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${c.length>0?c:""}|${i.length>0?i:""}|${u.length>0?u:""}|${w}|${n}`,inputDependencies:["rank"]},getShaderSource:E,getRunData:()=>({outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:[{type:12,data:g},{type:1,data:c},{type:1,data:u},...ye(n,d)]})}},nd=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Vh=(e,t)=>{let r=[],a=[],i=[],s=nd(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Fl(e.inputs,t,s,r,a,i),e.compute(ad(e.inputs[0],t,s,r,a,i),{inputs:[0]})},Gh=e=>{let t=e.antialias,r=e.axes,a=e.coordinateTransformMode,i=e.cubicCoeffA,s=e.excludeOutside!==0,n=e.extrapolationValue,u=e.keepAspectRatioPolicy,d=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Ze({antialias:t,axes:r,coordinateTransformMode:a,cubicCoeffA:i,excludeOutside:s,extrapolationValue:n,keepAspectRatioPolicy:u,mode:d,nearestMode:c})}}),id,sd,Fh,ug=Y(()=>{xe(),Ie(),wt(),ke(),id=(e,t)=>{let[r,a,i,s]=e,{numHeads:n,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!G.areEqual(a.dims,[])&&!G.areEqual(a.dims,[1])&&a.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${a.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!G.areEqual(i.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&n===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let d=r.dims[0],c=r.dims[r.dims.length-2],h=i.dims[0],m=G.sizeFromDimension(r.dims,1)/c,g=u===0?i.dims[1]*2:m/n;if(u>g)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(a.dims.length===2){if(d!==a.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${a.dims[0]}`);if(c!==a.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${a.dims[1]}`)}if(g/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(c>h)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},sd=(e,t)=>{let{interleaved:r,numHeads:a,rotaryEmbeddingDim:i,scale:s}=t,n=e[0].dims[0],u=G.sizeFromDimension(e[0].dims,1),d=e[0].dims[e[0].dims.length-2],c=u/d,h=e[2].dims[1],m=i===0?h*2:c/a,g=new Array(n,d,c/m,m-h),w=G.computeStrides(g),p=[{type:1,data:s},{type:12,data:g},{type:12,data:w},...e[0].dims.length===3?new Array({type:12,data:[u,c,m,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,m,d*m,1]}):[],...ye(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],_=C=>{let E=F("input",e[0].dataType,e[0].dims.length),S=F("position_ids",e[1].dataType,e[1].dims.length),A=F("cos_cache",e[2].dataType,e[2].dims.length),O=F("sin_cache",e[3].dataType,e[3].dims.length),R=he("output",e[0].dataType,e[0].dims.length);return C.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:g.length},{name:"global_strides",type:"u32",length:w.length},{name:"input_output_strides",type:"u32",length:w.length}]),`
        ${C.declareVariables(E,S,A,O,R)}

        ${C.mainStart(Ea)}
          let half_rotary_emb_dim = uniforms.${A.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${S.broadcastedIndicesToOffset("bsnh.xy",he("",S.type.tensor,2))};
            let position_id =
                u32(${S.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${E.getByOffset("i")} * ${A.get("position_id","bsnh[3]")} -
                ${E.getByOffset("j")} * ${O.get("position_id","bsnh[3]")};
            ${R.setByOffset("i","re")}
            let im = ${E.getByOffset("i")} * ${O.get("position_id","bsnh[3]")} +
                ${E.getByOffset("j")} * ${A.get("position_id","bsnh[3]")};
            ${R.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${R.setByOffset("k",E.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ze({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:_,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(G.size(g)/Ea)},programUniforms:p})}},Fh=(e,t)=>{id(e.inputs,t),e.compute(sd(e.inputs,t))}}),od,ud,qh,lg=Y(()=>{xe(),Ie(),ke(),od=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],a=e[2];if(t.dataType!==r.dataType||t.dataType!==a.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(a.dims.length!==1)throw new Error("Gamma must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let n=e[3];if(n.dims.length!==1)throw new Error("Beta must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let n=e[4];if(n.dims.length!==1)throw new Error("Bias must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},ud=(e,t,r,a)=>{let i=t.simplified,s=e[0].dims,n=G.size(s),u=s,d=n,c=s.slice(-1)[0],h=a?s.slice(0,-1).concat(1):[],m=!i&&e.length>3,g=e.length>4,w=a&&r>1,p=a&&r>2,_=r>3,C=mt(c),E=[{type:12,data:d},{type:12,data:C},{type:12,data:c},{type:1,data:t.epsilon}],S=O=>{let R=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],k=[F("x",e[0].dataType,e[0].dims,C),F("skip",e[1].dataType,e[1].dims,C),F("gamma",e[2].dataType,e[2].dims,C)];m&&k.push(F("beta",e[3].dataType,e[3].dims,C)),g&&k.push(F("bias",e[4].dataType,e[4].dims,C)),k.push(he("output",e[0].dataType,u,C)),w&&k.push(he("mean_output",1,h)),p&&k.push(he("inv_std_output",1,h)),_&&k.push(he("input_skip_bias_sum",e[0].dataType,u,C));let P=_t(e[0].dataType);return`

      ${O.registerUniforms(R).declareVariables(...k)}

      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Er("f32",C)};
        var squareSum = ${Er("f32",C)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${g?"bias[i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${_?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${wa(P,C,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Lr("sum",C)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Lr("squareSum",C)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${w?"mean_output[global_idx] = mean;":""}
        ${p?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${P}(mean)`}) * ${P}(inv_std_dev) * gamma[i] ${m?"+ beta[i]":""};
        }
      }`},A=[{dims:u,dataType:e[0].dataType}];return r>1&&A.push({dims:h,dataType:1}),r>2&&A.push({dims:h,dataType:1}),r>3&&A.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${C};${w};${p};${_}`,inputDependencies:e.map((O,R)=>"type")},getShaderSource:S,getRunData:()=>({outputs:A,dispatchGroup:{x:Math.ceil(d/c/64)},programUniforms:E})}},qh=(e,t)=>{od(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(ud(e.inputs,t,e.outputCount,!1),{outputs:r})}}),ld,qa,dd,ji,pd,cd,jh,Kh,dg=Y(()=>{xe(),Ie(),wt(),ke(),ld=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,a)=>{if(e[a+1].dataType!==6&&e[a+1].dataType!==7)throw new Error(`Input ${a} must be an array of int32 or int64`)})},qa=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(a=>r.push(Number(a)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(a=>r.push(Number(a)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},dd=(e,t)=>{if(e.length>1){let r=qa(e,1),a=qa(e,2),i=qa(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Ze({starts:r,ends:a,axes:i})}else return t},ji=(e,t,r,a,i)=>{let s=e;return e<0&&(s+=r[a[t]]),i[t]<0?Math.max(0,Math.min(s,r[a[t]]-1)):Math.max(0,Math.min(s,r[a[t]]))},pd=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${Ee("uniforms.input_shape","i",r.length)};
            let steps_i = ${Ee("uniforms.steps","i",r.length)};
            let signs_i = ${Ee("uniforms.signs","i",r.length)};
            let starts_i = ${Ee("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,cd=(e,t)=>{let r=e[0].dims,a=G.size(r),i=t.axes.length>0?G.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=qa(e,4);s.forEach(E=>E!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(i.length).fill(1));let n=t.starts.map((E,S)=>ji(E,S,r,i,s)),u=t.ends.map((E,S)=>ji(E,S,r,i,s));if(i.length!==n.length||i.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let E=0;E<r.length;++E)i.includes(E)||(n.splice(E,0,0),u.splice(E,0,r[E]),s.splice(E,0,1));let d=s.map(E=>Math.sign(E));s.forEach((E,S,A)=>{if(E<0){let O=(u[S]-n[S])/E,R=n[S],k=R+O*s[S];n[S]=k,u[S]=R,A[S]=-E}});let c=r.slice(0);i.forEach((E,S)=>{c[E]=Math.ceil((u[E]-n[E])/s[E])});let h={dims:c,dataType:e[0].dataType},m=he("output",e[0].dataType,c.length),g=F("input",e[0].dataType,e[0].dims.length),w=G.size(c),p=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:n.length},{name:"signs",type:"i32",length:d.length},{name:"steps",type:"u32",length:s.length}],_=[{type:12,data:w},{type:12,data:n},{type:6,data:d},{type:12,data:s},...ye(e[0].dims,c)],C=E=>`
      ${E.registerUniforms(p).declareVariables(g,m)}
        ${pd(g,m,r)}
        ${E.mainStart()}
          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${m.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${m.setByOffset("global_idx",g.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${d.length}_${n.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[h],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:_})}},jh=(e,t)=>{ld(e.inputs,t);let r=dd(e.inputs,t);e.compute(cd(e.inputs,r),{inputs:[0]})},Kh=e=>{let t=e.starts,r=e.ends,a=e.axes;return Ze({starts:t,ends:r,axes:a})}}),hd,fd,Yh,Xh,pg=Y(()=>{xe(),Ie(),wt(),ke(),hd=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},fd=(e,t)=>{let r=e.dims,a=G.size(r),i=64,s=t.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let n=r[s],u=a/n,d=mt(n),c=n/d,h=(C,E)=>E===4?`max(max(${C}.x, ${C}.y), max(${C}.z, ${C}.w))`:E===2?`max(${C}.x, ${C}.y)`:E===3?`max(max(${C}.x, ${C}.y), ${C}.z)`:C,m=F("x",e.dataType,e.dims,d),g=he("result",e.dataType,e.dims,d),w=m.type.value,p=_t(e.dataType)==="f32"?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,_=C=>`
      var<workgroup> rowMaxShared : ${w};
      var<workgroup> rowSumShared : ${w};
      var<workgroup> threadShared : array<${w}, ${i}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${C.registerUniform("packedCols","i32").declareVariables(m,g)}
      ${C.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${i};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${p}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${w}(${h("threadShared[0]",d)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${w}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${w}(${Lr("threadShared[0]",d)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${d}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:c}]}),getShaderSource:_}},Yh=(e,t)=>{hd(e.inputs),e.compute(fd(e.inputs[0],t))},Xh=e=>Ze({axis:e.axis})}),md,gd,yd,bd,vd,Qh,Jh,cg=Y(()=>{xe(),Ie(),wt(),ke(),md=e=>{if(!e||e.length<1)throw new Error("too few inputs")},gd=(e,t)=>{let r=[],a=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),a=r.length),Ze({numOutputs:a,axis:t.axis,splitSizes:r})},yd=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${Ee("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,bd=e=>{let t=e.length,r=[];for(let a=0;a<t;++a){let i=e[a].setByIndices("indices","input[global_idx]");t===1?r.push(i):a===0?r.push(`if (output_number == ${a}u) { ${i} }`):a===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${a}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},vd=(e,t)=>{let r=e[0].dims,a=G.size(r),i=e[0].dataType,s=G.normalizeAxis(t.axis,r.length),n=new Array(t.numOutputs),u=F("input",i,r.length),d=new Array(t.numOutputs),c=[],h=[],m=0,g=[{type:12,data:a}];for(let p=0;p<t.numOutputs;p++){m+=t.splitSizes[p],d[p]=m;let _=r.slice();_[t.axis]=t.splitSizes[p],h.push(_),n[p]=he(`output${p}`,i,_.length),c.push({dims:h[p],dataType:e[0].dataType})}g.push({type:12,data:d},...ye(r,...h));let w=p=>`
  ${p.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",d.length).declareVariables(u,...n)}
  ${yd(d.length)}
  ${bd(n)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Ee("uniforms.size_in_split_axis","output_number - 1u",d.length)};
      ${u.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(a/64)},programUniforms:g})}},Qh=(e,t)=>{md(e.inputs);let r=e.inputs.length===1?t:gd(e.inputs,t);e.compute(vd(e.inputs,r),{inputs:[0]})},Jh=e=>{let t=e.axis,r=e.splitSizes,a=e.numOutputs<0?r.length:e.numOutputs;if(a!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ze({axis:t,numOutputs:a,splitSizes:r})}}),Ki,wd,$d,_d,Zh,hg=Y(()=>{xe(),Ie(),ke(),Ki=e=>Array.from(e.getBigInt64Array(),Number),wd=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Ki(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},$d=(e,t)=>{let r=[];for(let a=0;a<e.length;++a)r.push(e[a]*t[a]);return r},_d=e=>{let t=e[0].dims,r=Ki(e[1]),a=$d(t,r),i=G.size(a),s=e[0].dataType,n=F("input",s,t.length),u=he("output",s,a.length),d=c=>`
      const inputShape = ${n.indices(...t)};
      ${c.registerUniform("output_size","u32").declareVariables(n,u)}
      ${c.mainStart()}
      ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${u.offsetToIndices("global_idx")};
      var input_indices: ${n.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${n.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${u.indicesGet("output_indices","i")}  % input_dim_i;

        ${n.indicesSet("input_indices","i","input_dim_value")}
      }
      ${u.setByOffset("global_idx",n.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...ye(e[0].dims,a)]}),getShaderSource:d}},Zh=e=>{wd(e.inputs),e.compute(_d(e.inputs),{inputs:[0]})}}),xd,Sd,ef,fg=Y(()=>{xe(),Ie(),ke(),xd=(e,t,r,a,i)=>{let s=he("output_data",i,r.length,4),n=F("a_data",t[1].dataType,t[1].dims.length,4),u=F("b_data",t[2].dataType,t[2].dims.length,4),d=F("c_data",t[0].dataType,t[0].dims.length,4),c,h=(m,g,w)=>`select(${g}, ${m}, ${w})`;if(!a)c=s.setByOffset("global_idx",h(n.getByOffset("global_idx"),u.getByOffset("global_idx"),d.getByOffset("global_idx")));else{let m=(g,w,p="")=>{let _=`a_data[index_a${w}][component_a${w}]`,C=`b_data[index_b${w}][component_b${w}]`,E=`bool(c_data[index_c${w}] & (0xffu << (component_c${w} * 8)))`;return`
            let output_indices${w} = ${s.offsetToIndices(`global_idx * 4u + ${w}u`)};
            let offset_a${w} = ${n.broadcastedIndicesToOffset(`output_indices${w}`,s)};
            let offset_b${w} = ${u.broadcastedIndicesToOffset(`output_indices${w}`,s)};
            let offset_c${w} = ${d.broadcastedIndicesToOffset(`output_indices${w}`,s)};
            let index_a${w} = offset_a${w} / 4u;
            let index_b${w} = offset_b${w} / 4u;
            let index_c${w} = offset_c${w} / 4u;
            let component_a${w} = offset_a${w} % 4u;
            let component_b${w} = offset_b${w} % 4u;
            let component_c${w} = offset_c${w} % 4u;
            ${g}[${w}] = ${p}(${h(_,C,E)});
          `};i===9?c=`
            var data = vec4<u32>(0);
            ${m("data",0,"u32")}
            ${m("data",1,"u32")}
            ${m("data",2,"u32")}
            ${m("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${m("output_data[global_idx]",0)}
            ${m("output_data[global_idx]",1)}
            ${m("output_data[global_idx]",2)}
            ${m("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(d,n,u,s)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},Sd=e=>{let t=e[1].dims,r=e[2].dims,a=e[0].dims,i=e[1].dataType,s=!(G.areEqual(t,r)&&G.areEqual(r,a)),n=t,u=G.size(t);if(s){let c=Ca.calcShape(Ca.calcShape(t,r,!1),a,!1);if(!c)throw new Error("Can't perform where op on the given tensors");n=c,u=G.size(n)}let d=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>xd(c,e,n,s,i),getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:d},...ye(a,t,r,n)]})}},ef=e=>{e.compute(Sd(e.inputs))}}),tf,mg=Y(()=>{Bm(),dc(),Dm(),Lm(),Nm(),Wm(),uc(),lh(),Fm(),qm(),jm(),Km(),Ym(),Xm(),Qm(),Jm(),Zm(),eg(),tg(),uh(),rg(),ag(),ng(),ig(),sg(),Ws(),og(),ug(),lg(),dg(),pg(),cg(),hg(),ln(),Hs(),fg(),tf=new Map([["Abs",[hc]],["Acos",[fc]],["Acosh",[mc]],["Add",[Kc]],["ArgMax",[ic,ss]],["ArgMin",[nc,ss]],["Asin",[gc]],["Asinh",[yc]],["Atan",[bc]],["Atanh",[vc]],["Attention",[lc]],["AveragePool",[Mh,Ph]],["BatchNormalization",[pc]],["BiasAdd",[cc]],["BiasSplitGelu",[jc]],["Cast",[$c,wc]],["Ceil",[xc]],["Clip",[_c]],["Concat",[sc,oc]],["Conv",[cs,ps]],["ConvTranspose",[ch,ph]],["Cos",[Sc]],["Cosh",[Cc]],["CumSum",[hh,fh]],["DepthToSpace",[mh,gh]],["Div",[Yc]],["Einsum",[yh,bh]],["Elu",[Ec,jn]],["Equal",[Xc]],["Erf",[Tc]],["Exp",[kc]],["Expand",[vh]],["FastGelu",[wh]],["Floor",[Ac]],["FusedConv",[cs,ps]],["Gather",[_h,$h]],["GatherElements",[Sh,xh]],["Gelu",[Ic]],["Gemm",[Eh,Ch]],["GlobalAveragePool",[Dh,Bh]],["GlobalMaxPool",[Hh,Wh]],["Greater",[eh]],["GreaterOrEqual",[rh]],["HardSigmoid",[Lc,Dc]],["InstanceNormalization",[Th]],["LayerNormalization",[kh]],["LeakyRelu",[Oc,jn]],["Less",[th]],["LessOrEqual",[ah]],["Log",[qc]],["MatMul",[oh]],["MatMulNBits",[Ah,Ih]],["MaxPool",[Lh,Nh]],["Mul",[Qc]],["MultiHeadAttention",[Rh,Oh]],["Neg",[zc]],["Not",[Rc]],["Pad",[zh]],["Pow",[Jc]],["Range",[Uh]],["Reciprocal",[Pc]],["ReduceMin",[Zp]],["ReduceMean",[Kp]],["ReduceMax",[Jp]],["ReduceSum",[tc]],["ReduceProd",[ec]],["ReduceL1",[Yp]],["ReduceL2",[Xp]],["ReduceLogSum",[ac]],["ReduceLogSumExp",[Qp]],["ReduceSumSquare",[rc]],["Relu",[Mc]],["Resize",[Vh,Gh]],["RotaryEmbedding",[Fh]],["Sigmoid",[Bc]],["Sin",[Nc]],["Sinh",[Wc]],["Slice",[jh,Kh]],["SkipLayerNormalization",[qh]],["Split",[Qh,Jh]],["Sqrt",[Hc]],["Softmax",[Yh,Xh]],["Sub",[Zc]],["Tan",[Uc]],["Tanh",[Vc]],["ThresholdedRelu",[Fc,jn]],["Tile",[Zh]],["Transpose",[Bp,Dp]],["Where",[ef]]])}),rf,gg=Y(()=>{fr(),oa(),ke(),rf=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,a,i){vr(e.programInfo.name);let s=this.backend.device,n=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let c of t)u.push({binding:u.length,resource:{buffer:c.buffer}});for(let c of r)u.push({binding:u.length,resource:{buffer:c.buffer}});i&&u.push({binding:u.length,resource:i});let d=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:d,dispatchGroup:a};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}n.setPipeline(e.computePipeline),n.setBindGroup(0,d),n.dispatchWorkgroups(...a),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),hr(e.programInfo.name)}dispose(){}build(e,t){vr(e.name);let r=this.backend.device,a=[];r.features.has("shader-f16")&&a.push("enable f16;");let i=Mp(t,this.backend.device.limits),s=e.getShaderSource(i),n=`${a.join(`
`)}
${i.additionalImplementations}
${s}`,u=r.createShaderModule({code:n,label:e.name});pt("verbose",()=>`[WebGPU] ${e.name} shader code: ${n}`);let d=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return hr(e.name),{programInfo:e,computePipeline:d,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,a=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&a<=i)return[t,r,a];let s=t*r*a,n=Math.ceil(Math.sqrt(s));if(n>i){if(n=Math.ceil(Math.cbrt(s)),n>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[n,n,n]}else return[n,n,1]}}}),Cd,Ed,Td,af,yg=Y(()=>{fr(),xe(),oa(),zm(),Pm(),mg(),gg(),Cd=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let a=0;a<e.length;++a){let i=e[a].dataType;switch(t[a]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let s=e[a].dims.length;r.push(`${i};${s}`);break}case"dims":{let s=e[a].dims.join(",");r.push(`${i};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[a]}`)}}return r.join("|")},Ed=(e,t,r)=>{var i,s;let a=e.name;return(i=e.shaderCache)!=null&&i.hint&&(a+="["+e.shaderCache.hint+"]"),a+=":"+r+`:${Cd(t,((s=e.shaderCache)==null?void 0:s.inputDependencies)??new Array(t.length).fill("dims"))}`,a},Td=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},af=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],a={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(a),this.adapterInfo=new Td(await t.requestAdapterInfo()),this.gpuDataManager=zp(this),this.programManager=new rf(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Op(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;vr(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var a;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let i=0;i<t.length/2;i++){let s=r[i],n=s.kernelId,u=this.kernels.get(n),d=u.kernelType,c=u.kernelName,h=s.programName,m=s.inputTensorViews,g=s.outputTensorViews,w=t[i*2],p=t[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=w);let _=Number(w-this.queryTimeBase),C=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(_)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");if((a=this.env.webgpu.profiling)!=null&&a.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:m.map(E=>({dims:E.dims,dataType:ea(E.dataType)})),outputsMetadata:g.map(E=>({dims:E.dims,dataType:ea(E.dataType)})),kernelId:n,kernelType:d,kernelName:c,programName:h,startTime:_,endTime:C});else{let E="";m.forEach((A,O)=>{E+=`input[${O}]: [${A.dims}] | ${ea(A.dataType)}, `});let S="";g.forEach((A,O)=>{S+=`output[${O}]: [${A.dims}] | ${ea(A.dataType)}, `}),console.log(`[profiling] kernel "${n}|${d}|${c}|${h}" ${E}${S}execution time: ${C-_} ns`)}Xn("GPU",`${h}::${w}::${p}`)}e.unmap(),this.pendingQueries.delete(e)}),hr()}run(e,t,r,a,i,s){vr(e.name);let n=[];for(let S=0;S<t.length;++S){let A=t[S].data;if(A===0)continue;let O=this.gpuDataManager.get(A);if(!O)throw new Error(`no GPU data for input: ${A}`);n.push(O)}let{outputs:u,dispatchGroup:d,programUniforms:c}=e.getRunData(t),h=r.length===0?u.map((S,A)=>A):r;if(h.length!==u.length)throw new Error(`Output size ${h.length} must be equal to ${u.length}.`);let m=[],g=[];for(let S=0;S<u.length;++S){if(!Number.isInteger(h[S])||h[S]<-3||h[S]>=s)throw new Error(`Invalid output index: ${h[S]}`);if(h[S]===-3)continue;let A=h[S]===-1,O=h[S]===-2,R=A||O?i(u[S].dataType,u[S].dims):a(h[S],u[S].dataType,u[S].dims);if(m.push(R),R.data===0)continue;let k=this.gpuDataManager.get(R.data);if(!k)throw new Error(`no GPU data for output: ${R.data}`);if(A&&this.temporaryData.push(k),O){let P=this.kernelPersistentData.get(this.currentKernelId);P||(P=[],this.kernelPersistentData.set(this.currentKernelId,P)),P.push(k)}g.push(k)}if(n.length!==t.length||g.length!==m.length){if(g.length===0)return hr(e.name),m;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let w;if(c){let S=0,A=[];c.forEach(P=>{let W=typeof P.data=="number"?[P.data]:P.data;if(W.length===0)return;let H=P.type===10?2:4,j,be;P.type===10?(be=W.length>4?16:W.length>2?8:W.length*H,j=W.length>4?16:H*W.length):(be=W.length<=2?W.length*H:16,j=16),S=Math.ceil(S/be)*be,A.push(S);let te=P.type===10?8:4;S+=W.length>4?Math.ceil(W.length/te)*j:W.length*H});let O=16;S=Math.ceil(S/O)*O;let R=new ArrayBuffer(S);c.forEach((P,W)=>{let H=A[W],j=typeof P.data=="number"?[P.data]:P.data;if(P.type===6)new Int32Array(R,H,j.length).set(j);else if(P.type===12)new Uint32Array(R,H,j.length).set(j);else if(P.type===10)new Uint16Array(R,H,j.length).set(j);else if(P.type===1)new Float32Array(R,H,j.length).set(j);else throw new Error(`Unsupported uniform type: ${ea(P.type)}`)});let k=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(k.buffer,0,R,0,S),this.gpuDataManager.release(k.id),w={offset:0,size:S,buffer:k.buffer}}let p=this.programManager.normalizeDispatchGroupSize(d),_=p[1]===1&&p[2]===1,C=Ed(e,t,_),E=this.programManager.getArtifact(C);if(E||(E=this.programManager.build(e,p),this.programManager.setArtifact(C,E),pt("info",()=>`[artifact] key: ${C}, programName: ${e.name}`)),c&&E.uniformVariablesInfo){if(c.length!==E.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${E.uniformVariablesInfo.length}, got ${c.length} in program "${E.programInfo.name}".`);for(let S=0;S<c.length;S++){let A=c[S],O=A.type,R=typeof A.data=="number"?1:A.data.length,[k,P]=E.uniformVariablesInfo[S];if(O!==k||R!==P)throw new Error(`Uniform variable ${S} mismatch: expect type ${k} with size ${P}, got type ${O} with size ${R} in program "${E.programInfo.name}".`)}}if(pt("info",()=>`[ProgramManager] run "${e.name}" (key=${C}) with ${p[0]}x${p[1]}x${p[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let S={kernelId:this.currentKernelId,programName:E.programInfo.name,inputTensorViews:t,outputTensorViews:m};this.pendingKernels.push(S),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(S)}return this.programManager.run(E,n,g,p,w),hr(e.name),m}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,a){let i=tf.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:a,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,s)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let a=this.kernels.get(e);if(!a)throw new Error(`kernel not created: ${e}`);let i=a.kernelType,s=a.kernelName,n=a.kernelEntry,u=a.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),pt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let d=this.env.debug;this.temporaryData=[];try{return d&&this.device.pushErrorScope("validation"),n(t,u[1]),0}catch(c){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${c}`)),1}finally{d&&r.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${s}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,a){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(t),n=this.gpuDataManager.registerExternalBuffer(r,a,s==null?void 0:s[1]);return i.set(t,[n,r]),n}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let a=await ns(this,e,t);return Rp(a.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){pt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){pt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){pt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let a=0;a<r;a++){let i=this.getComputePassEncoder(),s=e[a];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[a]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),nf={};ka(nf,{init:()=>sf});var Wn,kd,sf,bg=Y(()=>{xe(),yg(),oa(),Ie(),Wn=class of{constructor(t,r,a,i){this.module=t,this.dataType=r,this.data=a,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=G.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=G.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=G.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(G.size(t)!==G.size(this.dims))throw new Error("Invalid new shape");return new of(this.module,this.dataType,this.data,t)}},kd=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let a=e.HEAPU32,i=r>>>2;this.opKernelContext=a[i++];let s=a[i++];this.outputCount=a[i++],this.customDataOffset=a[i++],this.customDataSize=a[i++];let n=[];for(let u=0;u<s;u++){let d=a[i++],c=a[i++],h=a[i++],m=[];for(let g=0;g<h;g++)m.push(a[i++]);n.push(new Wn(e,d,c,m))}this.inputs=n}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){var n;let r=((n=t==null?void 0:t.inputs)==null?void 0:n.map(u=>typeof u=="number"?this.inputs[u]:u))??this.inputs,a=(t==null?void 0:t.outputs)??[],i=(u,d,c)=>new Wn(this.module,d,this.output(u,c),c),s=(u,d)=>{let c=an(u);if(!c)throw new Error(`Unsupported data type: ${u}`);let h=c*G.size(d),m=h>0?this.backend.gpuDataManager.create(h).id:0;return new Wn(this.module,u,m,d)};return this.backend.run(e,r,a,i,s,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let a=this.module.stackAlloc((1+t.length)*4),i=a>>2;this.module.HEAPU32[i++]=t.length;for(let s=0;s<t.length;s++)this.module.HEAPU32[i++]=t[s];return this.module._JsepOutput(this.opKernelContext,e,a)}catch(a){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${a}`)}finally{this.module.stackRestore(r)}}},sf=async(e,t,r,a)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let s=new af;await s.initialize(r,a),i("webgpu",[s,n=>s.alloc(n),n=>s.free(n),(n,u,d,c=!1)=>{if(c)pt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${u}, size=${d}`),s.memcpy(n,u);else{pt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${u}, size=${d}`);let h=t.HEAPU8.subarray(n>>>0,(n>>>0)+d);s.upload(u,h)}},async(n,u,d)=>{pt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${u}, size=${d}`),await s.download(n,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+d))},(n,u,d)=>s.createKernel(n,u,d,t.UTF8ToString(t._JsepGetNodeName(u))),n=>s.releaseKernel(n),(n,u,d,c)=>{pt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${n}, contextDataOffset=${u}`);let h=new kd(t,s,u);return s.computeKernel(n,h,c)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else i("webnn")}}),Ad,uf,lf,Ir,Id,fs,df,pf,Yi,cf,hf,ff,vg=Y(()=>{Om(),Rm(),xe(),un(),zs(),Ip(),Ad=(e,t)=>{ft()._OrtInit(e,t)!==0&&Je("Can't initialize onnxruntime.")},uf=async e=>{Ad(e.wasm.numThreads,Jn(e.logLevel))},lf=async(e,t)=>{{let r=(bg(),ta(nf)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let a=e.webgpu.adapter;if(a){if(typeof a.limits!="object"||typeof a.features!="object"||typeof a.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let s=e.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(a=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:s}),!a)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",ft(),e,a)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",ft(),e)}}},Ir=new Map,Id=e=>{let t=ft(),r=t.stackSave();try{let a=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,a,a+4)!==0&&Je("Can't get session input/output count."),[t.HEAP32[a/4],t.HEAP32[a/4+1]]}finally{t.stackRestore(r)}},fs=e=>{let t=ft(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},df=async(e,t)=>{var m,g;let r,a,i=ft();Array.isArray(e)?[r,a]=e:e.buffer===i.HEAPU8.buffer?[r,a]=[e.byteOffset,e.byteLength]:[r,a]=fs(e);let s=0,n=0,u=0,d=[],c=[],h=[];try{if([n,d]=Ap(t),(t==null?void 0:t.externalData)&&i.mountExternalData){let O=[];for(let R of t.externalData){let k=typeof R=="string"?R:R.path;O.push(Zn(typeof R=="string"?R:R.data).then(P=>{i.mountExternalData(k,P)}))}await Promise.all(O)}s=await i._OrtCreateSession(r,a,n),s===0&&Je("Can't create a session.");let[w,p]=Id(s),_=!!(t!=null&&t.enableGraphCapture),C=[],E=[],S=[];for(let O=0;O<w;O++){let R=i._OrtGetInputName(s,O);R===0&&Je("Can't get an input name."),c.push(R),C.push(i.UTF8ToString(R))}for(let O=0;O<p;O++){let R=i._OrtGetOutputName(s,O);R===0&&Je("Can't get an output name."),h.push(R);let k=i.UTF8ToString(R);E.push(k);{if(_&&(t==null?void 0:t.preferredOutputLocation)===void 0){S.push("gpu-buffer");continue}let P=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((m=t==null?void 0:t.preferredOutputLocation)==null?void 0:m[k])??"cpu";if(P!=="cpu"&&P!=="cpu-pinned"&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}.`);if(_&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);S.push(P)}}let A=null;return S.some(O=>O==="gpu-buffer")&&(u=i._OrtCreateBinding(s),u===0&&Je("Can't create IO binding."),A={handle:u,outputPreferredLocations:S,outputPreferredLocationsEncoded:S.map(O=>as(O))}),Ir.set(s,[s,c,h,A,_,!1]),[s,C,E]}catch(w){throw c.forEach(p=>i._OrtFree(p)),h.forEach(p=>i._OrtFree(p)),u!==0&&i._OrtReleaseBinding(u),s!==0&&i._OrtReleaseSession(s),w}finally{i._free(r),n!==0&&i._OrtReleaseSessionOptions(n),d.forEach(w=>i._free(w)),(g=i.unmountExternalData)==null||g.call(i)}},pf=e=>{var d;let t=ft(),r=Ir.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[a,i,s,n,u]=r;n&&(u&&t._OrtClearBoundOutputs(n.handle),t._OrtReleaseBinding(n.handle)),(d=t.jsepOnReleaseSession)==null||d.call(t,e),i.forEach(c=>t._OrtFree(c)),s.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(a),Ir.delete(e)},Yi=(e,t,r,a,i,s=!1)=>{if(!e){t.push(0);return}let n=ft(),u=e[0],d=e[1],c=e[3],h,m;if(u==="string"&&c==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s&&c!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(c==="gpu-buffer"){let p=e[2].gpuBuffer,_=an(rs(u));m=d.reduce((E,S)=>E*S,1)*_;let C=n.jsepRegisterBuffer;if(!C)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');h=C(a,i,p,m)}else{let p=e[2];if(Array.isArray(p)){m=4*p.length,h=n._malloc(m),r.push(h);let _=h/4;for(let C=0;C<p.length;C++){if(typeof p[C]!="string")throw new TypeError(`tensor data at index ${C} is not a string`);n.HEAPU32[_++]=dt(p[C],r)}}else m=p.byteLength,h=n._malloc(m),r.push(h),n.HEAPU8.set(new Uint8Array(p.buffer,p.byteOffset,m),h)}let g=n.stackSave(),w=n.stackAlloc(4*d.length);try{let p=w/4;d.forEach(C=>n.HEAP32[p++]=C);let _=n._OrtCreateTensor(rs(u),h,m,w,d.length,as(c));_===0&&Je(`Can't create tensor for input/output. session=${a}, index=${i}.`),t.push(_)}finally{n.stackRestore(g)}},cf=async(e,t,r,a,i,s)=>{var j,be;let n=ft(),u=Ir.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let d=u[0],c=u[1],h=u[2],m=u[3],g=u[4],w=u[5],p=t.length,_=a.length,C=0,E=[],S=[],A=[],O=[],R=n.stackSave(),k=n.stackAlloc(p*4),P=n.stackAlloc(p*4),W=n.stackAlloc(_*4),H=n.stackAlloc(_*4);try{[C,E]=kp(s);for(let Z=0;Z<p;Z++)Yi(r[Z],S,O,e,t[Z],g);for(let Z=0;Z<_;Z++)Yi(i[Z],A,O,e,p+a[Z],g);let te=k/4,ae=P/4,fe=W/4,ve=H/4;for(let Z=0;Z<p;Z++)n.HEAPU32[te++]=S[Z],n.HEAPU32[ae++]=c[t[Z]];for(let Z=0;Z<_;Z++)n.HEAPU32[fe++]=A[Z],n.HEAPU32[ve++]=h[a[Z]];if(m&&!w){let{handle:Z,outputPreferredLocations:ne,outputPreferredLocationsEncoded:oe}=m;if(c.length!==p)throw new Error(`input count from feeds (${p}) is expected to be always equal to model's input count (${c.length}).`);for(let M=0;M<p;M++){let X=t[M];await n._OrtBindInput(Z,c[X],S[M])!==0&&Je(`Can't bind input[${M}] for session=${e}.`)}for(let M=0;M<_;M++){let X=a[M];(j=i[M])!=null&&j[3]?n._OrtBindOutput(Z,h[X],A[M],0)!==0&&Je(`Can't bind pre-allocated output[${M}] for session=${e}.`):n._OrtBindOutput(Z,h[X],0,oe[X])!==0&&Je(`Can't bind output[${M}] to ${ne[M]} for session=${e}.`)}Ir.set(e,[d,c,h,m,g,!0])}(be=n.jsepOnRunStart)==null||be.call(n,d);let D;m?D=await n._OrtRunWithBinding(d,m.handle,_,W,C):D=await n._OrtRun(d,P,k,p,H,_,W,C),D!==0&&Je("failed to call OrtRun().");let ue=[];for(let Z=0;Z<_;Z++){let ne=n.HEAPU32[W/4+Z];if(ne===A[Z]){ue.push(i[Z]);continue}let oe=n.stackSave(),M=n.stackAlloc(4*4),X=!1,ie,$e=0;try{n._OrtGetTensorData(ne,M,M+4,M+8,M+12)!==0&&Je(`Can't access output tensor data on index ${Z}.`);let Ae=M/4,ze=n.HEAPU32[Ae++];$e=n.HEAPU32[Ae++];let et=n.HEAPU32[Ae++],at=n.HEAPU32[Ae++],ot=[];for(let Ge=0;Ge<at;Ge++)ot.push(n.HEAPU32[et/4+Ge]);n._OrtFree(et);let $t=ot.reduce((Ge,qe)=>Ge*qe,1);ie=ea(ze);let ut=m==null?void 0:m.outputPreferredLocations[a[Z]];if(ie==="string"){if(ut==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ge=[],qe=$e/4;for(let Ct=0;Ct<$t;Ct++){let Le=n.HEAPU32[qe++],Et=Ct===$t-1?void 0:n.HEAPU32[qe]-Le;Ge.push(n.UTF8ToString(Le,Et))}ue.push([ie,ot,Ge,"cpu"])}else if(ut==="gpu-buffer"&&$t>0){let Ge=n.jsepGetBuffer;if(!Ge)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let qe=Ge($e),Ct=an(ze);if(Ct===void 0||!Ms(ie))throw new Error(`Unsupported data type: ${ie}`);X=!0,ue.push([ie,ot,{gpuBuffer:qe,download:n.jsepCreateDownloader(qe,$t*Ct,ie),dispose:()=>{n._OrtReleaseTensor(ne)}},"gpu-buffer"])}else{let Ge=Ps(ie),qe=new Ge($t);new Uint8Array(qe.buffer,qe.byteOffset,qe.byteLength).set(n.HEAPU8.subarray($e,$e+qe.byteLength)),ue.push([ie,ot,qe,"cpu"])}}finally{n.stackRestore(oe),ie==="string"&&$e&&n._free($e),X||n._OrtReleaseTensor(ne)}}return m&&!g&&(n._OrtClearBoundOutputs(m.handle),Ir.set(e,[d,c,h,m,g,!1])),ue}finally{n.stackRestore(R),S.forEach(te=>n._OrtReleaseTensor(te)),A.forEach(te=>n._OrtReleaseTensor(te)),O.forEach(te=>n._free(te)),C!==0&&n._OrtReleaseRunOptions(C),E.forEach(te=>n._free(te))}},hf=e=>{let t=ft(),r=Ir.get(e);if(!r)throw new Error("invalid session id");let a=r[0],i=t._OrtEndProfiling(a);i===0&&Je("Can't get an profile file name."),t._OrtFree(i)},ff=e=>{let t=[];for(let r of e){let a=r[2];!Array.isArray(a)&&"buffer"in a&&t.push(a.buffer)}return t}}),wg=Ta((e,t)=>{t.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var nl=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var il=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ol(t))!il.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=nl(t,i))||o.enumerable});return e};var wr=e=>al(ao({},"__esModule",{value:!0}),e);var so={};gn(so,{createReadStream:()=>Ai,readFile:()=>sl,readFileSync:()=>ul});var sl,ul,Ai,uo=Y(()=>{sl=void 0,ul=void 0,Ai=void 0});var lo={};gn(lo,{join:()=>dl});var dl,co=Y(()=>{dl=void 0});var Ei=Wr((Ti,po)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){var r=t,o,i,u=new Promise((s,m)=>{o=s,i=m});r.mountExternalData=(s,m)=>{(r.eb||(r.eb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.eb};let a=()=>{let s=(g,$,T)=>(...B)=>{let H=dt,q=$?.();B=g(...B);let te=$?.();return q!==te&&(g=te,T(q),$=T=null),dt!=H?tn():B},m=g=>async(...$)=>{try{if(r.cb)throw Error("Session already started");let T=r.cb={xb:$[0],errors:[]},B=await g(...$);if(r.cb!==T)throw Error("Session mismatch");r.kb?.flush();let H=T.errors;if(0<H.length){let q=await Promise.all(H);if(q=q.filter(te=>te),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.cb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),a=void 0};r.jsepInit=(s,m)=>{if(a?.(),s==="webgpu"){[r.kb,r.pb,r.tb,r.lb,r.sb,r.Ra,r.ub,r.wb,r.qb,r.rb,r.vb]=m;let g=r.kb;r.jsepRegisterBuffer=($,T,B,H)=>g.registerBuffer($,T,B,H),r.jsepGetBuffer=$=>g.getBuffer($),r.jsepCreateDownloader=($,T,B)=>g.createDownloader($,T,B),r.jsepOnReleaseSession=$=>{g.onReleaseSession($)},r.jsepOnRunStart=$=>g.onRunStart($)}};var c=Object.assign({},r),p="./this.program",h=(s,m)=>{throw m},d=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="",v,S,A;if(w){var I=(uo(),wr(so)),x=(co(),wr(lo));_=y?x.dirname(_)+"/":__dirname+"/",v=(s,m)=>(s=Ke(s)?new URL(s):x.normalize(s),I.readFileSync(s,m?void 0:"utf8")),A=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,m,g,$=!0)=>{s=Ke(s)?new URL(s):x.normalize(s),I.readFile(s,$?void 0:"utf8",(T,B)=>{T?g(T):m($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(s,m)=>{throw process.exitCode=s,m}}else(d||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),v=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},y&&(A=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),S=(s,m,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):g()},$.onerror=g,$.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,c),c=null;var O,R=!1,L,N,K,Q,he,W,se,Ce,We,ee,ae;function Ae(){var s=O.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=Q=new Int16Array(s),r.HEAPU8=K=new Uint8Array(s),r.HEAPU16=he=new Uint16Array(s),r.HEAP32=W=new Int32Array(s),r.HEAPU32=se=new Uint32Array(s),r.HEAPF32=Ce=new Float32Array(s),r.HEAPF64=ae=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var me=[],ie=[],ue=[],le=0,qe=null,G=null;function ne(s){throw s="Aborted("+s+")",P(s),R=!0,L=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var xe=s=>s.startsWith("data:application/octet-stream;base64,"),Ke=s=>s.startsWith("file://"),Be;if(Be="ort-wasm-simd.wasm",!xe(Be)){var Ge=Be;Be=r.locateFile?r.locateFile(Ge,_):_+Ge}function Ut(s){if(A)return A(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(d||y){if(typeof fetch=="function"&&!Ke(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at \'${s}\'`;return m.arrayBuffer()}).catch(()=>Ut(s));if(S)return new Promise((m,g)=>{S(s,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Ut(s))}function Ye(s,m,g){return Ne(s).then($=>WebAssembly.instantiate($,m)).then(g,$=>{P(`failed to asynchronously prepare wasm: ${$}`),ne($)})}function mt(s,m){var g=Be;return typeof WebAssembly.instantiateStreaming!="function"||xe(g)||Ke(g)||w||typeof fetch!="function"?Ye(g,s,m):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(m,function(T){return P(`wasm streaming compile failed: ${T}`),P("falling back to ArrayBuffer instantiation"),Ye(g,s,m)}))}var Rt={824920:(s,m,g,$)=>{if(typeof r>"u"||!r.eb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.eb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return K.set(s.subarray(m,m+g),$>>>0>>>0),0}catch{return 4}},825421:()=>{r.qb()},825452:()=>{r.rb()},825481:()=>{r.vb()},825506:s=>r.pb(s),825539:s=>r.tb(s),825571:(s,m,g)=>{r.lb(s,m,g,!0)},825610:(s,m,g)=>{r.lb(s,m,g)},825643:s=>{r.Ra("Abs",s,void 0)},825694:s=>{r.Ra("Neg",s,void 0)},825745:s=>{r.Ra("Floor",s,void 0)},825798:s=>{r.Ra("Ceil",s,void 0)},825850:s=>{r.Ra("Reciprocal",s,void 0)},825908:s=>{r.Ra("Sqrt",s,void 0)},825960:s=>{r.Ra("Exp",s,void 0)},826011:s=>{r.Ra("Erf",s,void 0)},826062:s=>{r.Ra("Sigmoid",s,void 0)},826117:(s,m,g)=>{r.Ra("HardSigmoid",s,{alpha:m,beta:g})},826196:s=>{r.Ra("Log",s,void 0)},826247:s=>{r.Ra("Sin",s,void 0)},826298:s=>{r.Ra("Cos",s,void 0)},826349:s=>{r.Ra("Tan",s,void 0)},826400:s=>{r.Ra("Asin",s,void 0)},826452:s=>{r.Ra("Acos",s,void 0)},826504:s=>{r.Ra("Atan",s,void 0)},826556:s=>{r.Ra("Sinh",s,void 0)},826608:s=>{r.Ra("Cosh",s,void 0)},826660:s=>{r.Ra("Asinh",s,void 0)},826713:s=>{r.Ra("Acosh",s,void 0)},826766:s=>{r.Ra("Atanh",s,void 0)},826819:s=>{r.Ra("Tanh",s,void 0)},826871:s=>{r.Ra("Not",s,void 0)},826922:(s,m,g)=>{r.Ra("Clip",s,{min:m,max:g})},826991:s=>{r.Ra("Clip",s,void 0)},827043:(s,m)=>{r.Ra("Elu",s,{alpha:m})},827101:s=>{r.Ra("Relu",s,void 0)},827153:(s,m)=>{r.Ra("LeakyRelu",s,{alpha:m})},827217:(s,m)=>{r.Ra("ThresholdedRelu",s,{alpha:m})},827287:(s,m)=>{r.Ra("Cast",s,{to:m})},827345:s=>{r.Ra("Add",s,void 0)},827396:s=>{r.Ra("Sub",s,void 0)},827447:s=>{r.Ra("Mul",s,void 0)},827498:s=>{r.Ra("Div",s,void 0)},827549:s=>{r.Ra("Pow",s,void 0)},827600:s=>{r.Ra("Equal",s,void 0)},827653:s=>{r.Ra("Greater",s,void 0)},827708:s=>{r.Ra("GreaterOrEqual",s,void 0)},827770:s=>{r.Ra("Less",s,void 0)},827822:s=>{r.Ra("LessOrEqual",s,void 0)},827881:(s,m,g,$,T)=>{r.Ra("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828040:(s,m,g,$,T)=>{r.Ra("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828198:(s,m,g,$,T)=>{r.Ra("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828356:(s,m,g,$,T)=>{r.Ra("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828515:(s,m,g,$,T)=>{r.Ra("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828673:(s,m,g,$,T)=>{r.Ra("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828830:(s,m,g,$,T)=>{r.Ra("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828987:(s,m,g,$,T)=>{r.Ra("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829148:(s,m,g,$,T)=>{r.Ra("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829312:(s,m,g,$,T)=>{r.Ra("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829476:s=>{r.Ra("Where",s,void 0)},829529:(s,m,g)=>{r.Ra("Transpose",s,{perm:m?Array.from(W.subarray(m>>>0,g>>>0)):[]})},829637:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829770:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829903:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},830304:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},830869:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},831270:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},831835:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},831926:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832210:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},832301:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832585:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},832672:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832952:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},833039:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},833319:(s,m,g,$,T)=>{r.Ra("Gemm",s,{alpha:m,beta:g,transA:$,transB:T})},833423:s=>{r.Ra("MatMul",s,void 0)},833477:(s,m,g,$)=>{r.Ra("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833585:(s,m,g,$)=>{r.Ra("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833693:(s,m)=>{r.Ra("Softmax",s,{axis:m})},833756:(s,m)=>{r.Ra("Concat",s,{axis:m})},833816:(s,m,g,$,T)=>{r.Ra("Split",s,{axis:m,numOutputs:g,splitSizes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},833956:s=>{r.Ra("Expand",s,void 0)},834010:(s,m)=>{r.Ra("Gather",s,{axis:Number(m)})},834081:(s,m)=>{r.Ra("GatherElements",s,{axis:Number(m)})},834160:(s,m,g,$,T,B,H,q,te,X,de)=>{r.Ra("Resize",s,{antialias:m,axes:g?Array.from(W.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:je(T),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:je(te),mode:je(X),nearestMode:je(de)})},834506:(s,m,g,$,T,B,H)=>{r.Ra("Slice",s,{starts:m?Array.from(W.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(W.subarray($>>>0,T>>>0)):[],axes:B?Array.from(W.subarray(B>>>0,H>>>0)):[]})},834722:s=>{r.Ra("Tile",s,void 0)},834774:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},834885:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},834999:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835113:s=>{r.Ra("Range",s,void 0)},835166:(s,m)=>{r.Ra("Einsum",s,{equation:je(m)})},835247:(s,m,g,$,T)=>{r.Ra("Pad",s,{mode:m,value:g,pads:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},835374:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835543:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835712:(s,m,g)=>{r.Ra("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},835809:(s,m,g,$,T,B,H,q,te)=>{r.Ra("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B,qkvHiddenSizes:H?Array.from(W.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!te})},836081:s=>{r.Ra("BiasAdd",s,void 0)},836136:s=>{r.Ra("BiasSplitGelu",s,void 0)},836197:s=>{r.Ra("FastGelu",s,void 0)},836253:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe)=>{r.Ra("Conv",s,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[T],pads:B?Array.from(W.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!N[X>>>0],activation:je(de),activation_params:Ee?Array.from(Ce.subarray(Ee>>>0,Oe>>>0)):[]})},836623:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("Conv",s,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:T,kernel_shape:[B,H],pads:q?Array.from(W.subarray(q>>>0,te>>>0)):[],strides:[X,de],w_is_const:()=>!!N[Oe>>>0],activation:je(D),activation_params:be?Array.from(Ce.subarray(be>>>0,Ie>>>0)):[]})},837014:s=>{r.Ra("Gelu",s,void 0)},837066:(s,m,g,$,T,B)=>{r.Ra("MatMulNBits",s,{k:m,n:g,accuracyLevel:$,bits:T,blockSize:B})},837193:(s,m,g,$,T,B)=>{r.Ra("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B})},837352:(s,m,g,$,T)=>{r.Ra("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:T})},837491:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837593:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837695:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},837806:s=>{r.ub(s)},837840:(s,m)=>r.wb(s,m,r.cb.xb,r.cb.errors)};function qt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}class Vt{constructor(m){this.hb=m-24}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(s,m,g)=>{m>>>=0;var $=m+g;for(g=m;s[g]&&!(g>=$);)++g;if(16<g-m&&s.buffer&&xr)return xr.decode(s.subarray(m,g));for($="";m<g;){var T=s[m++];if(T&128){var B=s[m++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|B);else{var H=s[m++]&63;T=(T&240)==224?(T&15)<<12|B<<6|H:(T&7)<<18|B<<12|H<<6|s[m++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},je=(s,m)=>(s>>>=0)?Kt(K,s,m):"",Wt=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++g):m+=3}return m},at=(s,m,g,$)=>{if(g>>>=0,!(0<$))return 0;var T=g;$=g+$-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=$)break;m[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;m[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;m[g++>>>0]=224|H>>12}else{if(g+3>=$)break;m[g++>>>0]=240|H>>18,m[g++>>>0]=128|H>>12&63}m[g++>>>0]=128|H>>6&63}m[g++>>>0]=128|H&63}}return m[g>>>0]=0,g-T},Cr,ft=s=>{for(var m="";K[s>>>0];)m+=Cr[K[s++>>>0]];return m},ur={},Ar={},Ir={},st;function Tr(s,m,g={}){var $=m.name;if(!s)throw new st(`type "${$}" must have a positive integer typeid pointer`);if(Ar.hasOwnProperty(s)){if(g.nb)return;throw new st(`Cannot register type \'${$}\' twice`)}Ar[s]=m,delete Ir[s],ur.hasOwnProperty(s)&&(m=ur[s],delete ur[s],m.forEach(T=>T()))}function ht(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Tr(s,m,g)}var bt=(s,m,g)=>{switch(m){case 1:return g?$=>N[$>>>0]:$=>K[$>>>0];case 2:return g?$=>Q[$>>>1>>>0]:$=>he[$>>>1>>>0];case 4:return g?$=>W[$>>>2>>>0]:$=>se[$>>>2>>>0];case 8:return g?$=>We[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}},Er=[],Te=[];function dr(s){s>>>=0,9<s&&--Te[s+1]===0&&(Te[s]=void 0,Er.push(s))}var Xe=s=>{if(!s)throw new st("Cannot use deleted val. handle = "+s);return Te[s]},ut=s=>{switch(s){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Er.pop()||Te.length;return Te[m]=s,Te[m+1]=1,m}};function lr(s){return this.fromWireType(se[s>>>2>>>0])}var Fn={name:"emscripten::val",fromWireType:s=>{var m=Xe(s);return dr(s),m},toWireType:(s,m)=>ut(m),argPackAdvance:8,readValueFromPointer:lr,bb:null},ge=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Ce[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(ae[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}},Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(s,m)=>{for(var g=s>>1,$=g+m/2;!(g>=$)&&he[g>>>0];)++g;if(g<<=1,32<g-s&&Yt)return Yt.decode(K.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=m/2);++$){var T=Q[s+2*$>>>1>>>0];if(T==0)break;g+=String.fromCharCode(T)}return g},qn=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=m;g=g<2*s.length?g/2:s.length;for(var T=0;T<g;++T)Q[m>>>1>>>0]=s.charCodeAt(T),m+=2;return Q[m>>>1>>>0]=0,m-$},Kr=s=>2*s.length,jn=(s,m)=>{for(var g=0,$="";!(g>=m/4);){var T=W[s+4*g>>>2>>>0];if(T==0)break;++g,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},Yr=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var $=m;g=$+g-4;for(var T=0;T<s.length;++T){var B=s.charCodeAt(T);if(55296<=B&&57343>=B){var H=s.charCodeAt(++T);B=65536+((B&1023)<<10)|H&1023}if(W[m>>>2>>>0]=B,m+=4,m+4>g)break}return W[m>>>2>>>0]=0,m-$},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,m+=4}return m},cr=(s,m)=>{var g=Ar[s];if(g===void 0)throw s=Mr(s),g=ft(s),rt(s),new st(`${m} has unknown type ${g}`);return g},Pr=(s,m,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(se[m>>>2>>>0]=ut($)),s},He=s=>{try{s()}catch(m){ne(m)}},Xr=s=>{if(!R)try{s();try{L=L=s=L,r.onExit?.(s),R=!0,h(s,new qt(s))}catch(m){m instanceof qt||m=="unwind"||h(1,m)}}catch(m){m instanceof qt||m=="unwind"||h(1,m)}};function Qr(){var s=pe,m={};for(let[g,$]of Object.entries(s))m[g]=typeof $=="function"?(...T)=>{Zt.push(g);try{return $(...T)}finally{R||(Zt.pop(),dt&&gt===1&&Zt.length===0&&(gt=0,He(dn),typeof Fibers<"u"&&Fibers.Db()))}}:$;return m}var gt=0,dt=null,Bt=0,Zt=[],kr={},Or={},Jr=0,pr=null,en=[];function tn(){return new Promise((s,m)=>{pr={resolve:s,reject:m}})}function rn(){var s=Nt(65548),m=s+12;se[s>>>2>>>0]=m,se[s+4>>>2>>>0]=m+65536,m=Zt[0];var g=kr[m];return g===void 0&&(g=Jr++,kr[m]=g,Or[g]=m),W[s+8>>>2>>>0]=g,s}function nn(s){if(!R){if(gt===0){var m=!1,g=!1;s(($=0)=>{if(!R&&(Bt=$,m=!0,g)){gt=2,He(()=>vt(dt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),$=!1;try{var T=(0,pe[Or[W[dt+8>>>2>>>0]]])()}catch(q){T=q,$=!0}var B=!1;if(!dt){var H=pr;H&&(pr=null,($?H.reject:H.resolve)(T),B=!0)}if($&&!B)throw T}}),g=!0,m||(gt=1,dt=rn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),He(()=>Jt(dt)))}else gt===2?(gt=0,He(ct),rt(dt),dt=null,en.forEach(Xr)):ne(`invalid state: ${gt}`);return Bt}}function Rr(s){return nn(m=>{s().then(m)})}var Xt=[],on={},nt=s=>{var m=on[s];return m===void 0?ft(s):m},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Br=s=>{var m=Xt.length;return Xt.push(s),m},Kn=(s,m)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=cr(se[m+4*$>>>2>>>0],"parameter "+$);return g},wt=(s,m)=>Object.defineProperty(m,"name",{value:s});function Yn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=wt(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var Je=s=>s%4===0&&(s%100!==0||s%400===0),Dr=[0,31,60,91,121,152,182,213,244,274,305,335],fr=[0,31,59,90,120,151,181,212,243,273,304,334],lt=[],hr=(s,m)=>{lt.length=0;for(var g;g=K[s++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,lt.push(g==112?se[m>>>2>>>0]:g==106?We[m>>>3]:g==105?W[m>>>2>>>0]:ae[m>>>3>>>0]),m+=$?8:4}return lt},Qe={},ot=()=>{if(!Qt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in Qe)Qe[m]===void 0?delete s[m]:s[m]=Qe[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);Qt=g}return Qt},Qt,Zn=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],zr=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(s){var m=Array(Wt(s)+1);return at(s,m,0,m.length),m}function sn(s,m,g,$){function T(D,be,Ie){for(D=typeof D=="number"?D.toString():D||"";D.length<be;)D=Ie[0]+D;return D}function B(D,be){return T(D,be,"0")}function H(D,be){function Ie(Mt){return 0>Mt?-1:0<Mt?1:0}var zt;return(zt=Ie(D.getFullYear()-be.getFullYear()))===0&&(zt=Ie(D.getMonth()-be.getMonth()))===0&&(zt=Ie(D.getDate()-be.getDate())),zt}function q(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function te(D){var be=D.$a;for(D=new Date(new Date(D.ab+1900,0,1).getTime());0<be;){var Ie=D.getMonth(),zt=(Je(D.getFullYear())?an:zr)[Ie];if(be>zt-D.getDate())be-=zt-D.getDate()+1,D.setDate(1),11>Ie?D.setMonth(Ie+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+be);break}}return Ie=new Date(D.getFullYear()+1,0,4),be=q(new Date(D.getFullYear(),0,4)),Ie=q(Ie),0>=H(be,D)?0>=H(Ie,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,$>>>=0;var X=se[$+40>>>2>>>0];$={Ab:W[$>>>2>>>0],zb:W[$+4>>>2>>>0],fb:W[$+8>>>2>>>0],jb:W[$+12>>>2>>>0],gb:W[$+16>>>2>>>0],ab:W[$+20>>>2>>>0],Va:W[$+24>>>2>>>0],$a:W[$+28>>>2>>>0],Cb:W[$+32>>>2>>>0],yb:W[$+36>>>2>>>0],Bb:X?je(X):""},g=je(g),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in X)g=g.replace(new RegExp(de,"g"),X[de]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");X={"%a":D=>Ee[D.Va].substring(0,3),"%A":D=>Ee[D.Va],"%b":D=>Oe[D.gb].substring(0,3),"%B":D=>Oe[D.gb],"%C":D=>B((D.ab+1900)/100|0,2),"%d":D=>B(D.jb,2),"%e":D=>T(D.jb,2," "),"%g":D=>te(D).toString().substring(2),"%G":te,"%H":D=>B(D.fb,2),"%I":D=>(D=D.fb,D==0?D=12:12<D&&(D-=12),B(D,2)),"%j":D=>{for(var be=0,Ie=0;Ie<=D.gb-1;be+=(Je(D.ab+1900)?an:zr)[Ie++]);return B(D.jb+be,3)},"%m":D=>B(D.gb+1,2),"%M":D=>B(D.zb,2),"%n":()=>`\n`,"%p":D=>0<=D.fb&&12>D.fb?"AM":"PM","%S":D=>B(D.Ab,2),"%t":()=>"	","%u":D=>D.Va||7,"%U":D=>B(Math.floor((D.$a+7-D.Va)/7),2),"%V":D=>{var be=Math.floor((D.$a+7-(D.Va+6)%7)/7);if(2>=(D.Va+371-D.$a-2)%7&&be++,be)be==53&&(Ie=(D.Va+371-D.$a)%7,Ie==4||Ie==3&&Je(D.ab)||(be=1));else{be=52;var Ie=(D.Va+7-D.$a-1)%7;(Ie==4||Ie==5&&Je(D.ab%400-1))&&be++}return B(be,2)},"%w":D=>D.Va,"%W":D=>B(Math.floor((D.$a+7-(D.Va+6)%7)/7),2),"%y":D=>(D.ab+1900).toString().substring(2),"%Y":D=>D.ab+1900,"%z":D=>{D=D.yb;var be=0<=D;return D=Math.abs(D)/60,(be?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.Bb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in X)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),X[de]($)));return g=g.replace(/\\0\\0/g,"%"),de=Xn(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var un=Array(256),gr=0;256>gr;++gr)un[gr]=String.fromCharCode(gr);Cr=un,st=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Te.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>Te.length/2-5-Er.length;var Qn={ia:function(s,m,g){return Rr(async()=>{await r.sb(s,m,g)})},a:function(s,m,g){s>>>=0;var $=new Vt(s);throw se[$.hb+16>>>2>>>0]=0,se[$.hb+4>>>2>>>0]=m>>>0,se[$.hb+8>>>2>>>0]=g>>>0,sr=s,jt++,sr},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:bt(m,g>>>0,m.indexOf("u")==-1),bb:null})},K:function(s,m,g,$){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:function(T){return!!T},toWireType:function(T,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(K[T>>>0])},bb:null})},J:function(s){return ht(s>>>0,Fn)},B:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:ge(m,g>>>0),bb:null})},s:function(s,m,g,$,T){if(s>>>=0,g>>>=0,m=ft(m>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var B=32-8*g;T=q=>q<<B>>>B}var H=m.includes("unsigned")?function(q,te){return te>>>0}:function(q,te){return te};ht(s,{name:m,fromWireType:T,toWireType:H,argPackAdvance:8,readValueFromPointer:bt(m,g,$!==0),bb:null})},o:function(s,m,g){function $(B){return new T(N.buffer,se[B+4>>>2>>>0],se[B>>>2>>>0])}var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=ft(g>>>0),ht(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{nb:!0})},D:function(s,m){m=ft(m>>>0);var g=m==="std::string";ht(s>>>0,{name:m,fromWireType:function($){var T=se[$>>>2>>>0],B=$+4;if(g)for(var H=B,q=0;q<=T;++q){var te=B+q;if(q==T||K[te>>>0]==0){if(H=je(H,te-H),X===void 0)var X=H;else X+=String.fromCharCode(0),X+=H;H=te+1}}else{for(X=Array(T),q=0;q<T;++q)X[q]=String.fromCharCode(K[B+q>>>0]);X=X.join("")}return rt($),X},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var B=typeof T=="string";if(!(B||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var H=g&&B?Wt(T):T.length,q=Nt(4+H+1),te=q+4;if(se[q>>>2>>>0]=H,g&&B)at(T,K,te,H+1);else if(B)for(B=0;B<H;++B){var X=T.charCodeAt(B);if(255<X)throw rt(te),new st("String has UTF-16 code units that do not fit in 8 bits");K[te+B>>>0]=X}else for(B=0;B<H;++B)K[te+B>>>0]=T[B];return $!==null&&$.push(rt,q),q},argPackAdvance:8,readValueFromPointer:lr,bb($){rt($)}})},x:function(s,m,g){if(m>>>=0,g>>>=0,g=ft(g),m===2)var $=jr,T=qn,B=Kr,H=q=>he[q>>>1>>>0];else m===4&&($=jn,T=Yr,B=Zr,H=q=>se[q>>>2>>>0]);ht(s>>>0,{name:g,fromWireType:q=>{for(var te=se[q>>>2>>>0],X,de=q+4,Ee=0;Ee<=te;++Ee){var Oe=q+4+Ee*m;(Ee==te||H(Oe)==0)&&(de=$(de,Oe-de),X===void 0?X=de:(X+=String.fromCharCode(0),X+=de),de=Oe+m)}return rt(q),X},toWireType:(q,te)=>{if(typeof te!="string")throw new st(`Cannot pass non-string to C++ string type ${g}`);var X=B(te),de=Nt(4+X+m);return se[de>>>2>>>0]=X/m,T(te,de+4,X+m),q!==null&&q.push(rt,de),de},argPackAdvance:8,readValueFromPointer:lr,bb(q){rt(q)}})},L:function(s,m){m=ft(m>>>0),ht(s>>>0,{ob:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=Xe(s>>>0),m=cr(m,"emval::as"),Pr(m,g,s)},w:function(s){return s>>>=0,Rr(()=>(s=Xe(s),s.then(ut)))},n:function(s,m,g,$){return g>>>=0,$>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),s(null,m,g,$)},j:function(s,m,g,$,T){return g>>>=0,$>>>=0,T>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),g=nt(g),s(m,m[g],$,T)},b:dr,A:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),s==m},m:function(s){return s>>>=0,s===0?ut(mr()):(s=nt(s),ut(mr()[s]))},i:function(s,m,g){m=Kn(s,m>>>0);var $=m.shift();s--;var T=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],te=[$],X=0;X<s;++X)H.push("arg"+X),q.push("argType"+X),te.push(m[X]),T+=`  var arg${X} = argType${X}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[X].argPackAdvance;return T+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,$.ob||(q.push("emval_returnValue"),te.push(Pr),T+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(T+`};\n`),s=Yn(q)(...te),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${$.name}>`,Br(wt(g,s))},r:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),ut(s[m])},e:function(s){s>>>=0,9<s&&(Te[s+1]+=1)},t:function(){return ut([])},l:function(s){s=Xe(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return ut(m)},f:function(s){return ut(nt(s>>>0))},k:function(){return ut({})},h:function(s){s>>>=0;for(var m=Xe(s);m.length;){var g=m.pop();m.pop()(g)}dr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=Xe(s>>>0),m=Xe(m),g=Xe(g),s[m]=g},c:function(s,m){return m>>>=0,s=cr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),ut(s)},W:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getUTCSeconds(),W[m+4>>>2>>>0]=s.getUTCMinutes(),W[m+8>>>2>>>0]=s.getUTCHours(),W[m+12>>>2>>>0]=s.getUTCDate(),W[m+16>>>2>>>0]=s.getUTCMonth(),W[m+20>>>2>>>0]=s.getUTCFullYear()-1900,W[m+24>>>2>>>0]=s.getUTCDay(),W[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getSeconds(),W[m+4>>>2>>>0]=s.getMinutes(),W[m+8>>>2>>>0]=s.getHours(),W[m+12>>>2>>>0]=s.getDate(),W[m+16>>>2>>>0]=s.getMonth(),W[m+20>>>2>>>0]=s.getFullYear()-1900,W[m+24>>>2>>>0]=s.getDay(),W[m+28>>>2>>>0]=(Je(s.getFullYear())?Dr:fr)[s.getMonth()]+s.getDate()-1|0,W[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();W[m+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},Y:function(s){s>>>=0;var m=new Date(W[s+20>>>2>>>0]+1900,W[s+16>>>2>>>0],W[s+12>>>2>>>0],W[s+8>>>2>>>0],W[s+4>>>2>>>0],W[s>>>2>>>0],0),g=W[s+32>>>2>>>0],$=m.getTimezoneOffset(),T=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,T);return 0>g?W[s+32>>>2>>>0]=+(T!=B&&H==$):0<g!=(H==$)&&(T=Math.max(B,T),m.setTime(m.getTime()+6e4*((0<g?H:T)-$))),W[s+24>>>2>>>0]=m.getDay(),W[s+28>>>2>>>0]=(Je(m.getFullYear())?Dr:fr)[m.getMonth()]+m.getDate()-1|0,W[s>>>2>>>0]=m.getSeconds(),W[s+4>>>2>>>0]=m.getMinutes(),W[s+8>>>2>>>0]=m.getHours(),W[s+12>>>2>>>0]=m.getDate(),W[s+16>>>2>>>0]=m.getMonth(),W[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),BigInt(isNaN(s)?-1:s/1e3)},U:function(){return-52},V:function(){},N:function(s,m,g,$){g>>>=0,$>>>=0;var T=new Date().getFullYear(),B=new Date(T,0,1),H=new Date(T,6,1);T=B.getTimezoneOffset();var q=H.getTimezoneOffset();se[s>>>0>>>2>>>0]=60*Math.max(T,q),W[m>>>0>>>2>>>0]=+(T!=q),s=te=>te.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=s(B),H=s(H),q<T?(at(B,K,g,17),at(H,K,$,17)):(at(B,K,$,17),at(H,K,g,17))},v:()=>{ne("")},d:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},I:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(s){s>>>=0;var m=K.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=m*(1+.2/g);$=Math.min($,s+100663296);var T=Math;$=Math.max(s,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(T),Ae();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(s,m){s>>>=0,m>>>=0;var g=0;return ot().forEach(($,T)=>{var B=m+g;for(T=se[s+4*T>>>2>>>0]=B,B=0;B<$.length;++B)N[T++>>>0]=$.charCodeAt(B);N[T>>>0]=0,g+=$.length+1}),0},aa:function(s,m){s>>>=0,m>>>=0;var g=ot();se[s>>>2>>>0]=g.length;var $=0;return g.forEach(T=>$+=T.length+1),se[m>>>2>>>0]=$,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(s,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var T=0,B=0;B<g;B++){var H=se[m>>>2>>>0],q=se[m+4>>>2>>>0];m+=8;for(var te=0;te<q;te++){var X=K[H+te>>>0],de=Zn[s];X===0||X===10?((s===1?E:P)(Kt(de,0)),de.length=0):de.push(X)}T+=q}return se[$>>>2>>>0]=T,0},fa:sn,p:function(s,m,g,$){return sn(s>>>0,m>>>0,g>>>0,$>>>0)}},pe=function(){function s(g){return pe=g.exports,pe=Qr(),pe=ln(),O=pe.ja,Ae(),ie.unshift(pe.ka),le--,le==0&&(qe!==null&&(clearInterval(qe),qe=null),G&&(g=G,G=null,g())),pe}var m={a:Qn};if(le++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return mt(m,function(g){s(g.instance)}).catch(i),{}}(),Mr=s=>(Mr=pe.la)(s);r._OrtInit=(s,m)=>(r._OrtInit=pe.ma)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=pe.na)(s,m),r._OrtCreateSessionOptions=(s,m,g,$,T,B,H,q,te,X)=>(r._OrtCreateSessionOptions=pe.oa)(s,m,g,$,T,B,H,q,te,X),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=pe.pa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=pe.qa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=pe.ra)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=pe.sa)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=pe.ta)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=pe.ua)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=pe.va)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=pe.wa)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=pe.xa)(s,m),r._OrtFree=s=>(r._OrtFree=pe.ya)(s),r._OrtCreateTensor=(s,m,g,$,T,B)=>(r._OrtCreateTensor=pe.za)(s,m,g,$,T,B),r._OrtGetTensorData=(s,m,g,$,T)=>(r._OrtGetTensorData=pe.Aa)(s,m,g,$,T),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=pe.Ba)(s),r._OrtCreateRunOptions=(s,m,g,$)=>(r._OrtCreateRunOptions=pe.Ca)(s,m,g,$),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=pe.Da)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=pe.Ea)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=pe.Fa)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=pe.Ga)(s,m,g),r._OrtBindOutput=(s,m,g,$)=>(r._OrtBindOutput=pe.Ha)(s,m,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=pe.Ia)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=pe.Ja)(s),r._OrtRunWithBinding=(s,m,g,$,T)=>(r._OrtRunWithBinding=pe.Ka)(s,m,g,$,T),r._OrtRun=(s,m,g,$,T,B,H,q)=>(r._OrtRun=pe.La)(s,m,g,$,T,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=pe.Ma)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=pe.Na)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=pe.Oa)(s);var Nt=r._malloc=s=>(Nt=r._malloc=pe.Pa)(s),rt=r._free=s=>(rt=r._free=pe.Qa)(s),yr=s=>(yr=pe.Sa)(s),br=s=>(br=pe.Ta)(s),Ur=()=>(Ur=pe.Ua)(),Jt=s=>(Jt=pe.Wa)(s),dn=()=>(dn=pe.Xa)(),vt=s=>(vt=pe.Ya)(s),ct=()=>(ct=pe.Za)();r.___start_em_js=837952,r.___stop_em_js=838113;function ln(){var s=pe;s=Object.assign({},s);var m=g=>$=>g($)>>>0;return s.la=m(s.la),s.Pa=m(s.Pa),s.Ta=m(s.Ta),s.Ua=(g=>()=>g()>>>0)(s.Ua),s}r.stackSave=()=>Ur(),r.stackRestore=s=>yr(s),r.stackAlloc=s=>br(s),r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>at(s,K,m,g),r.lengthBytesUTF8=Wt;var Dt;G=function s(){Dt||Vr(),Dt||(G=s)};function Vr(){if(!(0<le)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();me.unshift(s)}for(;0<me.length;)me.shift()(r);if(!(0<le||Dt||(Dt=!0,r.calledRun=!0,R))){for(;0<ie.length;)ie.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return Vr(),u}})();typeof Ti=="object"&&typeof po=="object"?po.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Wr(()=>{});var ki=Wr(()=>{});var Oi={};gn(Oi,{cpus:()=>ll});var ll,Ri=Y(()=>{ll=void 0});var zi=Wr((Di,mo)=>{"use strict";var Bi=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){function r(){return ae.buffer!=ue.buffer&&Ne(),ue}function o(){return ae.buffer!=ue.buffer&&Ne(),le}function i(){return ae.buffer!=ue.buffer&&Ne(),qe}function u(){return ae.buffer!=ue.buffer&&Ne(),G}function a(){return ae.buffer!=ue.buffer&&Ne(),ne}function c(){return ae.buffer!=ue.buffer&&Ne(),xe}function p(){return ae.buffer!=ue.buffer&&Ne(),Ke}function h(){return ae.buffer!=ue.buffer&&Ne(),Ut}var d=t,y,w,_=new Promise((n,l)=>{y=n,w=l});d.mountExternalData=(n,l)=>{(d.Db||(d.Db=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Db};let v=()=>{let n=(f,b,C)=>(...k)=>{let V=ct,F=b?.();k=f(...k);let re=b?.();return F!==re&&(f=re,C(F),b=C=null),ct!=V?T():k},l=f=>async(...b)=>{try{if(d.Cb)throw Error("Session already started");let C=d.Cb={ec:b[0],errors:[]},k=await f(...b);if(d.Cb!==C)throw Error("Session mismatch");d.Kb?.flush();let V=C.errors;if(0<V.length){let F=await Promise.all(V);if(F=F.filter(re=>re),0<F.length)throw Error(F.join(`\n`))}return k}finally{d.Cb=null}};d._OrtCreateSession=n(d._OrtCreateSession,()=>d._OrtCreateSession,f=>d._OrtCreateSession=f),d._OrtRun=l(n(d._OrtRun,()=>d._OrtRun,f=>d._OrtRun=f)),d._OrtRunWithBinding=l(n(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,f=>d._OrtRunWithBinding=f)),d._OrtBindInput=n(d._OrtBindInput,()=>d._OrtBindInput,f=>d._OrtBindInput=f),v=void 0};d.jsepInit=(n,l)=>{if(v?.(),n==="webgpu"){[d.Kb,d.Wb,d.$b,d.Lb,d.Zb,d.ob,d.ac,d.cc,d.Xb,d.Yb,d.bc]=l;let f=d.Kb;d.jsepRegisterBuffer=(b,C,k,V)=>f.registerBuffer(b,C,k,V),d.jsepGetBuffer=b=>f.getBuffer(b),d.jsepCreateDownloader=(b,C,k)=>f.createDownloader(b,C,k),d.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},d.jsepOnRunStart=b=>f.onRunStart(b)}};var S=Object.assign({},d),A="./this.program",I=(n,l)=>{throw l},x=typeof window=="object",E=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function L(n){return d.locateFile?d.locateFile(n,R):R+n}var N,K,Q;if(P){var he=(uo(),wr(so)),W=(co(),wr(lo));R=E?W.dirname(R)+"/":__dirname+"/",N=(n,l)=>(n=Wt(n)?new URL(n):W.normalize(n),he.readFileSync(n,l?void 0:"utf8")),Q=n=>(n=N(n,!0),n.buffer||(n=new Uint8Array(n)),n),K=(n,l,f,b=!0)=>{n=Wt(n)?new URL(n):W.normalize(n),he.readFile(n,b?void 0:"utf8",(C,k)=>{C?f(C):l(b?k.buffer:k)})},!d.thisProgram&&1<process.argv.length&&(A=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),I=(n,l)=>{throw process.exitCode=n,l},global.Worker=Pi().Worker}else(x||E)&&(E?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.startsWith("blob:")?R="":R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1),P||(N=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},E&&(Q=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),K=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=ki().performance);var se=console.log.bind(console),Ce=console.error.bind(console);P&&(se=(...n)=>he.writeSync(1,n.join(" ")+`\n`),Ce=(...n)=>he.writeSync(2,n.join(" ")+`\n`));var We=se,ee=Ce;Object.assign(d,S),S=null;var ae,Ae,me=!1,ie,ue,le,qe,G,ne,xe,Ke,Be,Ge,Ut;function Ne(){var n=ae.buffer;d.HEAP8=ue=new Int8Array(n),d.HEAP16=qe=new Int16Array(n),d.HEAPU8=le=new Uint8Array(n),d.HEAPU16=G=new Uint16Array(n),d.HEAP32=ne=new Int32Array(n),d.HEAPU32=xe=new Uint32Array(n),d.HEAPF32=Ke=new Float32Array(n),d.HEAPF64=Ut=new Float64Array(n),d.HEAP64=Be=new BigInt64Array(n),d.HEAPU64=Ge=new BigUint64Array(n)}var Ye=16777216;if(O)ae=d.wasmMemory;else if(d.wasmMemory)ae=d.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Ye=ae.buffer.byteLength;var mt=[],Rt=[],qt=[],Vt=0,sr=null,jt=null;function xr(){if(Vt--,Vt==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Kt(n){throw n="Aborted("+n+")",ee(n),me=!0,ie=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Wt=n=>n.startsWith("file://"),at;at="ort-wasm-simd-threaded.wasm",je(at)||(at=L(at));function Cr(n){if(Q)return Q(n);throw"both async and sync fetching of the wasm failed"}function ft(n){if(x||E){if(typeof fetch=="function"&&!Wt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw`failed to load wasm binary file at \'${n}\'`;return l.arrayBuffer()}).catch(()=>Cr(n));if(K)return new Promise((l,f)=>{K(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>Cr(n))}function ur(n,l,f){return ft(n).then(b=>WebAssembly.instantiate(b,l)).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Kt(b)})}function Ar(n,l){var f=at;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Wt(f)||P||typeof fetch!="function"?ur(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(C){return ee(`wasm streaming compile failed: ${C}`),ee("falling back to ArrayBuffer instantiation"),ur(f,n,l)}))}var Ir={826468:(n,l,f,b)=>{if(typeof d>"u"||!d.Db)return 1;if(n=He(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Db.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},826969:()=>{d.Xb()},827e3:()=>{d.Yb()},827029:()=>{d.bc()},827054:n=>d.Wb(n),827087:n=>d.$b(n),827119:(n,l,f)=>{d.Lb(n,l,f,!0)},827158:(n,l,f)=>{d.Lb(n,l,f)},827191:n=>{d.ob("Abs",n,void 0)},827242:n=>{d.ob("Neg",n,void 0)},827293:n=>{d.ob("Floor",n,void 0)},827346:n=>{d.ob("Ceil",n,void 0)},827398:n=>{d.ob("Reciprocal",n,void 0)},827456:n=>{d.ob("Sqrt",n,void 0)},827508:n=>{d.ob("Exp",n,void 0)},827559:n=>{d.ob("Erf",n,void 0)},827610:n=>{d.ob("Sigmoid",n,void 0)},827665:(n,l,f)=>{d.ob("HardSigmoid",n,{alpha:l,beta:f})},827744:n=>{d.ob("Log",n,void 0)},827795:n=>{d.ob("Sin",n,void 0)},827846:n=>{d.ob("Cos",n,void 0)},827897:n=>{d.ob("Tan",n,void 0)},827948:n=>{d.ob("Asin",n,void 0)},828e3:n=>{d.ob("Acos",n,void 0)},828052:n=>{d.ob("Atan",n,void 0)},828104:n=>{d.ob("Sinh",n,void 0)},828156:n=>{d.ob("Cosh",n,void 0)},828208:n=>{d.ob("Asinh",n,void 0)},828261:n=>{d.ob("Acosh",n,void 0)},828314:n=>{d.ob("Atanh",n,void 0)},828367:n=>{d.ob("Tanh",n,void 0)},828419:n=>{d.ob("Not",n,void 0)},828470:(n,l,f)=>{d.ob("Clip",n,{min:l,max:f})},828539:n=>{d.ob("Clip",n,void 0)},828591:(n,l)=>{d.ob("Elu",n,{alpha:l})},828649:n=>{d.ob("Relu",n,void 0)},828701:(n,l)=>{d.ob("LeakyRelu",n,{alpha:l})},828765:(n,l)=>{d.ob("ThresholdedRelu",n,{alpha:l})},828835:(n,l)=>{d.ob("Cast",n,{to:l})},828893:n=>{d.ob("Add",n,void 0)},828944:n=>{d.ob("Sub",n,void 0)},828995:n=>{d.ob("Mul",n,void 0)},829046:n=>{d.ob("Div",n,void 0)},829097:n=>{d.ob("Pow",n,void 0)},829148:n=>{d.ob("Equal",n,void 0)},829201:n=>{d.ob("Greater",n,void 0)},829256:n=>{d.ob("GreaterOrEqual",n,void 0)},829318:n=>{d.ob("Less",n,void 0)},829370:n=>{d.ob("LessOrEqual",n,void 0)},829429:(n,l,f,b,C)=>{d.ob("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829588:(n,l,f,b,C)=>{d.ob("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829746:(n,l,f,b,C)=>{d.ob("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829904:(n,l,f,b,C)=>{d.ob("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830063:(n,l,f,b,C)=>{d.ob("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830221:(n,l,f,b,C)=>{d.ob("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830378:(n,l,f,b,C)=>{d.ob("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830535:(n,l,f,b,C)=>{d.ob("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830696:(n,l,f,b,C)=>{d.ob("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830860:(n,l,f,b,C)=>{d.ob("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},831024:n=>{d.ob("Where",n,void 0)},831077:(n,l,f)=>{d.ob("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},831185:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831318:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831451:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},831852:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},832417:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},832818:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},833383:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833474:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},833758:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833849:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834133:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834220:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834500:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834587:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834867:(n,l,f,b,C)=>{d.ob("Gemm",n,{alpha:l,beta:f,transA:b,transB:C})},834971:n=>{d.ob("MatMul",n,void 0)},835025:(n,l,f,b)=>{d.ob("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835133:(n,l,f,b)=>{d.ob("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835241:(n,l)=>{d.ob("Softmax",n,{axis:l})},835304:(n,l)=>{d.ob("Concat",n,{axis:l})},835364:(n,l,f,b,C)=>{d.ob("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},835504:n=>{d.ob("Expand",n,void 0)},835558:(n,l)=>{d.ob("Gather",n,{axis:Number(l)})},835629:(n,l)=>{d.ob("GatherElements",n,{axis:Number(l)})},835708:(n,l,f,b,C,k,V,F,re,J,ce)=>{d.ob("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:He(C),cubicCoeffA:k,excludeOutside:V,extrapolationValue:F,keepAspectRatioPolicy:He(re),mode:He(J),nearestMode:He(ce)})},836054:(n,l,f,b,C,k,V)=>{d.ob("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:k?Array.from(a().subarray(k>>>0,V>>>0)):[]})},836270:n=>{d.ob("Tile",n,void 0)},836322:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},836433:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836547:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836661:n=>{d.ob("Range",n,void 0)},836714:(n,l)=>{d.ob("Einsum",n,{equation:He(l)})},836795:(n,l,f,b,C)=>{d.ob("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},836922:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837091:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837260:(n,l,f)=>{d.ob("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},837357:(n,l,f,b,C,k,V,F,re)=>{d.ob("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k,qkvHiddenSizes:V?Array.from(a().subarray(Number(F)>>>0,Number(F)+V>>>0)):[],pastPresentShareBuffer:!!re})},837629:n=>{d.ob("BiasAdd",n,void 0)},837684:n=>{d.ob("BiasSplitGelu",n,void 0)},837745:n=>{d.ob("FastGelu",n,void 0)},837801:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze)=>{d.ob("Conv",n,{format:re?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[C],pads:k?Array.from(a().subarray(k>>>0,V>>>0)):[],strides:[F],w_is_const:()=>!!r()[J>>>0],activation:He(ce),activation_params:Re?Array.from(p().subarray(Re>>>0,ze>>>0)):[]})},838171:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("Conv",n,{format:Re?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:C,kernel_shape:[k,V],pads:F?Array.from(a().subarray(F>>>0,re>>>0)):[],strides:[J,ce],w_is_const:()=>!!r()[ze>>>0],activation:He(z),activation_params:we?Array.from(p().subarray(we>>>0,Pe>>>0)):[]})},838562:n=>{d.ob("Gelu",n,void 0)},838614:(n,l,f,b,C,k)=>{d.ob("MatMulNBits",n,{k:l,n:f,accuracyLevel:b,bits:C,blockSize:k})},838741:(n,l,f,b,C,k)=>{d.ob("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k})},838900:(n,l,f,b,C)=>{d.ob("RotaryEmbedding",n,{interleaved:!!l,numHeads:f,rotaryEmbeddingDim:b,scale:C})},839039:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839141:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839243:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},839354:n=>{d.ac(n)},839388:(n,l)=>d.cc(n,l,d.Cb.ec,d.Cb.errors)};function st(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var Tr=n=>{n.terminate(),n.onmessage=()=>{}},ht=n=>{ge.xb.length==0&&(lr(),ge.Mb(ge.xb[0]));var l=ge.xb.pop();if(!l)return 6;ge.yb.push(l),ge.ub[n.wb]=l,l.wb=n.wb;var f={cmd:"run",start_routine:n.fc,arg:n.Rb,pthread_ptr:n.wb};return P&&l.unref(),l.postMessage(f,n.mc),0},bt=0,Er=n=>{var l=io();return n=n(),fn(l),n},Te=(n,l,...f)=>Er(()=>{for(var b=2*f.length,C=oo(8*b),k=C>>>3,V=0;V<f.length;V++){var F=f[V];typeof F=="bigint"?(Be[k+2*V]=1n,Be[k+2*V+1]=F):(Be[k+2*V]=0n,h()[k+2*V+1>>>0]=F)}return gi(n,0,b,C,l)});function dr(n){if(O)return Te(0,1,n);ie=n,0<bt||(ge.hc(),d.onExit?.(n),me=!0),I(n,new st(n))}var Xe=n=>{if(ie=n,O)throw jr(n),"unwind";dr(n)};function ut(){for(var n=d.numThreads;n--;)lr();mt.unshift(()=>{Vt++,Fn(()=>xr())})}function lr(){var n=L("ort-wasm-simd-threaded.worker.js");n=new Worker(n),ge.xb.push(n)}function Fn(n){O?n():Promise.all(ge.xb.map(ge.Mb)).then(n)}var ge={xb:[],yb:[],Qb:[],ub:{},Gb(){O?(ge.receiveObjectTransfer=ge.dc,ge.threadInitTLS=ge.Pb,ge.setExitStatus=ge.Ob):ut()},Ob:n=>ie=n,pc:["$terminateWorker"],hc:()=>{for(var n of ge.yb)Tr(n);for(n of ge.xb)Tr(n);ge.xb=[],ge.yb=[],ge.ub=[]},Nb:n=>{var l=n.wb;delete ge.ub[l],ge.xb.push(n),ge.yb.splice(ge.yb.indexOf(n),1),n.wb=0,ro(l)},dc(){},Pb(){ge.Qb.forEach(n=>n())},Mb:n=>new Promise(l=>{n.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=pn()){var F=ge.ub[k.targetThread];F?F.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${V}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?rt():V==="spawnThread"?ht(k):V==="cleanupThread"?ge.Nb(ge.ub[k.thread]):V==="killThread"?(k=k.thread,V=ge.ub[k],delete ge.ub[k],Tr(V),ro(k),ge.yb.splice(ge.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?ge.ub[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.wb&&n.unref(),l(n)):V==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):V==="callHandler"?d[k.handler](...k.args):V&&ee(`worker sent an unknown command ${V}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},P&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var f=[],b=["onExit"],C;for(C of b)d.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:ae,wasmModule:Ae})})};d.PThread=ge;var Yt=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],bi(l,l-n),fn(l)};function jr(n){if(O)return Te(1,0,n);Xe(n)}d.invokeEntryPoint=(n,l)=>{bt=0,n=wi(n,l),0<bt?ge.Ob(n):no(n)};class qn{constructor(l){this.Ib=l-24}Gb(l,f){c()[this.Ib+16>>>2>>>0]=0,c()[this.Ib+4>>>2>>>0]=l,c()[this.Ib+8>>>2>>>0]=f}}var Kr=0,jn=0;function Yr(n,l,f,b){return O?Te(2,1,n,l,f,b):Zr(n,l,f,b)}function Zr(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?Yr(n,l,f,b):(n={fc:f,wb:n,Rb:b,mc:C},O?(n.oc="spawnThread",postMessage(n,C),0):ht(n))}var cr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Pr=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&cr)return cr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var C=n[l++];if(C&128){var k=n[l++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|k);else{var V=n[l++]&63;C=(C&240)==224?(C&15)<<12|k<<6|V:(C&7)<<18|k<<12|V<<6|n[l++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},He=(n,l)=>(n>>>=0)?Pr(o(),n,l):"";function Xr(n,l,f){return O?Te(3,1,n,l,f):0}function Qr(n,l){if(O)return Te(4,1,n,l)}var gt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},dt=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var k=0;k<n.length;++k){var V=n.charCodeAt(k);if(55296<=V&&57343>=V){var F=n.charCodeAt(++k);V=65536+((V&1023)<<10)|F&1023}if(127>=V){if(f>=b)break;l[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;l[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;l[f++>>>0]=224|V>>12}else{if(f+3>=b)break;l[f++>>>0]=240|V>>18,l[f++>>>0]=128|V>>12&63}l[f++>>>0]=128|V>>6&63}l[f++>>>0]=128|V&63}}return l[f>>>0]=0,f-C},Bt=(n,l,f)=>dt(n,o(),l,f);function Zt(n,l){if(O)return Te(5,1,n,l)}function kr(n,l,f){if(O)return Te(6,1,n,l,f)}function Or(n,l,f){return O?Te(7,1,n,l,f):0}function Jr(n,l){if(O)return Te(8,1,n,l)}function pr(n,l,f){if(O)return Te(9,1,n,l,f)}function en(n,l,f,b){if(O)return Te(10,1,n,l,f,b)}function tn(n,l,f,b){if(O)return Te(11,1,n,l,f,b)}function rn(n,l,f,b){if(O)return Te(12,1,n,l,f,b)}function nn(n){if(O)return Te(13,1,n)}function Rr(n,l){if(O)return Te(14,1,n,l)}function Xt(n,l,f){if(O)return Te(15,1,n,l,f)}var on,nt=n=>{for(var l="";o()[n>>>0];)l+=on[o()[n++>>>0]];return l},mr={},Br={},Kn={},wt;function Yn(n,l,f={}){var b=l.name;if(!n)throw new wt(`type "${b}" must have a positive integer typeid pointer`);if(Br.hasOwnProperty(n)){if(f.Ub)return;throw new wt(`Cannot register type \'${b}\' twice`)}Br[n]=l,delete Kn[n],mr.hasOwnProperty(n)&&(l=mr[n],delete mr[n],l.forEach(C=>C()))}function Je(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Yn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0]:b=>o()[b>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>Be[b>>>3]:b=>Ge[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}},fr=[],lt=[];function hr(n){n>>>=0,9<n&&--lt[n+1]===0&&(lt[n]=void 0,fr.push(n))}var Qe=n=>{if(!n)throw new wt("Cannot use deleted val. handle = "+n);return lt[n]},ot=n=>{switch(n){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let l=fr.pop()||lt.length;return lt[l]=n,lt[l+1]=1,l}};function Qt(n){return this.fromWireType(c()[n>>>2>>>0])}var Zn={name:"emscripten::val",fromWireType:n=>{var l=Qe(n);return hr(n),l},toWireType:(n,l)=>ot(l),argPackAdvance:8,readValueFromPointer:Qt,Bb:null},an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}},zr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xn=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&zr)return zr.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var k=n.charCodeAt(C);i()[l>>>1>>>0]=k,l+=2}return i()[l>>>1>>>0]=0,l-b},un=n=>2*n.length,gr=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},Qn=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var C=0;C<n.length;++C){var k=n.charCodeAt(C);if(55296<=k&&57343>=k){var V=n.charCodeAt(++C);k=65536+((k&1023)<<10)|V&1023}if(a()[l>>>2>>>0]=k,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},pe=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mr=n=>{if(!me)try{if(n(),!(0<bt))try{O?no(ie):Xe(ie)}catch(l){l instanceof st||l=="unwind"||I(1,l)}}catch(l){l instanceof st||l=="unwind"||I(1,l)}};function Nt(n){n>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(a(),n>>>2,n).value.then(rt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=Nt;var rt=()=>{var n=pn();n&&(Nt(n),Mr(yi))};d.checkMailbox=rt;var yr=[],br=(n,l)=>{var f=Br[n];if(f===void 0)throw n=fi(n),f=nt(n),At(n),new wt(`${l} has unknown type ${f}`);return f},Ur=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[l>>>2>>>0]=ot(b)),n},Jt=n=>{try{n()}catch(l){Kt(l)}};function dn(){var n=oe,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?(...C)=>{Dt.push(f);try{return b(...C)}finally{me||(Dt.pop(),ct&&vt===1&&Dt.length===0&&(vt=0,bt+=1,Jt($i),typeof Fibers<"u"&&Fibers.rc()))}}:b;return l}var vt=0,ct=null,ln=0,Dt=[],Vr={},s={},m=0,g=null,$=[];function T(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=mn(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Dt[0];var f=Vr[l];return f===void 0&&(f=m++,Vr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[ct+8>>>2>>>0];return n=oe[s[n]],--bt,n()}function q(n){if(!me){if(vt===0){var l=!1,f=!1;n((b=0)=>{if(!me&&(ln=b,l=!0,f)){vt=2,Jt(()=>_i(ct)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),b=!1;try{var C=H()}catch(F){C=F,b=!0}var k=!1;if(!ct){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),k=!0)}if(b&&!k)throw C}}),f=!0,l||(vt=1,ct=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Jt(()=>vi(ct)))}else vt===2?(vt=0,Jt(Si),At(ct),ct=null,$.forEach(Mr)):Kt(`invalid state: ${vt}`);return ln}}function te(n){return q(l=>{n().then(l)})}var X=[],de={},Ee=n=>{var l=de[n];return l===void 0?nt(n):l},Oe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),D=n=>{var l=X.length;return X.push(n),l},be=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=br(c()[l+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function zt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var Mt=n=>n%4===0&&(n%100!==0||n%400===0),Qo=[0,31,60,91,121,152,182,213,244,274,305,335],Jo=[0,31,59,90,120,151,181,212,243,273,304,334];function ei(n,l,f,b,C,k,V){return O?Te(16,1,n,l,f,b,C,k,V):-52}function ti(n,l,f,b,C,k){if(O)return Te(17,1,n,l,f,b,C,k)}var Jn=[],ri=(n,l)=>{Jn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Jn.push(f==112?c()[l>>>2>>>0]:f==106?Be[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Jn},eo={},ni=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:A||"./this.program"},l;for(l in eo)eo[l]===void 0?delete n[l]:n[l]=eo[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);to=f}return to},to;function oi(n,l){if(O)return Te(18,1,n,l);n>>>=0,l>>>=0;var f=0;return ni().forEach((b,C)=>{var k=l+f;for(C=c()[n+4*C>>>2>>>0]=k,k=0;k<b.length;++k)r()[C++>>>0]=b.charCodeAt(k);r()[C>>>0]=0,f+=b.length+1}),0}function ii(n,l){if(O)return Te(19,1,n,l);n>>>=0,l>>>=0;var f=ni();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[l>>>2>>>0]=b,0}function ai(n){return O?Te(20,1,n):52}function si(n,l,f,b){return O?Te(21,1,n,l,f,b):52}function ui(n,l,f,b){return O?Te(22,1,n,l,f,b):70}var Xd=[null,[],[]];function di(n,l,f,b){if(O)return Te(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var C=0,k=0;k<f;k++){var V=c()[l>>>2>>>0],F=c()[l+4>>>2>>>0];l+=8;for(var re=0;re<F;re++){var J=o()[V+re>>>0],ce=Xd[n];J===0||J===10?((n===1?We:ee)(Pr(ce,0)),ce.length=0):ce.push(J)}C+=F}return c()[b>>>2>>>0]=C,0}var li=[31,29,31,30,31,30,31,31,30,31,30,31],ci=[31,28,31,30,31,30,31,31,30,31,30,31];function Qd(n){var l=Array(gt(n)+1);return dt(n,l,0,l.length),l}var Jd=(n,l)=>{r().set(n,l>>>0)};function pi(n,l,f,b){function C(z,we,Pe){for(z=typeof z=="number"?z.toString():z||"";z.length<we;)z=Pe[0]+z;return z}function k(z,we){return C(z,we,"0")}function V(z,we){function Pe(Ci){return 0>Ci?-1:0<Ci?1:0}var er;return(er=Pe(z.getFullYear()-we.getFullYear()))===0&&(er=Pe(z.getMonth()-we.getMonth()))===0&&(er=Pe(z.getDate()-we.getDate())),er}function F(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function re(z){var we=z.zb;for(z=new Date(new Date(z.Ab+1900,0,1).getTime());0<we;){var Pe=z.getMonth(),er=(Mt(z.getFullYear())?li:ci)[Pe];if(we>er-z.getDate())we-=er-z.getDate()+1,z.setDate(1),11>Pe?z.setMonth(Pe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+we);break}}return Pe=new Date(z.getFullYear()+1,0,4),we=F(new Date(z.getFullYear(),0,4)),Pe=F(Pe),0>=V(we,z)?0>=V(Pe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={kc:a()[b>>>2>>>0],jc:a()[b+4>>>2>>>0],Eb:a()[b+8>>>2>>>0],Jb:a()[b+12>>>2>>>0],Fb:a()[b+16>>>2>>>0],Ab:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],zb:a()[b+28>>>2>>>0],qc:a()[b+32>>>2>>>0],ic:a()[b+36>>>2>>>0],lc:J?He(J):""},f=He(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in J)f=f.replace(new RegExp(ce,"g"),J[ce]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");J={"%a":z=>Re[z.vb].substring(0,3),"%A":z=>Re[z.vb],"%b":z=>ze[z.Fb].substring(0,3),"%B":z=>ze[z.Fb],"%C":z=>k((z.Ab+1900)/100|0,2),"%d":z=>k(z.Jb,2),"%e":z=>C(z.Jb,2," "),"%g":z=>re(z).toString().substring(2),"%G":re,"%H":z=>k(z.Eb,2),"%I":z=>(z=z.Eb,z==0?z=12:12<z&&(z-=12),k(z,2)),"%j":z=>{for(var we=0,Pe=0;Pe<=z.Fb-1;we+=(Mt(z.Ab+1900)?li:ci)[Pe++]);return k(z.Jb+we,3)},"%m":z=>k(z.Fb+1,2),"%M":z=>k(z.jc,2),"%n":()=>`\n`,"%p":z=>0<=z.Eb&&12>z.Eb?"AM":"PM","%S":z=>k(z.kc,2),"%t":()=>"	","%u":z=>z.vb||7,"%U":z=>k(Math.floor((z.zb+7-z.vb)/7),2),"%V":z=>{var we=Math.floor((z.zb+7-(z.vb+6)%7)/7);if(2>=(z.vb+371-z.zb-2)%7&&we++,we)we==53&&(Pe=(z.vb+371-z.zb)%7,Pe==4||Pe==3&&Mt(z.Ab)||(we=1));else{we=52;var Pe=(z.vb+7-z.zb-1)%7;(Pe==4||Pe==5&&Mt(z.Ab%400-1))&&we++}return k(we,2)},"%w":z=>z.vb,"%W":z=>k(Math.floor((z.zb+7-(z.vb+6)%7)/7),2),"%y":z=>(z.Ab+1900).toString().substring(2),"%Y":z=>z.Ab+1900,"%z":z=>{z=z.ic;var we=0<=z;return z=Math.abs(z)/60,(we?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.lc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ce in J)f.includes(ce)&&(f=f.replace(new RegExp(ce,"g"),J[ce](b)));return f=f.replace(/\\0\\0/g,"%"),ce=Qd(f),ce.length>l?0:(Jd(ce,n),ce.length-1)}ge.Gb();for(var mi=Array(256),cn=0;256>cn;++cn)mi[cn]=String.fromCharCode(cn);on=mi,wt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},lt.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>lt.length/2-5-fr.length;var el=[dr,jr,Yr,Xr,Qr,Zt,kr,Or,Jr,pr,en,tn,rn,nn,Rr,Xt,ei,ti,oi,ii,ai,si,ui,di],tl={ua:function(n,l,f){return te(async()=>{await d.Zb(n,l,f)})},b:function(n,l,f){throw n>>>=0,new qn(n).Gb(l>>>0,f>>>0),Kr=n,jn++,Kr},ia:function(n){hi(n>>>0,!E,1,!x,131072,!1),ge.Pb()},G:function(n){n>>>=0,O?postMessage({cmd:"cleanupThread",thread:n}):ge.Nb(ge.ub[n])},_:Zr,A:Xr,pa:Qr,W:Zt,Y:kr,qa:Or,na:Jr,fa:pr,ma:en,K:tn,X:rn,U:nn,oa:Rr,V:Xt,E:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:function(b,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":(b=typeof C,C=b==="object"||b==="array"||b==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:Dr(l,f,l.indexOf("u")==-1),Bb:null})},O:function(n,l,f,b){n>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:function(C){return!!C},toWireType:function(C,k){return k?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(n){return Je(n>>>0,Zn)},D:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:an(l,f),Bb:null})},t:function(n,l,f,b,C){if(n>>>=0,f>>>=0,l=nt(l>>>0),C===-1&&(C=4294967295),C=F=>F,b===0){var k=32-8*f;C=F=>F<<k>>>k}var V=l.includes("unsigned")?function(F,re){return re>>>0}:function(F,re){return re};Je(n,{name:l,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Bb:null})},p:function(n,l,f){function b(k){var V=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new C(r().buffer,k,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=nt(f>>>0),Je(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Ub:!0})},F:function(n,l){n>>>=0,l=nt(l>>>0);var f=l==="std::string";Je(n,{name:l,fromWireType:function(b){var C=c()[b>>>2>>>0],k=b+4;if(f)for(var V=k,F=0;F<=C;++F){var re=k+F;if(F==C||o()[re>>>0]==0){if(V=He(V,re-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=re+1}}else{for(J=Array(C),F=0;F<C;++F)J[F]=String.fromCharCode(o()[k+F>>>0]);J=J.join("")}return At(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var k=typeof C=="string";if(!(k||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new wt("Cannot pass non-string to std::string");var V=f&&k?gt(C):C.length,F=mn(4+V+1),re=F+4;if(c()[F>>>2>>>0]=V,f&&k)Bt(C,re,V+1);else if(k)for(k=0;k<V;++k){var J=C.charCodeAt(k);if(255<J)throw At(re),new wt("String has UTF-16 code units that do not fit in 8 bits");o()[re+k>>>0]=J}else for(k=0;k<V;++k)o()[re+k>>>0]=C[k];return b!==null&&b.push(At,F),F},argPackAdvance:8,readValueFromPointer:Qt,Bb(b){At(b)}})},z:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=nt(f),l===2)var b=Xn,C=sn,k=un,V=F=>u()[F>>>1>>>0];else l===4&&(b=gr,C=Qn,k=pe,V=F=>c()[F>>>2>>>0]);Je(n,{name:f,fromWireType:F=>{for(var re=c()[F>>>2>>>0],J,ce=F+4,Re=0;Re<=re;++Re){var ze=F+4+Re*l;(Re==re||V(ze)==0)&&(ce=b(ce,ze-ce),J===void 0?J=ce:(J+=String.fromCharCode(0),J+=ce),ce=ze+l)}return At(F),J},toWireType:(F,re)=>{if(typeof re!="string")throw new wt(`Cannot pass non-string to C++ string type ${f}`);var J=k(re),ce=mn(4+J+l);return c()[ce>>>2>>>0]=J/l,C(re,ce+4,J+l),F!==null&&F.push(At,ce),ce},argPackAdvance:8,readValueFromPointer:Qt,Bb(F){At(F)}})},P:function(n,l){n>>>=0,l=nt(l>>>0),Je(n,{Vb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(n,l){n>>>=0,n==l>>>0?setTimeout(rt):O?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=ge.ub[n])&&n.postMessage({cmd:"checkMailbox"})},$:function(n,l,f,b,C){l>>>=0,f>>>=0,b/=2,yr.length=b,C=C>>>0>>>3;for(var k=0;k<b;k++)yr[k]=Be[C+2*k]?Be[C+2*k+1]:h()[C+2*k+1>>>0];return n=l?Ir[l]:el[n],ge.Sb=f,f=n(...yr),ge.Sb=0,f},ha:Nt,sa:function(n){P&&ge.ub[n>>>0].ref()},w:function(n,l,f){return l>>>=0,f>>>=0,n=Qe(n>>>0),l=br(l,"emval::as"),Ur(l,f,n)},y:function(n){return n>>>=0,te(()=>(n=Qe(n),n.then(ot)))},o:function(n,l,f,b){return f>>>=0,b>>>=0,n=X[n>>>0],l=Qe(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=X[n>>>0],l=Qe(l>>>0),f=Ee(f),n(l,l[f],b,C)},c:hr,C:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),n==l},n:function(n){return n>>>=0,n===0?ot(Oe()):(n=Ee(n),ot(Oe()[n]))},j:function(n,l,f){l=be(n,l>>>0);var b=l.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,k=0,V=[];f===0&&V.push("obj");for(var F=["retType"],re=[b],J=0;J<n;++J)V.push("arg"+J),F.push("argType"+J),re.push(l[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${k?"+"+k:""});\n`,k+=l[J].argPackAdvance;return C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,b.Vb||(F.push("emval_returnValue"),re.push(Ur),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(C+`};\n`),n=zt(F)(...re),f=`methodCaller<(${l.map(ce=>ce.name).join(", ")}) => ${b.name}>`,D(Ie(f,n))},s:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),ot(n[l])},d:function(n){n>>>=0,9<n&&(lt[n+1]+=1)},v:function(){return ot([])},m:function(n){n=Qe(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(Ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Qe(n);l.length;){var f=l.pop();l.pop()(f)}hr(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Qe(n>>>0),l=Qe(l),f=Qe(f),n[l]=f},e:function(n,l){return l>>>=0,n=br(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},ca:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},da:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(Mt(n.getFullYear())?Qo:Jo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ea:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),C=new Date(l.getFullYear(),6,1).getTimezoneOffset(),k=new Date(l.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=k&&V==b):0<f!=(V==b)&&(C=Math.max(k,C),l.setTime(l.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(Mt(l.getFullYear())?Qo:Jo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),BigInt(isNaN(n)?-1:n/1e3)},aa:ei,ba:ti,R:function(n,l,f,b){n>>>=0,l>>>=0,f>>>=0,b>>>=0;var C=new Date().getFullYear(),k=new Date(C,0,1),V=new Date(C,6,1);C=k.getTimezoneOffset();var F=V.getTimezoneOffset(),re=Math.max(C,F);c()[n>>>2>>>0]=60*re,a()[l>>>2>>>0]=+(C!=F),n=J=>J.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],k=n(k),V=n(V),F<C?(Bt(k,f,17),Bt(V,b,17)):(Bt(k,b,17),Bt(V,f,17))},q:()=>{Kt("")},f:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},M:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},H:()=>{},L:()=>Date.now(),ra:()=>{throw bt+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(Ri(),wr(Oi)).cpus().length:navigator.hardwareConcurrency,Q:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-ae.buffer.byteLength+65535)/65536;try{ae.grow(C),Ne();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ja:oi,la:ii,Z:Xe,B:ai,J:si,ga:ui,I:di,a:ae||d.wasmMemory,ka:pi,r:function(n,l,f,b){return pi(n>>>0,l>>>0,f>>>0,b>>>0)}},oe=function(){function n(f,b){return oe=f.exports,oe=dn(),oe=rl(),ge.Qb.push(oe.cb),Rt.unshift(oe.va),Ae=b,xr(),oe}var l={a:tl};if(Vt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return Ar(l,function(f){n(f.instance,f.module)}).catch(w),{}}(),fi=n=>(fi=oe.wa)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=oe.xa)(),d._OrtInit=(n,l)=>(d._OrtInit=oe.ya)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=oe.za)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,C,k,V,F,re,J)=>(d._OrtCreateSessionOptions=oe.Aa)(n,l,f,b,C,k,V,F,re,J),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=oe.Ba)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=oe.Ca)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=oe.Da)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=oe.Ea)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=oe.Fa)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=oe.Ga)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=oe.Ha)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=oe.Ia)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=oe.Ja)(n,l),d._OrtFree=n=>(d._OrtFree=oe.Ka)(n),d._OrtCreateTensor=(n,l,f,b,C,k)=>(d._OrtCreateTensor=oe.La)(n,l,f,b,C,k),d._OrtGetTensorData=(n,l,f,b,C)=>(d._OrtGetTensorData=oe.Ma)(n,l,f,b,C),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=oe.Na)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=oe.Oa)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=oe.Pa)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=oe.Qa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=oe.Ra)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=oe.Sa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=oe.Ta)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=oe.Ua)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=oe.Va)(n),d._OrtRunWithBinding=(n,l,f,b,C)=>(d._OrtRunWithBinding=oe.Wa)(n,l,f,b,C),d._OrtRun=(n,l,f,b,C,k,V,F)=>(d._OrtRun=oe.Xa)(n,l,f,b,C,k,V,F),d._OrtEndProfiling=n=>(d._OrtEndProfiling=oe.Ya)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=oe.Za)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=oe._a)(n);var pn=d._pthread_self=()=>(pn=d._pthread_self=oe.$a)(),mn=d._malloc=n=>(mn=d._malloc=oe.ab)(n),At=d._free=n=>(At=d._free=oe.bb)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=oe.cb)();var hi=d.__emscripten_thread_init=(n,l,f,b,C,k)=>(hi=d.__emscripten_thread_init=oe.eb)(n,l,f,b,C,k);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=oe.fb)();var gi=(n,l,f,b,C)=>(gi=oe.gb)(n,l,f,b,C),ro=n=>(ro=oe.hb)(n),no=d.__emscripten_thread_exit=n=>(no=d.__emscripten_thread_exit=oe.ib)(n),yi=()=>(yi=oe.jb)(),bi=(n,l)=>(bi=oe.kb)(n,l),fn=n=>(fn=oe.lb)(n),oo=n=>(oo=oe.mb)(n),io=()=>(io=oe.nb)(),wi=d.dynCall_ii=(n,l)=>(wi=d.dynCall_ii=oe.pb)(n,l),vi=n=>(vi=oe.qb)(n),$i=()=>($i=oe.rb)(),_i=n=>(_i=oe.sb)(n),Si=()=>(Si=oe.tb)();d.___start_em_js=839500,d.___stop_em_js=839661;function rl(){var n=oe;n=Object.assign({},n);var l=b=>C=>b(C)>>>0,f=b=>()=>b()>>>0;return n.wa=l(n.wa),n.$a=f(n.$a),n.ab=l(n.ab),n.emscripten_main_runtime_thread_id=f(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.nb=f(n.nb),n}d.wasmMemory=ae,d.stackSave=()=>io(),d.stackRestore=n=>fn(n),d.stackAlloc=n=>oo(n),d.keepRuntimeAlive=()=>0<bt,d.UTF8ToString=He,d.stringToUTF8=Bt,d.lengthBytesUTF8=gt,d.ExitStatus=st,d.PThread=ge;var hn;jt=function n(){hn||xi(),hn||(jt=n)};function xi(){if(!(0<Vt))if(O)y(d),O||Yt(Rt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)mt.unshift(d.preRun.shift());Yt(mt),0<Vt||hn||(hn=!0,d.calledRun=!0,me||(O||Yt(Rt),y(d),O||Yt(qt)))}}return xi(),_}})();typeof Di=="object"&&typeof mo=="object"?mo.exports=Bi:typeof define=="function"&&define.amd&&define([],()=>Bi)});var Mi=Wr((gm,cl)=>{cl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\\n\'});var go,Gt,tr,bn,Gr,Hi,yo,ye=Y(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Gt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=Y(()=>{"use strict"});var Fi=Y(()=>{"use strict";wn()});var qi,ji=Y(()=>{"use strict";qi="1.18.0"});var Ki,pt,bo=Y(()=>{"use strict";ji();Ki="warning",pt={wasm:{},webgl:{},webgpu:{},versions:{common:qi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ki=e}},get logLevel(){return Ki}};Object.defineProperty(pt,"logLevel",{enumerable:!0})});var vr,Yi=Y(()=>{"use strict";bo();vr=pt});var Zi=Y(()=>{"use strict"});var Xi=Y(()=>{"use strict";vn()});var Ji=Y(()=>{"use strict"});var ea=Y(()=>{"use strict";vn()});var vn=Y(()=>{"use strict";Zi();Xi();Ji();ea()});var $n=Y(()=>{"use strict";vn()});var wo,ta,rr,Ht,vo=Y(()=>{"use strict";bo();wo=(e,t)=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},ta=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},rr=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("BEGIN",e)},Ht=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("END",e)}});var ra=Y(()=>{"use strict";wn();$n();vo()});var na=Y(()=>{"use strict";ra()});var oa=Y(()=>{"use strict"});var ia=Y(()=>{"use strict"});var aa=Y(()=>{"use strict"});var sa=Y(()=>{"use strict"});var ua=Y(()=>{"use strict";wn();$n()});var da=Y(()=>{"use strict";ua()});var $r=Y(()=>{"use strict";Fi();Yi();na();$n();oa();ia();vo();aa();sa();da()});var _l,Sl,la,ca,pa,xl,Ve,Lt=Y(()=>{"use strict";ye();_l=["V","I","W","E","F"],Sl=(e,t)=>{console.log(`[${_l[e]},${new Date().toISOString()}]${t}`)},pa=(e,t)=>{la=e,ca=t},xl=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&Sl(r,typeof t=="function"?t():t)},Ve=(...e)=>{ca&&xl(...e)}});var ma,fa=Y(()=>{"use strict";ye();ma=(e,t)=>new(bn(t))(e)});var _n=Y(()=>{"use strict"});var ha,$o,_o,Cl,Al,ga,xo,So,ba,wa=Y(()=>{"use strict";Lt();_n();ha=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),$o=[],_o=e=>Math.ceil(e/16)*16,Cl=e=>{for(let t=0;t<$o.length;t++){let r=$o[t];if(e<=r)return r}return Math.ceil(e/16)*16},Al=1,ga=()=>Al++,xo=async(e,t,r,o)=>{let i=_o(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},So=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[r]of ha)$o.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_o(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_o(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ga();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cl(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let h=(u?this.freeBuffers:this.freeUniformBuffers).get(o);h?h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r}):i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:ga(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=ha.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=this.freeUniformBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ba=(...e)=>new So(...e)});var Co,ve,Ze=Y(()=>{"use strict";Co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ve=e=>new Co(e)});var Ao,It,M,nr,Sn,xn,Cn,Se=Y(()=>{"use strict";Ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},It=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=Ao.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],d=u-p<0?1:r[u-p];if(h!==d&&h>1&&d>1)return;let y=Math.max(h,d);if(h&&d)c[a-p]=Math.max(h,d);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},nr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!It.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var or,To,De,et,Z,Me,$t,ir,_t,fe,Eo,U,j,An,Io,va,_r,_e=Y(()=>{"use strict";ye();Se();or=64,To=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},De=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[0]},et=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},Me=e=>e%4===0?4:e%2===0?2:1,$t=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ir=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,_t=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Eo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=To(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:d,storage:y,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",A=`${S}${e}_shape`,I=`${S}${e}_strides`,x="";for(let G=0;G<a-1;G++)x+=`\n    let dim${G} = current / ${fe(I,G,a)};\n    let rest${G} = current % ${fe(I,G,a)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,P=G=>(v.offsetToIndices=!0,a<2?G:`o2i_${e}(${G})`),O=[];if(a>=2)for(let G=a-1;G>=0;G--)O.push(`${fe(I,G,a)} * (indices[${G}])`);let R=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${O.join("+")};\n  }`,L=G=>(v.indicesToOffset=!0,a<2?G:`i2o_${e}(${G})`),N=(...G)=>a===0?"0u":`${w.indices}(${G.map(_).join(",")})`,K=(G,ne)=>a<2?`${G}`:`${fe(G,ne,a)}`,Q=(G,ne,xe)=>a<2?`${G}=${xe};`:`${fe(G,ne,a)}=${xe};`,he={},W=(G,ne)=>{v.broadcastedIndicesToOffset=!0;let xe=`${ne.name}broadcastedIndicesTo${e}Offset`;if(xe in he)return`${xe}(${G})`;let Ke=[];for(let Be=a-1;Be>=0;Be--){let Ge=ne.indicesGet("outputIndices",Be+ne.rank-a);Ke.push(`${K(I,Be)} * (${Ge} % ${K(A,Be)})`)}return he[xe]=`fn ${xe}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${Ke.length>0?Ke.join("+"):"0u"};\n           }`,`${xe}(${G})`},se=(G,ne)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ne};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ne}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ce=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),We=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ee=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${G}) -> ${d} {\n    return get_${e}ByIndices(${N(ne)});\n  }`})(),ae=(...G)=>{if(G.length!==a)throw new Error(`indices length must be ${a}`);let ne=G.map(_).join(",");return a===0?Ce("0u"):a===1?Ce(ne[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=G=>a<2?Ce(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),me=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${se(`i2o_${e}(indices)`,"value")}\n  }`,ie=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${G}, value: ${d}) {\n    set_${e}ByIndices(${N(ne)}, value);\n  }`})();return{impl:()=>{let G=[],ne=!1;return v.offsetToIndices&&(G.push(E),ne=!0),v.indicesToOffset&&(G.push(R),ne=!0),v.broadcastedIndicesToOffset&&(Object.values(he).forEach(xe=>G.push(xe)),ne=!0),v.set&&(G.push(ie),ne=!0),v.setByIndices&&(G.push(me),ne=!0),v.get&&(G.push(ee),ne=!0),v.getByIndices&&(G.push(We),ne=!0),!u&&ne&&G.unshift(`const ${A} = ${w.indices}(${r.join(",")});`,`const ${I} = ${w.indices}(${M.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:P,indicesToOffset:L,broadcastedIndicesToOffset:W,indices:N,indicesGet:K,indicesSet:Q,set:(...G)=>{if(G.length!==a+1)throw new Error(`indices length must be ${a}`);let ne=G[a];if(typeof ne!="string")throw new Error("value must be string");let xe=G.slice(0,a).map(_).join(",");return a===0?se("0u",ne):a===1?se(xe[0],ne):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${xe}, ${ne})`)},setByOffset:se,setByIndices:(G,ne)=>a<2?se(G,ne):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ne});`),get:ae,getByOffset:Ce,getByIndices:Ae,usage:o,name:e,strides:I,shape:A,rank:a}},U=(e,t,r,o=1)=>Eo(e,t,r,"input",o),j=(e,t,r,o=1)=>Eo(e,t,r,"output",o),An=(e,t,r,o=1)=>Eo(e,t,r,"internal",o),Io=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=or){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},va=(e,t)=>new Io(e,t),_r=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var Il,$a,Tl,El,yt,_a,Sa,Sr=Y(()=>{"use strict";ye();Se();Ze();_e();Il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$a=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Tl=(e,t)=>M.sortBasedOnPerm(e,$a(e.length,t)),El=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=$a(o,t),u=Tl(e.dims,i),a=j("output",r,u.length),c=U("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${El(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Z(h[0].dims,u)]}},getShaderSource:p}},_a=(e,t)=>{Il(e.inputs),e.compute(yt(e.inputs[0],t.perm))},Sa=e=>ve({perm:e.perm})});var Pl,kl,Ol,Rl,Bl,Dl,zl,Ml,Ul,Vl,Tt,xa,Ca,Aa,Ia,Ta,Ea,Pa,ka,Oa,Ra,Ba=Y(()=>{"use strict";ye();Se();_e();In();Sr();Pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Rl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Bl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Dl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},zl=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},Ml=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ul=(e,t)=>{let r=[];if(!Ml(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Vl=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),d=U("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ol[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Pl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${kl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Rl[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Tt=(e,t,r,o)=>{let i=e.inputs.length===1?r:Po(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Ul(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Bl(c.length,p.dims.length));let[d,y]=Dl(p.dims,c),w=d;i.keepDims&&(w=zl(d,a)),e.compute(Vl(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},xa=(e,t)=>{Tt(e,"ReduceMeanShared",t,"mean")},Ca=(e,t)=>{Tt(e,"ReduceL1Shared",t,"l1")},Aa=(e,t)=>{Tt(e,"ReduceL2Shared",t,"l2")},Ia=(e,t)=>{Tt(e,"ReduceLogSumExpShared",t,"logSumExp")},Ta=(e,t)=>{Tt(e,"ReduceMaxShared",t,"max")},Ea=(e,t)=>{Tt(e,"ReduceMinShared",t,"min")},Pa=(e,t)=>{Tt(e,"ReduceProdShared",t,"prod")},ka=(e,t)=>{Tt(e,"ReduceSumShared",t,"sum")},Oa=(e,t)=>{Tt(e,"ReduceSumSquareShared",t,"sumSquare")},Ra=(e,t)=>{Tt(e,"ReduceLogSumShared",t,"logSum")}});var Et,Wl,Tn,Po,Pt,Nl,Gl,Hl,Ll,Fl,ql,jl,Kl,Yl,Zl,kt,Da,za,Ma,Ua,Va,Wa,Na,Ga,Ha,La,In=Y(()=>{"use strict";ye();Se();Ze();_e();Ba();Et=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Wl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,d=h.length,y=M.normalizeAxes(i,d),w=!c&&y.length===0;h.forEach((A,I)=>{w||y.indexOf(I)>=0?a&&p.push(1):p.push(A)});let _=p.length,v=M.size(p);return{name:e,shaderCache:t,getShaderSource:A=>{let I=[],x=U("_A",r[0].dataType,d),E=j("output",u,_),P=o(x,E,y),O=P[2];for(let R=0,L=0;R<d;R++)w||y.indexOf(R)>=0?(a&&L++,O=`for(var j${R}: u32 = 0; j${R} < ${h[R]}; j${R}++) {\n                  ${P[2].includes("last_index")?`let last_index = j${R};`:""}\n                  ${x.indicesSet("input_indices",R,`j${R}`)}\n                  ${O}\n                }`):(I.push(`${x.indicesSet("input_indices",R,E.indicesGet("output_indices",L))};`),L++);return`\n\n        ${A.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${I.join(`\n`)}\n          ${P[0]}       // init ops for reduce max/min\n          ${P[1]}\n          ${O}\n          ${P[3]}\n          ${P.length===4?E.setByOffset("global_idx","value"):P.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...Z(h,p)]})}},Po=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ve({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Pt=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Po(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Wl:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Nl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Gl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Hl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ll=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Fl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ql=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},jl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Kl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Yl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Zl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},kt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Da=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):xa(e,t)},za=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Ca(e,t)},Ma=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Aa(e,t)},Ua=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):Ia(e,t)},Va=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):Ta(e,t)},Wa=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ea(e,t)},Na=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Pa(e,t)},Ga=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yl(e,t):ka(e,t)},Ha=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zl(e,t):Oa(e,t)},La=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ra(e,t)}});var Fa,qa,ja,ko,Ka=Y(()=>{"use strict";ye();Ze();In();Fa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},qa=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ja=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ko=e=>ve(e)});var Xl,Ql,Jl,En,Ya,Za,Oo=Y(()=>{"use strict";ye();Se();Ze();_e();Xl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},Ql=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Jl=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},En=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],d=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=U(`input${S}`,o,h[S]),p.push("rank"),d.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)d.push(...Z(e[S].dims));d.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),v=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)S.registerUniform(`sizeInConcatAxis${A}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${Ql(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Jl(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:v}},Ya=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);Xl(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(En(a,i,u,r[0].dataType),{inputs:a})},Za=e=>ve({axis:e.axis})});var ec,tc,rc,nc,Pn,oc,Xa,Ro=Y(()=>{"use strict";ye();_n();_e();Oo();ec=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let A=v+S,I=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:A,maxSequenceLength:I,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},tc=(e,t,r,o)=>{let i=Me(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=De(t.dataType,i),d=et(1,i),y=w=>{let _=j("x",t.dataType,t.dims,i),S=[{name:"d_inv",type:et(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${w.registerUniforms(S).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${_.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${_.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})}},rc=(e,t,r,o,i,u,a)=>{let c=a+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],h=u.scale===0?1/Math.sqrt(i.headSize):u.scale,d=Me(i.headSize),y=i.headSize/d,w=12,_={x:Math.ceil(c/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:c},{type:12,data:i.numHeads},{type:1,data:h}],S=o?["type","type","type"]:["type","type"],A=I=>{let x=U("q",t.dataType,t.dims,d),E=U("key",r.dataType,r.dims,d),P=[x,E];o&&P.push(U("relative_position_bias",o.dataType,o.dims));let O=j("output",t.dataType,p),R=et(1,d),L=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`\n  const TILE_SIZE = ${w}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${w*w}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${w*w}>;\n  ${I.registerUniforms(L).declareVariables(...P,O)}\n  ${I.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${R}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${R}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${O.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:_,programUniforms:v}),getShaderSource:A}},nc=(e,t,r,o,i)=>{let u=i+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,p={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:u},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:w=>{let _=U("probs",t.dataType,t.dims),v=U("v",r.dataType,r.dims),S=j("output",t.dataType,a),A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${c}u;\n  var<workgroup> tileQ: array<${_.type.value}, ${c*c}>;\n  var<workgroup> tileK: array<${_.type.value}, ${c*c}>;\n  ${w.registerUniforms(A).declareVariables(_,v,S)}\n  ${w.mainStart([c,c,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${_.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Pn=(e,t,r,o,i,u,a,c,p,h,d)=>{let y=e.outputCount>1,w=e.outputCount>2,_=y&&w?h.pastSequenceLength:0,v=_+h.kvSequenceLength,S=[h.batchSize,h.numHeads,v,h.headSize],A=a?[a,r]:[r],I=y?e.compute(En(A,2,S,r.dataType),{inputs:A,outputs:[1]})[0]:r,x=[h.batchSize,h.numHeads,v,h.headSize],E=c?[c,o]:[o],P=w?e.compute(En(E,2,x,o.dataType),{inputs:E,outputs:[2]})[0]:o,O=[t,I];p&&O.push(p);let R=e.compute(rc(e,t,I,p,h,d,_),{inputs:O,outputs:[-1]})[0];e.compute(tc(e,R,h.batchSize*h.numHeads*h.sequenceLength,v),{inputs:[R],outputs:[]});let L=[R,P];e.compute(nc(e,R,P,h,_),{inputs:L,outputs:[0]})},oc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),v=j("output_v",p[0].dataType,r),S=U("input",p[0].dataType,p[0].dims),A=U("weight",p[1].dataType,p[1].dims),I=U("bias",p[2].dataType,p[2].dims),x=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(S,A,I,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:d},{inputs:p,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=ec(e.inputs,t),[o,i,u]=oc(e,r);return Pn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ic,ac,sc,Qa,Ja=Y(()=>{"use strict";$r();ye();Se();Ze();_e();ic=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},ac=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Me(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,d=h?u.length:u,y=U("x",e[0].dataType,e[0].dims,a),w=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),v=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),A=j("y",e[0].dataType,d,a),I=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${A.indicesSet("outputIndices","0","0")}\n            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let P=1;P<w.rank;P++)E+=`cIndices[${P}] = outputIndices[${P}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,S,A)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${A.offsetToIndices(`global_idx * ${a}`)};\n    ${I()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${A.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},sc=e=>ve(e),Qa=(e,t)=>{let{inputs:r,outputCount:o}=e,i=sc({...t,outputCount:o});if(vr.webgpu.validateInputContent&&ic(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ac(r,i))}});var uc,dc,es,ts=Y(()=>{"use strict";Se();_e();uc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,p)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},es=e=>{uc(e.inputs),e.compute(dc(e.inputs))}});var lc,ke,rs,ns,os,is,as,ss,us,ds,ls,cc,cs,ps,ms,fs,kn,hs,On,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,ks,Os,Rs,Bo,Do,Bs,Ds,zs,Rn=Y(()=>{"use strict";ye();Se();Ze();_e();lc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=U("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>lc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),rs=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},ns=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},os=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},is=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},as=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ss=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},ds=e=>ve(e),ls=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},cc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return ve({min:t,max:r})},cs=(e,t)=>{let r=e.inputs.length===1?t:cc(e.inputs),o=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ps=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ms=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},fs=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},kn=e=>ve(e),hs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,gs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},ys=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},bs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},ws=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},vs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},$s=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},_s=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},Ss=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},xs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Cs=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},As=e=>ve(e),Is=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ts=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Es=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},Ps=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},ks=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Rs=e=>{e.compute(ke(e.inputs[0],"Tanh",Os))},Bo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Os("v")};\n}\n`,Do=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Bs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",Do,Bo(t),void 0,e.inputs[0].dataType))},Ds=(e,t)=>{let r=et(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var pc,mc,Us,Vs=Y(()=>{"use strict";Se();_e();Rn();pc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=De(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${On(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Us=e=>{pc(e.inputs),e.compute(mc(e.inputs))}});var fc,hc,Ot,Ws,Ns,Gs,Hs,Ls,Fs,qs,js,Ks,Ys,Zs=Y(()=>{"use strict";ye();Se();_e();fc=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w,_;typeof c=="string"?w=_=(x,E)=>`${c}((${x}),(${E}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",d,o.length,4),S=U("aData",p,t.length,4),A=U("bData",h,r.length,4),I;if(i)if(u){let x=M.size(t)===1,E=M.size(r)===1,P=t.length>0&&t[t.length-1]%4===0,O=r.length>0&&r[r.length-1]%4===0;x||E?I=v.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):I=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||P?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||O?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else I=v.setByOffset("global_idx",_(S.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(E,P,O="")=>{let R=`aData[indexA${P}][componentA${P}]`,L=`bData[indexB${P}][componentB${P}]`;return`\n            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offsetA${P} = ${S.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let indexA${P} = offsetA${P} / 4u;\n            let indexB${P} = offsetB${P} / 4u;\n            let componentA${P} = offsetA${P} % 4u;\n            let componentB${P} = offsetB${P} % 4u;\n            ${E}[${P}] = ${O}(${w(R,L)});\n          `};d===9?I=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:I=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,A,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${I}\n      }`},hc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),d=!1,y=!1,w=[c];if(c){let _=It.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let v=M.size(r.dims)===1,S=M.size(o.dims)===1,A=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,I=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(S),w.push(A),w.push(I);let x=1;for(let E=1;E<p.length;E++){let P=r.dims[r.dims.length-E]??1,O=o.dims[o.dims.length-E]??1;if(P===O)x*=P;else break}x%4===0?(y=!0,d=!0):(v||S||A||I)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>fc(_,r.dims,o.dims,p,d,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},Ot=(e,t,r,o,i,u)=>{e.compute(hc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ws=e=>{Ot(e,"Add",(t,r)=>`${t}+${r}`)},Ns=e=>{Ot(e,"Div",(t,r)=>`${t}/${r}`)},Gs=e=>{Ot(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Hs=e=>{Ot(e,"Mul",(t,r)=>`${t}*${r}`)},Ls=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ot(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Fs=e=>{Ot(e,"Sub",(t,r)=>`${t}-${r}`)},qs=e=>{Ot(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},js=e=>{Ot(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ks=e=>{Ot(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ys=e=>{Ot(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var St,xt,Ct,Bn,Ft=Y(()=>{"use strict";ye();Se();St=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},xt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ct=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var tt,Dn,zn=Y(()=>{"use strict";tt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Dn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,zo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var yc,bc,Hr,Xs,wc,Lr,vc,Un,Fr=Y(()=>{"use strict";ye();Se();_e();Ft();zn();yc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,bc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],d=i?p:u,y=i?u:p,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${bc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],S=u/t[1],A=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${A}\n  }\n`},vc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,d,y,w]=o,_=_r(a,p),v=_r(c,p),S=De(o[0].type.tensor),A=()=>{let E=d.rank,P=h.rank,O=`var aIndices: ${d.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\naIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return _.forEach(R=>{O+=`\naIndices[${R}] = 0;`}),O+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,O},I=()=>{let E=y.rank,P=h.rank,O=`var bIndices: ${y.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\nbIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return v.forEach(R=>{O+=`\nbIndices[${R}] = 0;`}),O+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,O};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${A()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${I()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tt(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${tt(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Un=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],A=[8,8,1],I=[Math.ceil(_/A[0]/S[0]),Math.ceil(y/A[1]/S[1]),Math.ceil(d/A[2]/S[2])],x=v?4:1,E=[...c,y,w/x],P=E.length,O=[...p,w,_/x],R=O.length,L=[d,y,_/x],N=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];xt(t,N),N.push(...Z(h,E,O));let K=["rank","rank"],Q=e.length>2;Q&&(N.push(...Z(e[2].dims)),K.push("rank")),N.push(...Z(L));let he=W=>{let se=h.length,Ce=An("batchDims",e[0].dataType,se,1),We=De(e[0].dataType),ee=U("a",e[0].dataType,P,x),ae=U("b",e[1].dataType,R,x),Ae=j("result",e[0].dataType,L.length,x),me=[ee,ae];if(Q){let G=i?x:1;me.push(U("bias",e[2].dataType,e[2].dims.length,G))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ct(t,ie);let ue=De(Ae.type.tensor),le=St(t,Ae.type.value,ue),qe=vc(x,Q,le,[Ce,ee,ae,Ae],[c,p,h],i);return`\n  ${W.registerUniforms(ie).registerInternalVariables(Ce).declareVariables(...me,Ae)}\n  ${qe}\n  ${v?Hr(S,A,We,Ce):Lr(S,A,We,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${v};${i}`,inputDependencies:K},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:N}),getShaderSource:he}}});var $c,Qs,Js=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();$c=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},y=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",I=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${I} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${I} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${I} % inChannels;\n    var resData = ${tt(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`,P=`${y(c)}`,O=tt(p,h),R=e?tt(a,h):tt(c,h),L=e?tt(c,h):tt(a,h),N=St(u,O,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {\n      ${e?E:P}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${L} {\n      ${e?P:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${O}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Dn(i)}\n      ${N}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Qs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let P=v?p&&h%4!==0?3:4:1,O=I[1]*x[1],R=I[0]*x[0],L=Math.max(I[0]*P,I[1]),N=o%O===0,K=i%R===0,Q=u%L===0,he=v?[P,4,4]:[1,1,1],W=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];xt(t,W),W.push(...Z(e[0].dims,e[1].dims));let se=["rank","rank"];a&&(W.push(...Z(e[2].dims)),se.push("rank")),W.push(...Z(r));let Ce=We=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ct(t,ee);let ae=v?4:1,Ae=De(e[0].dataType),me=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${v?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ie=U("x",e[0].dataType,e[0].dims.length,P===3?1:P),ue=U("w",e[1].dataType,e[1].dims.length,ae),le=[ie,ue],qe=j("result",e[0].dataType,r.length,ae);if(a){let G=U("bias",e[2].dataType,e[2].dims.length,ae);le.push(G),me+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${We.registerUniforms(ee).declareVariables(...le,qe)}\n        ${me}\n        ${$c(p,N,K,Q,a,t,he[0],he[1],he[2],Ae)}\n        ${v?Hr(x,I,Ae,void 0,!p,L):Lr(x,I,Ae,void 0,!p,L,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${P};${v};${N};${K};${Q};${O};${R};${L}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:Ce}}});var Mo,eu,tu=Y(()=>{"use strict";ye();Se();_e();Uo();Ft();Mo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Vn(u,a,t.dilations,t.pads,t.strides,p),d=M.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];xt(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=v=>{let S=j("output",e[0].dataType,h.length),A=De(S.type.tensor),I=St(t,S.type.value,A),x=U("x",e[0].dataType,u.length),E=U("w",e[1].dataType,a.length),P=[x,E];o&&P.push(U("b",e[2].dataType,e[2].dims.length));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ct(t,O),`\n  ${v.registerUniforms(O).declareVariables(...P,S)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${I}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}},eu=(e,t,r)=>{let o=e.length>2,i=Me(r[3]),u=Me(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],d=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];xt(t,d),d.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let v=j("output",e[0].dataType,h.length,i),S=De(v.type.tensor),A=St(t,v.type.value,S),I=U("x",e[0].dataType,c.length,i),x=U("w",e[1].dataType,p.length,i),E=[I,x];o&&E.push(U("b",e[2].dataType,e[2].dims,i));let P=o?"value += b[output_channel];":"",O=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ct(t,O),`\n  ${_.registerUniforms(O).declareVariables(...E,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${I.type.value}, ${y}>;\n    var values: array<${v.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${I.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${I.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${P}\n      ${A}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:w}}});var Vo,_c,ru,Wo=Y(()=>{"use strict";ye();Se();Fr();_e();Ft();Vo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],d=Me(p),y=Me(h),w=Me(c),_=M.size(r)/d/w,v=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),I=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];xt(t,x),x.push(...Z(S,u,a)),v&&x.push(...Z(e[2].dims)),x.push(...Z(I));let E=P=>{let O=An("batch_dims",e[0].dataType,S.length),R=U("a",e[0].dataType,u.length,y),L=U("b",e[1].dataType,a.length,d),N=j("output",e[0].dataType,I.length,d),K=De(N.type.tensor),Q=St(t,N.type.value,K),he=[R,L],W="";if(v){let ie=i?d:1;he.push(U("bias",e[2].dataType,e[2].dims.length,ie)),W=`${i?`value += bias[col / ${ie}];`:`value += ${N.type.value}(bias[row + i]);`}`}let se=u.slice(0,-2),Ce=a.slice(0,-2),We=_r(se,S),ee=_r(Ce,S),ae=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ct(t,ae);let Ae=(ie,ue)=>{let le=ie.rank,qe=ie.name;if(le===2)return`var ${qe}_indices = ${ie.type.indices}(0u, 0u);`;let G=O.rank,ne=`var ${qe}_indices: ${ie.type.indices};`;for(let xe=le-2-1,Ke=G-1;xe>=0;xe--,Ke--)ne+=`\n${qe}_indices[${xe}] = ${G>1?`batch_indices[${Ke}]`:"batch_indices"};`;return ue.forEach(xe=>{ne+=`\n${qe}_indices[${xe}] = 0;`}),ne+=`${qe}_indices[${le-2}] = 0u;\n                     ${qe}_indices[${le-1}] = 0u;`,ne},me=()=>{let ie=`var a_data: ${R.type.value};`;for(let ue=0;ue<y;ue++)ie+=`\n              let b_data${ue} = b[(b_offset + (k + ${ue}) * uniforms.N + col) / ${d}];`;for(let ue=0;ue<w;ue++){ie+=`a_data = a[(a_offset + (row + ${ue}) * uniforms.K + k) / ${y}];`;for(let le=0;le<y;le++)ie+=`\n            values[${ue}] = fma(${L.type.value}(a_data${y===1?"":`[${le}]`}), b_data${le}, values[${ue}]);\n`}return ie};return`\n  ${P.registerUniforms(ae).registerInternalVariables(O).declareVariables(...he,N)}\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}\n    ${Ae(R,We)}\n    let a_offset = ${R.indicesToOffset("a_indices")};\n    ${Ae(L,ee)}\n    let b_offset = ${L.indicesToOffset("b_indices")};\n    var values: array<${N.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${me()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${W}\n      ${Q}\n      let cur_indices = ${N.type.indices}(batch, row + i, col);\n      let offset = ${N.indicesToOffset("cur_indices")};\n      ${N.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:E}},_c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ru=e=>{_c(e.inputs);let t=It.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Vo(e.inputs,{activation:""},t)):e.compute(Un(e.inputs,{activation:""},t))}});var Vn,No,Sc,nu,Go,xc,Cc,Ho,Uo=Y(()=>{"use strict";Se();Js();Fr();tu();Ft();Wo();Sr();Vn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map((v,S)=>v+(v-1)*(r[S]-1)),_=c.map((v,S)=>v+o[S]+o[S+p]).map((v,S)=>Math.floor((v-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},No=[2,3,1,0],Sc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},nu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();nr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Go=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},xc=(e,t,r)=>{let o=nu(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let L=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),N=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=N);let K=[t[0],N];t.length===3&&K.push(t[2]),e.compute(eu(K,o,L),{inputs:K})}else e.compute(Mo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],S=i&&h===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let R=y[0],L,N,K,Q=[];if(i){let se=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se),S){let Ce=a*c*p;L=t[0].reshape([1,R,Ce]),N=se.reshape([1,Ce,v]),K=[1,R,v]}else L=t[0].reshape([R,a*c,p]),N=se.reshape([1,p,v]),K=[R,w*_,v];Q.push(L),Q.push(N)}else L=t[0].reshape([R,p,a*c]),N=t[1].reshape([1,v,p]),K=[R,v,w*_],Q.push(N),Q.push(L);u&&Q.push(t[2]);let he=K[2],W=Q[0].dims[Q[0].dims.length-1];he<8&&W<8?e.compute(Vo(Q,o,y,K,i),{inputs:Q}):e.compute(Un(Q,o,y,K,i),{inputs:Q});return}let A=!0,I=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let x=[t[0],I];u&&x.push(t[2]);let E=i?w*_:v,P=i?v:w*_,O=h*d*p;e.compute(Qs(x,o,y,E,P,O,u,A),{inputs:x})},Cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=nu({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Mo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Ho=(e,t)=>{Sc(e.inputs,t),e.inputs[0].dims.length===3?Cc(e,t):xc(e,e.inputs,t)}});var Ac,ou,iu=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();Ac=(e,t=!1,r,o,i=4)=>{let u=I=>{switch(I){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=St(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Dn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},ou=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let P=v?4:1,O=Math.max(I[0]*P,I[1]),R=v?4:1,L=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],N=[L[0]+(t.dilations[0]<=1?0:(L[0]-1)*(t.dilations[0]-1)),L[1]+(t.dilations[1]<=1?0:(L[1]-1)*(t.dilations[1]-1))],K=[N[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),N[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Q=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:L},{type:6,data:K}];xt(t,Q),Q.push(...Z(e[0].dims,e[1].dims));let he=["rank","rank"];a&&(Q.push(...Z(e[2].dims)),he.push("rank")),Q.push(...Z(r));let W=se=>{let Ce=U("x",e[0].dataType,e[0].dims.length,R),We=U("w",e[1].dataType,e[1].dims.length,1),ee=j("result",e[0].dataType,r.length,R),ae=[Ce,We],Ae="";if(a){let ue=U("bias",e[2].dataType,e[2].dims.length,R);ae.push(ue),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ue.type.value} {\n            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n          }`}let me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:L.length},{name:"pads",type:"i32",length:K.length}];Ct(t,me);let ie=De(e[0].dataType,1);if(ie!=="f16"&&ie!=="f32")throw new Error(`elemType ${ie} is not supported.`);return`\n        ${Mn("uniforms.result_strides")}\n        ${se.registerUniforms(me).declareVariables(...ae,ee)};\n        ${Ae}\n        ${Ac(p,a,t,Ce.type.value,P)}\n        ${v?Hr(x,I,ie,void 0,!p,O):Lr(x,I,ie,void 0,!p,O,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${I};${v}`,inputDependencies:he},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Q}),getShaderSource:W}}});var Ic,Lo,au=Y(()=>{"use strict";ye();Lt();Se();_e();Ic=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,d=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,S=U("W",t[1].dataType,t[1].dims.length,v),A=U("Dy",t[0].dataType,t[0].dims.length,v),I=[A,S];o&&I.push(U("bias",t[2].dataType,[r[y]].length,v));let x=j("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${A.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,P=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?A.get("batch","idyR","idyC","inputChannel"):A.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...I,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:P}}`},Lo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,S=t.group,A=e[1].dims,I=A[0]/S,x=A[1],E=[{type:12,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:I},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),p.push("rank")),E.push(...Z(i));let P=a[1]===1&&a[2]===1,O=R=>{let L=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],N=De(e[0].dataType);return`${Ic(R,e,i,o,P,v,N,L,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:O}}});var Tc,Ec,Pc,su,uu,kc,Oc,Rc,Bc,du,lu=Y(()=>{"use strict";iu();au();Ft();Sr();Tc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Ec=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Pc=(e,t,r,o,i,u,a,c,p,h)=>{let d=e.length-2,y=h.length===0;if(p.length===0)for(let v=0;v<d;++v)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let v=0,S=e.length-d-(c?1:0);v<d;++v,++S){let A=e[S],I=y?A*a[v]:h[v],x=Tc(A,a[v],u[v],t[S],r[v],I);Ec(x,o,u,v,v+d),y&&h.push(a[v]*(A-1)+p[v]+(t[S]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(c?3:1,0,_)},su=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Pc(c,r,p,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),d},uu=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},kc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Oc=[2,3,1,0],Rc=(e,t,r)=>{let o=su(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Lo(t,o));return}let p=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,v=d*y*c,S=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],Oc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let I=[t[0],A],x=t.length===3;x&&(!i&&t[2].dims.length===1?I.push(t[2].reshape([t[2].dims[0],1,1])):I.push(t[2])),e.compute(ou(I,o,u,w,_,v,x,S),{inputs:I})},Bc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=su({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Lo(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},du=(e,t)=>{kc(e.inputs,t),e.inputs[0].dims.length===3?Bc(e,t):Rc(e,e.inputs,t)}});var Dc,cu,pu,mu=Y(()=>{"use strict";ye();Se();Ze();_e();Dc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=U("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Z(t,t)]}),getShaderSource:d}},cu=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Dc(o,r,i,t),{inputs:[0]})},pu=e=>{let t=e.exclusive===1,r=e.reverse===1;return ve({exclusive:t,reverse:r})}});var zc,Mc,Uc,fu,hu,gu=Y(()=>{"use strict";ye();Se();Ze();_e();zc=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mc=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},Uc=(e,t)=>{let r,o,i,u,a,c,p=t.format==="NHWC",h=t.blocksize,d=t.mode==="DCR";p?([r,o,i,u]=e.dims,a=d?[r,o,i,h,h,u/h**2]:[r,o,i,u/h**2,h,h],c=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,o,i,u]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[r,h,h,u/h**2,o,i]:[r,u/h**2,h,h,o,i],c=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=e.reshape(a),w=y.dims.length,_=e.dataType,v=U("a",_,w),S=j("output",_,w),A=I=>`\n  ${I.registerUniform("output_size","u32").declareVariables(v,S)}\n\n  ${Mc(c,w,v,S)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${S.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${S.setByOffset("global_idx",v.getByIndices("aIndices"))}\n  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:I=>{let x=p?[r,o*h,i*h,u/h**2]:[r,u/h**2,o*h,i*h],E=M.size(x),P=y.dims,O=M.sortBasedOnPerm(P,c);return{outputs:[{dims:x,dataType:I[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Z(P,O)]}},getShaderSource:A}},fu=(e,t)=>{zc(e.inputs),e.compute(Uc(e.inputs[0],t))},hu=e=>ve({blocksize:e.blocksize,mode:e.mode,format:e.format})});var Fo,Wn,yu,Vc,Wc,qo,jo,bu,Nc,wu,vu,$u=Y(()=>{"use strict";ye();Se();Ze();_e();Fo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Fo+")+",yu="^"+Wn+"$",Vc="("+Wn+",)*"+Wn,Wc="^"+Vc+"$",qo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},jo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Wc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(yu)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,h,p);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Fo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(yu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Fo,"g")),d=new qo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let S=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(S,w+v),this.addSymbol(S,o[p++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),d}},bu=e=>e+"_max",Nc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>U(`input${y}`,t,d)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",S=[],A=[],I=[],x=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{if(r.rhs.symbolToIndices.has(R)){let L=r.rhs.symbolToIndices.get(R)?.[0];L!==void 0&&r.lhs.forEach((N,K)=>{if(O.inputIndices.includes(K)){let Q=N.symbolToIndices.get(R);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(he=>{y.push(`${u[K].indicesSet(`input${K}Indices`,he,c.indicesGet("outputIndices",L))}`)})}})}else r.lhs.forEach((L,N)=>{if(O.inputIndices.includes(N)){let K=L.symbolToIndices.get(R);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Q=>{S.push(`${u[N].indicesSet(`input${N}Indices`,Q,`${R}`)}`)}),x.push(`prod *= ${u[N].getByIndices(`input${N}Indices`)};`)}}),A.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${bu(R)}; ${R}++) {`),I.push("}")});let P=E?[...y,`let sum = ${u.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...y,_,...A,...S,w,...x,v,...I];return`\n            ${d.registerUniforms(p.map(O=>({name:`${bu(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((O,R)=>`var input${R}Indices: ${u[R].type.indices};`).join(`\n`)}\n            ${P.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},wu=(e,t)=>{let r=new jo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Nc(i,e.inputs[0].dataType,r,o))},vu=e=>{let t=e.equation.replace(/\\s+/g,"");return ve({equation:t})}});var Gc,_u,Hc,Lc,Su,xu=Y(()=>{"use strict";ye();Se();_e();Gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_u=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Hc=(e,t)=>e.length>t.length?_u(e,t):_u(t,e),Lc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Hc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let d=U("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=(v,S,A="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${d.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${v}[${S}] = ${A}(${d.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Su=e=>{Gc(e.inputs),e.compute(Lc(e.inputs),{inputs:[0]})}});var Fc,Cu,Au=Y(()=>{"use strict";ye();Se();_e();Rn();Fc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=U("x",t,[1],4),p=U("bias",t,[1],4),h=j("y",t,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(c,p,h)}\n\n    ${Bo(et(t))}\n\n    ${a.mainStart(or)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",Do("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},Cu=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Bs(e):e.compute(Fc(e.inputs))}});var qc,jc,Iu,Tu,Eu=Y(()=>{"use strict";ye();Se();Ze();_e();qc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),d=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=U("data",e[0].dataType,e[0].dims.length,p),v=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),A=x=>{let E=o.length,P=`var indicesIndices${x}  = ${v.type.indices}(0);`;for(let O=0;O<E;O++)P+=`${E>1?`indicesIndices${x}[${O}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${O}]`:`outputIndices${x}`};`;P+=`\n          var idx${x} = ${v.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let O=0,R=0;O<i;O++)O===u?(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = u32(idx${x});`,R+=E):(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${R}]`:`outputIndices${x}`};`,R++);return P},I;if(e[0].dataType===9){let x=(E,P,O="")=>`\n          let outputIndices${P} = ${S.offsetToIndices(`outputOffset + ${P}u`)};\n          ${A(P)};\n          let offset${P} = ${_.indicesToOffset(`dataIndices${P}`)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${E}[${P}] = ${O}(${_.getByOffset(`index${P}`)}[component${P}]);\n        `;I=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else I=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${A("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${I}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},Iu=e=>ve({axis:e.axis}),Tu=(e,t)=>{let r=e.inputs;qc(r),e.compute(jc(e.inputs,t))}});var Kc,Yc,Pu,ku,Ou=Y(()=>{"use strict";ye();Se();Ze();_e();Kc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Yc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),d=M.size(h),y=U("input",o,i),w=U("indicesInput",a,u.length),_=j("output",o,h.length),v=[{type:12,data:d},{type:6,data:p},{type:12,data:c}];return v.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:I=>`\n      ${I.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${I.mainStart()}\n      ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Pu=e=>ve({axis:e.axis}),ku=(e,t)=>{let r=e.inputs;Kc(r),e.compute(Yc(e.inputs,t))}});var Zc,Xc,Ru,Bu,Du=Y(()=>{"use strict";ye();Se();_e();Zc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),d.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),A=U("b",e[1].dataType,e[1].dims),I=S.type.value,x=null,E=[S,A];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let P=j("output",e[0].dataType,c.length);E.push(P);let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(O).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${I}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${I}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Ru=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Bu=(e,t)=>{Zc(e.inputs),e.compute(Xc(e.inputs,t))}});var Qc,Jc,ep,zu,Mu=Y(()=>{"use strict";ye();Se();_e();Qc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=Me(a),p=a/c,h=[r[0],r[1],p],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let v=U("x",e[0].dataType,h.length,c),S=U("scale",e[1].dataType,e[1].dims),A=U("bias",e[2].dataType,e[2].dims),I=j("output",e[0].dataType,h.length,c),x=[v,S,A,I],E=v.type.value,P=c===1?"f32":`vec${c}<f32>`,O=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${P}, ${O}>;\n  const workgroupSize = ${O}u;\n  ${_.registerUniforms(R).declareVariables(...x)}\n  ${_.mainStart(O)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${P}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${_t("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${_t("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${P}(channelScale)) + ${E}(${P}(channelShift));\n      ${I.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Jc=(e,t,r,o,i,u,a,c)=>{let p=Me(a),h=64,d=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(R,L)=>`${d}(${R}, ${L})`,_=i*a/p,v=Math.ceil(u/h),S=["type"],A=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],I=R=>{let L=U("input",t.dataType,t.dims,p);return`\n  ${R.declareVariables(L)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:A}),getShaderSource:I},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],P=["type","type","type"],O=R=>{let L=U("scale",r.dataType,r.dims,p),N=U("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${L.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${N.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:O},{inputs:[x,r,o],outputs:[-1]})[0]},ep=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=Me(a),h=M.size(i)/p,d=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=Jc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=v=>{let S=De(t[0].dataType),A=p===1?"vec2f":`mat2x${p}f`,I=p===1?S:`vec${p}<${S}>`,x=U("input",t[0].dataType,t[0].dims,p),E=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${I}(scale[0]), ${I}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},zu=(e,t)=>{t.format==="NHWC"?ep(e,e.inputs,t):e.compute(Qc(e.inputs,t))}});var tp,rp,Uu,Vu=Y(()=>{"use strict";ye();Se();_e();tp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rp=(e,t,r)=>{let o=t.simplified,i=e[0].dims,u=e[1],a=!o&&e[2],c=i,p=M.normalizeAxis(t.axis,i.length),h=M.sizeToDimension(i,p),d=M.sizeFromDimension(i,p),y=M.size(u.dims),w=a?M.size(a.dims):0;if(y!==d||a&&w!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${y} and bias size of ${w}`);let _=[];for(let O=0;O<i.length;++O)O<p?_.push(i[O]):_.push(1);let v=Me(d),S=["type","type"],A=[{type:12,data:h},{type:1,data:d},{type:12,data:Math.floor(d/v)},{type:1,data:t.epsilon}];a&&S.push("type");let I=r>1,x=r>2,E=O=>{let R=De(e[0].dataType),L=[U("x",e[0].dataType,e[0].dims,v),U("scale",u.dataType,u.dims,v)];a&&L.push(U("bias",a.dataType,a.dims,v)),L.push(j("output",e[0].dataType,c,v)),I&&L.push(j("mean_data_output",1,_)),x&&L.push(j("inv_std_output",1,_));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...L)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${$t("f32",v)};\n    var mean_square_vector = ${$t("f32",v)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ir(R,v,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${_t("mean_vector",v)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${_t("mean_square_vector",v)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ir(R,v,"x[j + offset]")};\n      let f32scale = ${ir(R,v,"scale[j]")};\n      output[j + offset] = ${L[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${ir(R,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:c,dataType:e[0].dataType}];return I&&P.push({dims:_,dataType:1}),x&&P.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${v};${r};${o}`,inputDependencies:S},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:A}),getShaderSource:E}},Uu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs,t,e.outputCount))}});var np,op,Wu,Nu,Gu=Y(()=>{"use strict";ye();Se();Ze();_e();np=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(d)!==y)throw new Error("zeroPoints input size error.")}},op=(e,t,r,o)=>{let i=e[0].dims,u=i.length,a=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=i[u-2],p=t.k,h=t.n,d=i.slice(0,u-2),y=M.size(d),_=t.blockSize/8*t.bits/4,v=e[0].dataType,S=Me(c),A=Me(t.k),I=Me(_),x=tr(v),E=c*a*x,P=Math.floor(o/E),O=a<=r[0]&&P>0,R=!O||P>=4?Me(h):P>=2&&Me(h)>=2?2:1,L=d.concat([c,h]),N=M.size(L)/R/S,K=O?[]:[{type:12,data:N},{type:12,data:t.blockSize}],Q=[y,c,p/A],he=M.convertShape(e[1].dims).slice();he.splice(-1,1,_/I),K.push(...Z(Q)),K.push(...Z(he)),K.push(...Z(e[2].dims)),e.length===4&&K.push(...Z(M.convertShape(e[3].dims)));let W=[y,c,h/R];K.push(...Z(W));let se=Ce=>{let We=Q.length,ee=U("a",e[0].dataType,We,A),ae=U("b",12,he.length,I),Ae=U("scales",e[2].dataType,e[2].dims.length),me=[ee,ae,Ae],ie=e.length===4?U("zero_points",12,e[3].dims.length):void 0;ie&&me.push(ie);let ue=W.length,le=j("output",e[0].dataType,ue,R),qe=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],G=De(e[0].dataType),ne=(()=>{switch(A){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${A}-component is not supported.`)}})(),xe=`\n        for (var word: u32 = 0; word < ${_}; word += ${I}) {\n          ${ae.indicesSet("b_indices","2","word")};\n          let b_data = ${ae.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${I}; i++) {\n            let b_value: u32 = ${I===1?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${ne}(${Array.from({length:4},(Be,Ge)=>`${G}(b_value_lower[${Ge}]), ${G}(b_value_upper[${Ge}])`).join(", ")});\n            let b_dequantized_values = ${(()=>A===1?`${ne}(${Array.from({length:8},(Be,Ge)=>`(b_quantized_values[${Ge}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ne}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${O?c:S}u; m++) {\n              ${ee.indicesSet("a_indices",We-2,O?"m":`row * ${S} + m`)};\n              ${ee.indicesSet("a_indices",We-1,"word_offset")};\n              var input_offset = ${ee.indicesToOffset("a_indices")};\n              var a_data: ${ne};\n              for (var j: u32 = 0; j < ${8/A}; j++) {\n                a_data[j] = ${ee.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/A},(Be,Ge)=>`${A===1?`a_data[${Ge}] * b_dequantized_values[${Ge}]`:`dot(a_data[${Ge}], b_dequantized_values[${Ge}])`}`).join(" + ")};\n            }\n            word_offset += ${8/A};\n          }\n        }`,Ke=ie?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ie.getByOffset("zero_point_index")};\n          }`:"";return O?`\n        var<workgroup> workgroup_shared: array<${le.type.value}, ${c*a}>;\n        ${Ce.declareVariables(...me,le)}\n        ${Ce.mainStart([a,1,1])}\n          var a_indices: ${ee.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${ee.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${R}; c++) {\n            let col_times_components_plus_c = col * ${R} + c;\n              ${ie?`\n            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ie.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${ae.type.indices};\n            ${ae.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${a} + block;\n            let scale = ${Ae.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ie?"(zero_point_word) & 0xFu":8});\n            ${ae.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/A};\n            var workgroup_shared_offset: u32 = block * ${c};\n            ${xe}\n          }\n          workgroupBarrier();\n          if (local_id.x == 0u) {\n            var output_indices: ${le.type.indices};\n            ${le.indicesSet("output_indices","0","batch")};\n            ${le.indicesSet("output_indices",ue-1,"col")};\n            ${le.indicesSet("output_indices",ue-2,"0")};\n            var output_offset = ${le.indicesToOffset("output_indices")};\n            for (var m: u32 = 0u; m < ${c}u; m++) {\n              var output_value: ${le.type.value} = ${le.type.value}(0);\n              var workgroup_shared_offset: u32 = m;\n              for (var b: u32 = 0u; b < ${a}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${le.setByOffset("output_offset","output_value")};\n              output_offset += ${h/R};\n            }\n          }\n        }`:`\n        ${Ce.registerUniforms(qe).declareVariables(...me,le)}\n        ${Ce.mainStart()}\n          ${Ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${le.type.value}, ${S}>;\n          var output_indices = ${le.offsetToIndices("global_idx")};\n          var col = ${le.indicesGet("output_indices",ue-1)};\n          var row = ${le.indicesGet("output_indices",ue-2)};\n          var a_indices: ${ee.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ie?`\n          var zero_point_abs_offset = col * ${R} * ((${a} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${ie.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${a*R};\n          var b_indices: ${ae.type.indices};\n          for (var c: u32 = 0; c < ${R}; c++) {\n            ${ae.indicesSet("b_indices","0",`col * ${R} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${a}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${Ae.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ie?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${ae.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${xe}\n              scale_index++;\n              ${Ke}\n              block_offset += uniforms.block_size / ${A};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ie?`if (zero_point_offset % 8 > 0) {\n                ${Ke}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${S}u; k++) {\n              ${le.indicesSet("output_indices",ue-2,`${S} * row + k`)};\n              ${le.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${c};${v};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:L,dataType:v}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(h/R),z:y}:{x:Math.ceil(N/64)},programUniforms:K}),getShaderSource:se}},Wu=(e,t)=>{np(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(op(e.inputs,t,r,o))},Nu=e=>ve(e)});var it,ip,Lu,Hu,ap,Ko,Fu,qu=Y(()=>{"use strict";ye();Se();Ze();_n();Ro();_e();Sr();it=(e,t)=>e.length>t&&e[t].dims.length>0&&M.size(e[t].dims)>0?e[t]:void 0,ip=(e,t)=>{let r=e[0],o=it(e,1),i=it(e,2),u=it(e,3),a=it(e,4),c=it(e,5),p=it(e,6),h=it(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,S=0,A=0,I=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==I)throw new Error(\'Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==I)throw new Error(\'Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(p.dims[2]!==h.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],A=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==I)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==I)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let N=a.dims;throw N.length===1?N[0]===y?E=1:N[0]===3*y+2&&(E=3):N.length===2&&N[0]===y&&N[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let P=!1,O=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');O=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');O=i.dims[1]*i.dims[3],P=!0}}let R=S+v,L=!1;if(a)throw new Error("Key padding mask is not supported");if(c){if(c.dims.length!==4)throw new Error(\'Input "relative_position_bias" is expected to have 4 dimensions\');if(c.dims[0]!==y&&c.dims[0]!==1||c.dims[1]!==t.numHeads||c.dims[2]!==w||c.dims[3]!==R)throw new Error(\'Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)\')}return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:R,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:_,vHiddenSize:O,headSize:I,vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:L,passPastInKv:P,qkvFormat:x}},Lu=e=>ve({...e}),Hu=ve({perm:[0,2,1,3]}),ap=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],d=y=>{let w=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),v=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Ko=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ap(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]},Fu=(e,t)=>{let r=ip(e.inputs,t),o=e.inputs[0],i=it(e.inputs,1),u=it(e.inputs,2),a=it(e.inputs,3),c=it(e.inputs,4),p=it(e.inputs,5),h=it(e.inputs,6),d=it(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let y=i&&u&&i.dims.length===4&&u.dims.length===4,w=Ko(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,o,a,0);if(y)return Pn(e,w,i,u,c,void 0,h,d,p,r,t);if(!i||!u)throw new Error("key and value must be provided");let _=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),v=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,u,a,2*r.hiddenSize);Pn(e,w,_,v,c,void 0,h,d,p,r,t)}});var sp,up,dp,lp,cp,pp,mp,fp,ju,Ku=Y(()=>{"use strict";ye();Se();_e();sp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},up=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},dp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},lp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k = i32(${fe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},cp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},pp=(e,t,r)=>{switch(r.mode){case 0:return up(e,t,r.pads.length);case 1:return dp(e,t,r.pads.length);case 2:return lp(e,t,r.pads.length);case 3:return cp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),y=d.type.value,w=pp(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(d,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},fp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},ju=(e,t)=>{sp(e.inputs);let r=fp(e.inputs,t);e.compute(mp(e.inputs,r),{inputs:[0]})}});var Nn,Yu,Zu,Xu,Qu,hp,gp,Ju,ed,td,rd,nd,od,id,ad,sd,ud,dd,ld,cd=Y(()=>{"use strict";$r();ye();Se();_e();Nn=e=>{if(vr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Yu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();nr.adjustPoolAttributes(r,i,a,c,p,h);let d=nr.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Zu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],A=t.pads[t.pads.length-2];w=!!(S+A),u.push({type:12,data:_},{type:12,data:v},{type:12,data:S},{type:12,data:A}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,d)=>h+d);return[u,a,!!p,!1,!1]}},Xu=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",A="",I="",x=r-(w?2:1);if(d?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let P=r-(w?3:2);y?A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                `,I=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${A}\n              ${S}\n              ${I}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,A=i.pads.length,I="";return h?I=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:I=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${fe("uniforms.pads","j - 2u",A)};\n                  ${I}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Qu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,hp=e=>`${Qu(e)};${e.countIncludePad}`,gp=e=>`${Qu(e)};${e.storageOrder};${e.dilations}`,Ju=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ed=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Zu(u,i);d.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:A=>Xu(A,a,t.dims.length,u.length,i,p,h,0,y,w,_,v)}},td=e=>{let t=e.count_include_pad!==0,r=Ju(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:hp(o)}},rd=(e,t)=>{Nn(e.inputs),e.compute(ed("AveragePool",e.inputs[0],!1,t))},nd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},od=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},id=(e,t)=>{Nn(e.inputs),e.compute(ed("GlobalAveragePool",e.inputs[0],!0,t))},ad=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=U("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Zu(u,i);return d.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:S=>Xu(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,v)}},sd=(e,t)=>{Nn(e.inputs),e.compute(ad("MaxPool",e.inputs[0],!1,t))},ud=e=>{let t=e.storage_order,r=e.dilations,o=Ju(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:gp(i)}},dd=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},ld=(e,t)=>{Nn(e.inputs),e.compute(ad("GlobalMaxPool",e.inputs[0],!0,t))}});var bp,wp,pd,md=Y(()=>{"use strict";$r();ye();_e();bp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},wp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let d=j("output",o,u.length),y=d.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},pd=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),vr.webgpu.validateInputContent&&bp(t,r,o),e.compute(wp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var vp,$p,_p,Sp,xp,Cp,Ap,Ip,Tp,Ep,Pp,fd,kp,Op,Rp,Bp,Dp,hd,gd,yd=Y(()=>{"use strict";ye();Se();Ze();_e();vp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},$p=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},_p=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vp(o,t),t.axes.length>0&&$p(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Sp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",xp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Cp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Ap=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Ip=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",i)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",u)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Pp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,fd=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",kp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${fd(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Op=(e,t,r,o,i,u,a,c,p,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,S=A=>{let I=A===w?"row":"col";return`\n      fn ${I}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",A)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[A]},\n        ${o[A]}, ${r[A]}, ${u[A]}, ${u[A]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[A]} - 1))) {\n          return ${p};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${I}: ${v} = originalIdx + ${v}(i);\n          if (${I} < 0 || ${I} >= ${r[A]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${I} = max(0, min(${I}, ${r[A]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",A,`u32(${I})`)};\n          data[i + 1] = ${A===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rp=(e,t,r,o,i)=>{let[a,c,p,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${fd(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Bp=(e,t,r,o,i,u)=>{let a=e.dims,c=Cp(u,t.axes,a.length),p=Ap(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,E)=>x===0?1:p[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=Ip(a,h,t)));let d=j("output",e.dataType,p.length),y=U("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,E)=>x===p[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,A=y.type.value,I=x=>`\n      ${_?"":`\n      ${Sp(t.coordinateTransformMode,A)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Pp(y,a)};\n              ${xp(t.nearestMode,r,A)};\n              ${Ep(y,d,a,p,h.length,c.length,v)};\n              `;case"linear":return`\n              ${Tp(d,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${kp(y,d,a,v,S)}`;if(a.length===3||a.length===5)return`${Rp(y,d,a,v,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Op(y,d,a,p,h,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Dp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},hd=(e,t)=>{let r=[],o=[],i=[],u=Dp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");_p(e.inputs,t,u,r,o,i),e.compute(Bp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},gd=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return ve({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var zp,Mp,bd,wd=Y(()=>{"use strict";ye();Se();Ze();_e();zp=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],d=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,d=e[2].dims[1],y=i===0?d*2:h/o,w=new Array(a,p,h/y,y-d),_=M.computeStrides(w),v=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=A=>{let I=U("input",e[0].dataType,e[0].dims.length),x=U("position_ids",e[1].dataType,e[1].dims.length),E=U("cos_cache",e[2].dataType,e[2].dims.length),P=U("sin_cache",e[3].dataType,e[3].dims.length),O=j("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${A.declareVariables(I,x,E,P,O)}\n\n        ${A.mainStart(or)}\n          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${I.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -\n                ${I.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${O.setByOffset("i","re")}\n            let im = ${I.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +\n                ${I.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${O.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${O.setByOffset("k",I.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/or)},programUniforms:v})}},bd=(e,t)=>{zp(e.inputs,t),e.compute(Mp(e.inputs,t))}});var Up,Vp,vd,$d=Y(()=>{"use strict";ye();Se();_e();Up=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Vp=(e,t,r,o)=>{let i=t.simplified,u=e[0].dims,a=M.size(u),c=u,p=a,h=u.slice(-1)[0],d=o?u.slice(0,-1).concat(1):[],y=!i&&e.length>3,w=e.length>4,_=o&&r>1,v=o&&r>2,S=r>3,A=Me(h),I=[{type:12,data:p},{type:12,data:A},{type:12,data:h},{type:1,data:t.epsilon}],x=P=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],R=[U("x",e[0].dataType,e[0].dims,A),U("skip",e[1].dataType,e[1].dims,A),U("gamma",e[2].dataType,e[2].dims,A)];y&&R.push(U("beta",e[3].dataType,e[3].dims,A)),w&&R.push(U("bias",e[4].dataType,e[4].dims,A)),R.push(j("output",e[0].dataType,c,A)),_&&R.push(j("mean_output",1,d)),v&&R.push(j("inv_std_output",1,d)),S&&R.push(j("input_skip_bias_sum",e[0].dataType,c,A));let L=De(e[0].dataType);return`\n\n      ${P.registerUniforms(O).declareVariables(...R)}\n\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${$t("f32",A)};\n        var squareSum = ${$t("f32",A)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${w?"bias[i]":L+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${S?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ir(L,A,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${_t("sum",A)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${_t("squareSum",A)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);\n        ${_?"mean_output[global_idx] = mean;":""}\n        ${v?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] ${i?"":`- ${L}(mean)`}) * ${L}(inv_std_dev) * gamma[i] ${y?"+ beta[i]":""};\n        }\n      }`},E=[{dims:c,dataType:e[0].dataType}];return r>1&&E.push({dims:d,dataType:1}),r>2&&E.push({dims:d,dataType:1}),r>3&&E.push({dims:u,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${A};${_};${v};${S}`,inputDependencies:e.map((P,O)=>"type")},getShaderSource:x,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(p/h/64)},programUniforms:I})}},vd=(e,t)=>{Up(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Vp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Wp,Gn,Np,_d,Gp,Hp,Sd,xd,Cd=Y(()=>{"use strict";ye();Se();Ze();_e();Wp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Gn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Np=(e,t)=>{if(e.length>1){let r=Gn(e,1),o=Gn(e,2),i=Gn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),ve({starts:r,ends:o,axes:i})}else return t},_d=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Gp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Gn(e,4);u.forEach(I=>I!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((I,x)=>_d(I,x,r,i,u)),c=t.ends.map((I,x)=>_d(I,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let I=0;I<r.length;++I)i.includes(I)||(a.splice(I,0,0),c.splice(I,0,r[I]),u.splice(I,0,1));let p=u.map(I=>Math.sign(I));u.forEach((I,x,E)=>{if(I<0){let P=(c[x]-a[x])/I,O=a[x],R=O+P*u[x];a[x]=R,c[x]=O,E[x]=-I}});let h=r.slice(0);i.forEach((I,x)=>{h[I]=Math.ceil((c[I]-a[I])/u[I])});let d={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=U("input",e[0].dataType,e[0].dims.length),_=M.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],A=I=>`\n      ${I.registerUniforms(v).declareVariables(w,y)}\n        ${Gp(w,y,r)}\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Sd=(e,t)=>{Wp(e.inputs,t);let r=Np(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},xd=e=>{let t=e.starts,r=e.ends,o=e.axes;return ve({starts:t,ends:r,axes:o})}});var Lp,Fp,Ad,Id,Td=Y(()=>{"use strict";ye();Se();Ze();_e();Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=Me(a),h=a/p,d=(A,I)=>I===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:I===2?`max(${A}.x, ${A}.y)`:I===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,y=U("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,v=De(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=A=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${A.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${A.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${_t("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},Ad=(e,t)=>{Lp(e.inputs),e.compute(Fp(e.inputs[0],t))},Id=e=>ve({axis:e.axis})});var qp,jp,Kp,Yp,Zp,Ed,Pd,kd=Y(()=>{"use strict";ye();Se();Ze();_e();qp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},jp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),ve({numOutputs:o,axis:t.axis,splitSizes:r})},Kp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Yp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r.length),p=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],p[v]=y;let S=r.slice();S[t.axis]=t.splitSizes[v],d.push(S),a[v]=j(`output${v}`,i,S.length),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...d));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Kp(p.length)}\n  ${Yp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Ed=(e,t)=>{qp(e.inputs);let r=e.inputs.length===1?t:jp(e.inputs,t);e.compute(Zp(e.inputs,r),{inputs:[0]})},Pd=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ve({axis:t,numOutputs:o,splitSizes:r})}});var Od,Xp,Qp,Jp,Rd,Bd=Y(()=>{"use strict";ye();Se();_e();Od=e=>Array.from(e.getBigInt64Array(),Number),Xp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Jp=e=>{let t=e[0].dims,r=Od(e[1]),o=Qp(t,r),i=M.size(o),u=e[0].dataType,a=U("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},Rd=e=>{Xp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}});var em,tm,Dd,zd=Y(()=>{"use strict";ye();Se();_e();em=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),p=U("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let S=`a_data[index_a${_}][component_a${_}]`,A=`b_data[index_b${_}][component_b${_}]`,I=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${d(S,A,I)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},tm=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=It.calcShape(It.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>em(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Dd=e=>{e.compute(tm(e.inputs))}});var Md,Ud=Y(()=>{"use strict";Ka();Ro();Ja();ts();Vs();Zs();Oo();Uo();lu();mu();gu();$u();xu();Au();Eu();Ou();Du();Mu();Vu();Wo();Gu();qu();Ku();cd();md();In();yd();wd();$d();Cd();Td();kd();Bd();Sr();Rn();zd();Md=new Map([["Abs",[rs]],["Acos",[ns]],["Acosh",[os]],["Add",[Ws]],["ArgMax",[ja,ko]],["ArgMin",[qa,ko]],["Asin",[is]],["Asinh",[as]],["Atan",[ss]],["Atanh",[us]],["Attention",[Xa]],["AveragePool",[rd,td]],["BatchNormalization",[Qa]],["BiasAdd",[es]],["BiasSplitGelu",[Us]],["Cast",[ls,ds]],["Ceil",[ps]],["Clip",[cs]],["Concat",[Ya,Za]],["Conv",[Ho,Go]],["ConvTranspose",[du,uu]],["Cos",[ms]],["Cosh",[fs]],["CumSum",[cu,pu]],["DepthToSpace",[fu,hu]],["Div",[Ns]],["Einsum",[wu,vu]],["Elu",[hs,kn]],["Equal",[Gs]],["Erf",[gs]],["Exp",[ys]],["Expand",[Su]],["FastGelu",[Cu]],["Floor",[bs]],["FusedConv",[Ho,Go]],["Gather",[Tu,Iu]],["GatherElements",[ku,Pu]],["Gelu",[ws]],["Gemm",[Bu,Ru]],["GlobalAveragePool",[id,od]],["GlobalMaxPool",[ld,dd]],["Greater",[qs]],["GreaterOrEqual",[Ks]],["HardSigmoid",[Is,As]],["InstanceNormalization",[zu]],["LayerNormalization",[Uu]],["LeakyRelu",[vs,kn]],["Less",[js]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[ru]],["MatMulNBits",[Wu,Nu]],["MaxPool",[sd,ud]],["Mul",[Hs]],["MultiHeadAttention",[Fu,Lu]],["Neg",[_s]],["Not",[$s]],["Pad",[ju]],["Pow",[Ls]],["Range",[pd]],["Reciprocal",[Ss]],["ReduceMin",[Wa]],["ReduceMean",[Da]],["ReduceMax",[Va]],["ReduceSum",[Ga]],["ReduceProd",[Na]],["ReduceL1",[za]],["ReduceL2",[Ma]],["ReduceLogSum",[La]],["ReduceLogSumExp",[Ua]],["ReduceSumSquare",[Ha]],["Relu",[xs]],["Resize",[hd,gd]],["RotaryEmbedding",[bd]],["Sigmoid",[Cs]],["Sin",[Ts]],["Sinh",[Es]],["Slice",[Sd,xd]],["SkipLayerNormalization",[vd]],["Split",[Ed,Pd]],["Sqrt",[Ps]],["Softmax",[Ad,Id]],["Sub",[Fs]],["Tan",[ks]],["Tanh",[Rs]],["ThresholdedRelu",[Ds,kn]],["Tile",[Rd]],["Transpose",[_a,Sa]],["Where",[Dd]]])});var Hn,Vd=Y(()=>{"use strict";$r();Lt();_e();Hn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){rr(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let d of r)p.push({binding:p.length,resource:{buffer:d.buffer}});for(let d of o)p.push({binding:p.length,resource:{buffer:d.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ht(t.programInfo.name)}dispose(){}build(t,r){rr(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=va(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Ht(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var rm,nm,Yo,Ln,Wd=Y(()=>{"use strict";$r();ye();Lt();fa();wa();Ud();Vd();rm=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},nm=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${rm(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Yo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new Yo(await r.requestAdapterInfo()),this.gpuDataManager=ba(this),this.programManager=new Hn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pa(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),A=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),outputsMetadata:w.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:d,startTime:S,endTime:A});else{let I="";y.forEach((E,P)=>{I+=`input[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `});let x="";w.forEach((E,P)=>{x+=`output[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${d}" ${I}${x}execution time: ${A-S} ns`)}wo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Ht()}run(t,r,o,i,u,a){rr(t.name);let c=[];for(let E=0;E<r.length;++E){let P=r[E].data;if(P===0)continue;let O=this.gpuDataManager.get(P);if(!O)throw new Error(`no GPU data for input: ${P}`);c.push(O)}let{outputs:p,dispatchGroup:h,programUniforms:d}=t.getRunData(r),y=o.length===0?p.map((E,P)=>P):o;if(y.length!==p.length)throw new Error(`Output size ${y.length} must be equal to ${p.length}.`);let w=[],_=[];for(let E=0;E<p.length;++E){if(!Number.isInteger(y[E])||y[E]<-3||y[E]>=a)throw new Error(`Invalid output index: ${y[E]}`);if(y[E]===-3)continue;let P=y[E]===-1,O=y[E]===-2,R=P||O?u(p[E].dataType,p[E].dims):i(y[E],p[E].dataType,p[E].dims);if(w.push(R),R.data===0)continue;let L=this.gpuDataManager.get(R.data);if(!L)throw new Error(`no GPU data for output: ${R.data}`);if(P&&this.temporaryData.push(L),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(L)}_.push(L)}if(c.length!==r.length||_.length!==w.length){if(_.length===0)return Ht(t.name),w;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(d){let E=0,P=[];d.forEach(N=>{let K=typeof N.data=="number"?[N.data]:N.data;if(K.length===0)return;let Q=N.type===10?2:4,he,W;N.type===10?(W=K.length>4?16:K.length>2?8:K.length*Q,he=K.length>4?16:Q*K.length):(W=K.length<=2?K.length*Q:16,he=16),E=Math.ceil(E/W)*W,P.push(E);let se=N.type===10?8:4;E+=K.length>4?Math.ceil(K.length/se)*he:K.length*Q});let O=16;E=Math.ceil(E/O)*O;let R=new ArrayBuffer(E);d.forEach((N,K)=>{let Q=P[K],he=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(R,Q,he.length).set(he);else if(N.type===12)new Uint32Array(R,Q,he.length).set(he);else if(N.type===10)new Uint16Array(R,Q,he.length).set(he);else if(N.type===1)new Float32Array(R,Q,he.length).set(he);else throw new Error(`Unsupported uniform type: ${Gt(N.type)}`)});let L=this.gpuDataManager.create(E,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(L.buffer,0,R,0,E),this.gpuDataManager.release(L.id),v={offset:0,size:E,buffer:L.buffer}}let S=this.programManager.normalizeDispatchGroupSize(h),A=S[1]===1&&S[2]===1,I=nm(t,r,A),x=this.programManager.getArtifact(I);if(x||(x=this.programManager.build(t,S),this.programManager.setArtifact(I,x),Ve("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),d&&x.uniformVariablesInfo){if(d.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${d.length} in program "${x.programInfo.name}".`);for(let E=0;E<d.length;E++){let P=d[E],O=P.type,R=typeof P.data=="number"?1:P.data.length,[L,N]=x.uniformVariablesInfo[E];if(O!==L||R!==N)throw new Error(`Uniform variable ${E} mismatch: expect type ${L} with size ${N}, got type ${O} with size ${R} in program "${x.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let E={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:w};this.pendingKernels.push(E),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(E)}return this.programManager.run(x,c,_,S,v),Ht(t.name),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Md.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await xo(this,t,r);return ma(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Nd={};gn(Nd,{init:()=>om});var qr,Zo,om,Gd=Y(()=>{"use strict";ye();Wd();Lt();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,d,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=tr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let d=h*M.size(p),y=d>0?this.backend.gpuDataManager.create(d).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a,this.outputCount)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},om=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new Ln;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let d=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,d)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let d=new Zo(t,u,c);return u.computeKernel(a,d,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Vi;Vi=Ei();var pl=zi(),fo,ho=!1,yn=!1,Ui=!1,ml=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Wi=async e=>{if(ho)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ui)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ml(r),u=o&&fl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=hl(u,i),h=typeof a=="object"?a[p]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?pl:Vi,S={locateFile:(A,I)=>{if(i&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(h)return h;let x=c??I;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return I+A}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${v.toString()};`;S.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}v(S).then(A=>{yn=!1,ho=!0,fo=A,w()},A=>{yn=!1,Ui=!0,_(A)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Nr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ni=e=>{let t=Le(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Fe(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(a,c)=>{let p=Fe(a,o),h=Fe(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var gl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},bl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},wl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Fe("deviceType",r),p=Fe(a.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Fe("numThreads",r),h=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Fe("powerPreference",r),p=Fe(a.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Fe("preferredLayout",r),p=Fe(a.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Fe(i,r);Le()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Gi=e=>{let t=Le(),r=0,o=[],i=e||{};bl(i);try{let u=gl(i.graphOptimizationLevel??"all"),a=yl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Fe(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Fe(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,d),r===0&&Ue("Can\'t create session options."),i.executionProviders&&wl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Fe("enableGraphCapture",o),w=Fe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Nr(i.extra,"",new WeakSet,(y,w)=>{let _=Fe(y,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};ye();var Li=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var im=(e,t)=>{Le()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Ld=async e=>{im(e.wasm.numThreads,Gr(e.logLevel))},Fd=async(e,t)=>{{let r=(Gd(),wr(Nd)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},ar=new Map,am=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Xo=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qd=async(e,t)=>{let r,o,i=Le();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Xo(e);let u=0,a=0,c=0,p=[],h=[],d=[];try{if([a,p]=Gi(t),t?.externalData&&i.mountExternalData){let x=[];for(let E of t.externalData){let P=typeof E=="string"?E:E.path;x.push(Li(typeof E=="string"?E:E.data).then(O=>{i.mountExternalData(P,O)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=am(u),_=!!t?.enableGraphCapture,v=[],S=[],A=[];for(let x=0;x<y;x++){let E=i._OrtGetInputName(u,x);E===0&&Ue("Can\'t get an input name."),h.push(E),v.push(i.UTF8ToString(E))}for(let x=0;x<w;x++){let E=i._OrtGetOutputName(u,x);E===0&&Ue("Can\'t get an output name."),d.push(E);let P=i.UTF8ToString(E);S.push(P);{if(_&&t?.preferredOutputLocation===void 0){A.push("gpu-buffer");continue}let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);A.push(O)}}let I=null;return A.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),I={handle:c,outputPreferredLocations:A,outputPreferredLocationsEncoded:A.map(x=>yo(x))}),ar.set(u,[u,h,d,I,_,!1]),[u,v,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},jd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),ar.delete(e)},Hd=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Le(),c=e[0],p=e[1],h=e[3],d,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let v=e[2].gpuBuffer,S=tr(go(c));y=p.reduce((I,x)=>I*x,1)*S;let A=a.jsepRegisterBuffer;if(!A)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');d=A(o,i,v,y)}else{let v=e[2];if(Array.isArray(v)){y=4*v.length,d=a._malloc(y),r.push(d);let S=d/4;for(let A=0;A<v.length;A++){if(typeof v[A]!="string")throw new TypeError(`tensor data at index ${A} is not a string`);a.HEAPU32[S++]=Fe(v[A],r)}}else y=v.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,y),d)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let v=_/4;p.forEach(A=>a.HEAP32[v++]=A);let S=a._OrtCreateTensor(go(c),d,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Kd=async(e,t,r,o,i,u)=>{let a=Le(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],d=c[2],y=c[3],w=c[4],_=c[5],v=t.length,S=o.length,A=0,I=[],x=[],E=[],P=[],O=a.stackSave(),R=a.stackAlloc(v*4),L=a.stackAlloc(v*4),N=a.stackAlloc(S*4),K=a.stackAlloc(S*4);try{[A,I]=Ni(u);for(let ee=0;ee<v;ee++)Hd(r[ee],x,P,e,t[ee],w);for(let ee=0;ee<S;ee++)Hd(i[ee],E,P,e,v+o[ee],w);let Q=R/4,he=L/4,W=N/4,se=K/4;for(let ee=0;ee<v;ee++)a.HEAPU32[Q++]=x[ee],a.HEAPU32[he++]=h[t[ee]];for(let ee=0;ee<S;ee++)a.HEAPU32[W++]=E[ee],a.HEAPU32[se++]=d[o[ee]];if(y&&!_){let{handle:ee,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ae}=y;if(h.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${h.length}).`);for(let me=0;me<v;me++){let ie=t[me];await a._OrtBindInput(ee,h[ie],x[me])!==0&&Ue(`Can\'t bind input[${me}] for session=${e}.`)}for(let me=0;me<S;me++){let ie=o[me];i[me]?.[3]?a._OrtBindOutput(ee,d[ie],E[me],0)!==0&&Ue(`Can\'t bind pre-allocated output[${me}] for session=${e}.`):a._OrtBindOutput(ee,d[ie],0,Ae[ie])!==0&&Ue(`Can\'t bind output[${me}] to ${ae[me]} for session=${e}.`)}ar.set(e,[p,h,d,y,w,!0])}a.jsepOnRunStart?.(p);let Ce;y?Ce=await a._OrtRunWithBinding(p,y.handle,S,N,A):Ce=await a._OrtRun(p,L,R,v,K,S,N,A),Ce!==0&&Ue("failed to call OrtRun().");let We=[];for(let ee=0;ee<S;ee++){let ae=a.HEAPU32[N/4+ee];if(ae===E[ee]){We.push(i[ee]);continue}let Ae=a.stackSave(),me=a.stackAlloc(4*4),ie=!1,ue,le=0;try{a._OrtGetTensorData(ae,me,me+4,me+8,me+12)!==0&&Ue(`Can\'t access output tensor data on index ${ee}.`);let G=me/4,ne=a.HEAPU32[G++];le=a.HEAPU32[G++];let xe=a.HEAPU32[G++],Ke=a.HEAPU32[G++],Be=[];for(let Ne=0;Ne<Ke;Ne++)Be.push(a.HEAPU32[xe/4+Ne]);a._OrtFree(xe);let Ge=Be.reduce((Ne,Ye)=>Ne*Ye,1);ue=Gt(ne);let Ut=y?.outputPreferredLocations[o[ee]];if(ue==="string"){if(Ut==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],Ye=le/4;for(let mt=0;mt<Ge;mt++){let Rt=a.HEAPU32[Ye++],qt=mt===Ge-1?void 0:a.HEAPU32[Ye]-Rt;Ne.push(a.UTF8ToString(Rt,qt))}We.push([ue,Be,Ne,"cpu"])}else if(Ut==="gpu-buffer"&&Ge>0){let Ne=a.jsepGetBuffer;if(!Ne)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ye=Ne(le),mt=tr(ne);if(mt===void 0||!Hi(ue))throw new Error(`Unsupported data type: ${ue}`);ie=!0,We.push([ue,Be,{gpuBuffer:Ye,download:a.jsepCreateDownloader(Ye,Ge*mt,ue),dispose:()=>{a._OrtReleaseTensor(ae)}},"gpu-buffer"])}else{let Ne=bn(ue),Ye=new Ne(Ge);new Uint8Array(Ye.buffer,Ye.byteOffset,Ye.byteLength).set(a.HEAPU8.subarray(le,le+Ye.byteLength)),We.push([ue,Be,Ye,"cpu"])}}finally{a.stackRestore(Ae),ue==="string"&&le&&a._free(le),ie||a._OrtReleaseTensor(ae)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),ar.set(e,[p,h,d,y,w,!1])),We}finally{a.stackRestore(O),x.forEach(Q=>a._OrtReleaseTensor(Q)),E.forEach(Q=>a._OrtReleaseTensor(Q)),P.forEach(Q=>a._free(Q)),A!==0&&a._OrtReleaseRunOptions(A),I.forEach(Q=>a._free(Q))}},Yd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},Zd=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Wi(r.wasm).then(()=>{Ld(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Fd(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Xo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;qd(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":jd(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Kd(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},Zd([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Yd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'}),Or,Bt,ya,ja,Ka,Xi,Hn,Kr,Yr,Od,Ya,mf,gf,yf,bf,vf,wf,$f,_f=Y(()=>{var e;fr(),vg(),un(),Or=()=>!!Fe.wasm.proxy&&typeof document<"u",ya=!1,ja=!1,Ka=!1,Hn=new Map,Kr=(t,r)=>{let a=Hn.get(t);a?a.push(r):Hn.set(t,[r])},Yr=()=>{if(ya||!ja||Ka||!Bt)throw new Error("worker not ready")},Od=t=>{switch(t.data.type){case"init-wasm":ya=!1,t.data.err?(Ka=!0,Xi[1](t.data.err)):(ja=!0,Xi[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=Hn.get(t.data.type);t.data.err?r.shift()[1](t.data.err):r.shift()[0](t.data.out);break}}},Ya=typeof document<"u"?(e=document==null?void 0:document.currentScript)==null?void 0:e.src:void 0,mf=async()=>{if(!ja){if(ya)throw new Error("multiple calls to 'initWasm()' detected.");if(Ka)throw new Error("previous call to 'initWasm()' failed.");if(ya=!0,Or())return Fe.wasm.wasmPaths===void 0&&Ya&&Ya.indexOf("blob:")!==0&&(Fe.wasm.wasmPaths=Ya.substr(0,+Ya.lastIndexOf("/")+1)),new Promise((t,r)=>{Bt==null||Bt.terminate();let a=URL.createObjectURL(new Blob([wg()],{type:"text/javascript"}));Bt=new Worker(a,{name:"ort-wasm-proxy-worker"}),Bt.onerror=s=>r(s),Bt.onmessage=Od,URL.revokeObjectURL(a),Xi=[t,r];let i={type:"init-wasm",in:Fe};Bt.postMessage(i)});try{await Tp(Fe.wasm),await uf(Fe),ja=!0}catch(t){throw Ka=!0,t}finally{ya=!1}}},gf=async t=>{if(Or())return Yr(),new Promise((r,a)=>{Kr("init-ep",[r,a]);let i={type:"init-ep",in:{epName:t,env:Fe}};Bt.postMessage(i)});await lf(Fe,t)},yf=async t=>Or()?(Yr(),new Promise((r,a)=>{Kr("copy-from",[r,a]);let i={type:"copy-from",in:{buffer:t}};Bt.postMessage(i,[t.buffer])})):fs(t),bf=async(t,r)=>{if(Or()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Yr(),new Promise((a,i)=>{Kr("create",[a,i]);let s={type:"create",in:{model:t,options:{...r}}},n=[];t instanceof Uint8Array&&n.push(t.buffer),Bt.postMessage(s,n)})}else return df(t,r)},vf=async t=>{if(Or())return Yr(),new Promise((r,a)=>{Kr("release",[r,a]);let i={type:"release",in:t};Bt.postMessage(i)});pf(t)},wf=async(t,r,a,i,s,n)=>{if(Or()){if(a.some(u=>u[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(u=>u))throw new Error("pre-allocated output tensor is not supported for proxy.");return Yr(),new Promise((u,d)=>{Kr("run",[u,d]);let c=a,h={type:"run",in:{sessionId:t,inputIndices:r,inputs:c,outputIndices:i,options:n}};Bt.postMessage(h,ff(c))})}else return cf(t,r,a,i,s,n)},$f=async t=>{if(Or())return Yr(),new Promise((r,a)=>{Kr("end-profiling",[r,a]);let i={type:"end-profiling",in:t};Bt.postMessage(i)});hf(t)}}),Qi,Rd,xf,$g=Y(()=>{fr(),_f(),xe(),Ip(),Qi=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Rd=e=>{switch(e[3]){case"cpu":return new Rt(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Ms(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:a,dispose:i}=e[2];return Rt.fromGpuBuffer(r,{dataType:t,dims:e[1],download:a,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},xf=class{async fetchModelAndCopyToWasmMemory(e){return yf(await Zn(e))}async loadModel(e,t){vr();let r;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?r=await Zn(e):r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await bf(r,t),hr()}async dispose(){return vf(this.sessionId)}async run(e,t,r){vr();let a=[],i=[];Object.entries(e).forEach(m=>{let g=m[0],w=m[1],p=this.inputNames.indexOf(g);if(p===-1)throw new Error(`invalid input '${g}'`);a.push(w),i.push(p)});let s=[],n=[];Object.entries(t).forEach(m=>{let g=m[0],w=m[1],p=this.outputNames.indexOf(g);if(p===-1)throw new Error(`invalid output '${g}'`);s.push(w),n.push(p)});let u=a.map((m,g)=>Qi(m,()=>`input "${this.inputNames[i[g]]}"`)),d=s.map((m,g)=>m?Qi(m,()=>`output "${this.outputNames[n[g]]}"`):null),c=await wf(this.sessionId,i,u,n,d,r),h={};for(let m=0;m<c.length;m++)h[this.outputNames[n[m]]]=s[m]??Rd(c[m]);return hr(),h}startProfiling(){}endProfiling(){$f(this.sessionId)}}}),zd,Sf,_g=Y(()=>{fr(),_f(),$g(),zd=()=>{if((typeof Fe.wasm.initTimeout!="number"||Fe.wasm.initTimeout<0)&&(Fe.wasm.initTimeout=0),typeof Fe.wasm.simd!="boolean"&&(Fe.wasm.simd=!0),typeof Fe.wasm.proxy!="boolean"&&(Fe.wasm.proxy=!1),typeof Fe.wasm.trace!="boolean"&&(Fe.wasm.trace=!1),typeof Fe.wasm.numThreads!="number"||!Number.isInteger(Fe.wasm.numThreads)||Fe.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Fe.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Fe.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Sf=class{async init(e){zd(),await mf(),await gf(e)}async createInferenceSessionHandler(e,t){let r=new xf;return await r.loadModel(e,t),Promise.resolve(r)}}}),Cf={};ka(Cf,{wasmBackend:()=>Ef});var Ef,xg=Y(()=>{_g(),Ef=new Sf});fr();fr();fr();var Sg="1.18.0";{let e=(xg(),ta(Cf)).wasmBackend;va("webgpu",e,5),va("webnn",e,5),va("cpu",e,10),va("wasm",e,10)}Object.defineProperty(Fe.versions,"web",{value:Sg,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//*!
 * Cropper.js v1.6.2
 * https://fengyuanchen.github.io/cropperjs
 *
 * Copyright 2015-present Chen Fengyuan
 * Released under the MIT license
 *
 * Date: 2024-04-21T07:43:05.335Z
 */function Pd(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),r.push.apply(r,a)}return r}function Tf(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};t%2?Pd(Object(r),!0).forEach(function(a){kg(e,a,r[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Pd(Object(r)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))})}return e}function Cg(e,t){if(typeof e!="object"||!e)return e;var r=e[Symbol.toPrimitive];if(r!==void 0){var a=r.call(e,t||"default");if(typeof a!="object")return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(e)}function kf(e){var t=Cg(e,"string");return typeof t=="symbol"?t:t+""}function ms(e){"@babel/helpers - typeof";return ms=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ms(e)}function Eg(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Md(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,kf(a.key),a)}}function Tg(e,t,r){return t&&Md(e.prototype,t),r&&Md(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function kg(e,t,r){return t=kf(t),t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Af(e){return Ag(e)||Ig(e)||Og(e)||Rg()}function Ag(e){if(Array.isArray(e))return gs(e)}function Ig(e){if(typeof Symbol<"u"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function Og(e,t){if(e){if(typeof e=="string")return gs(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);if(r==="Object"&&e.constructor&&(r=e.constructor.name),r==="Map"||r==="Set")return Array.from(e);if(r==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return gs(e,t)}}function gs(e,t){(t==null||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}function Rg(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var ui=typeof window<"u"&&typeof window.document<"u",wr=ui?window:{},js=ui&&wr.document.documentElement?"ontouchstart"in wr.document.documentElement:!1,Ks=ui?"PointerEvent"in wr:!1,tt="cropper",Ys="all",If="crop",Of="move",Rf="zoom",Xr="e",Qr="w",ba="s",Rr="n",Xa="ne",Qa="nw",Ja="se",Za="sw",ys="".concat(tt,"-crop"),Bd="".concat(tt,"-disabled"),Ht="".concat(tt,"-hidden"),Dd="".concat(tt,"-hide"),zg="".concat(tt,"-invisible"),si="".concat(tt,"-modal"),bs="".concat(tt,"-move"),sn="".concat(tt,"Action"),Un="".concat(tt,"Preview"),Xs="crop",zf="move",Pf="none",vs="crop",ws="cropend",$s="cropmove",_s="cropstart",Ld="dblclick",Pg=js?"touchstart":"mousedown",Mg=js?"touchmove":"mousemove",Bg=js?"touchend touchcancel":"mouseup",Nd=Ks?"pointerdown":Pg,Wd=Ks?"pointermove":Mg,Hd=Ks?"pointerup pointercancel":Bg,Ud="ready",Vd="resize",Gd="wheel",xs="zoom",Fd="image/jpeg",Dg=/^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/,Lg=/^data:/,Ng=/^data:image\/jpeg;base64,/,Wg=/^img|canvas$/i,Mf=200,Bf=100,qd={viewMode:0,dragMode:Xs,initialAspectRatio:NaN,aspectRatio:NaN,data:null,preview:"",responsive:!0,restore:!0,checkCrossOrigin:!0,checkOrientation:!0,modal:!0,guides:!0,center:!0,highlight:!0,background:!0,autoCrop:!0,autoCropArea:.8,movable:!0,rotatable:!0,scalable:!0,zoomable:!0,zoomOnTouch:!0,zoomOnWheel:!0,wheelZoomRatio:.1,cropBoxMovable:!0,cropBoxResizable:!0,toggleDragModeOnDblclick:!0,minCanvasWidth:0,minCanvasHeight:0,minCropBoxWidth:0,minCropBoxHeight:0,minContainerWidth:Mf,minContainerHeight:Bf,ready:null,cropstart:null,cropmove:null,cropend:null,crop:null,zoom:null},Hg='<div class="cropper-container" touch-action="none"><div class="cropper-wrap-box"><div class="cropper-canvas"></div></div><div class="cropper-drag-box"></div><div class="cropper-crop-box"><span class="cropper-view-box"></span><span class="cropper-dashed dashed-h"></span><span class="cropper-dashed dashed-v"></span><span class="cropper-center"></span><span class="cropper-face"></span><span class="cropper-line line-e" data-cropper-action="e"></span><span class="cropper-line line-n" data-cropper-action="n"></span><span class="cropper-line line-w" data-cropper-action="w"></span><span class="cropper-line line-s" data-cropper-action="s"></span><span class="cropper-point point-e" data-cropper-action="e"></span><span class="cropper-point point-n" data-cropper-action="n"></span><span class="cropper-point point-w" data-cropper-action="w"></span><span class="cropper-point point-s" data-cropper-action="s"></span><span class="cropper-point point-ne" data-cropper-action="ne"></span><span class="cropper-point point-nw" data-cropper-action="nw"></span><span class="cropper-point point-sw" data-cropper-action="sw"></span><span class="cropper-point point-se" data-cropper-action="se"></span></div></div>',Ug=Number.isNaN||wr.isNaN;function Re(e){return typeof e=="number"&&!Ug(e)}var jd=function(t){return t>0&&t<1/0};function Ji(e){return typeof e>"u"}function ia(e){return ms(e)==="object"&&e!==null}var Vg=Object.prototype.hasOwnProperty;function $a(e){if(!ia(e))return!1;try{var t=e.constructor,r=t.prototype;return t&&r&&Vg.call(r,"isPrototypeOf")}catch{return!1}}function Lt(e){return typeof e=="function"}var Gg=Array.prototype.slice;function Df(e){return Array.from?Array.from(e):Gg.call(e)}function gt(e,t){return e&&Lt(t)&&(Array.isArray(e)||Re(e.length)?Df(e).forEach(function(r,a){t.call(e,r,a,e)}):ia(e)&&Object.keys(e).forEach(function(r){t.call(e,e[r],r,e)})),e}var rt=Object.assign||function(t){for(var r=arguments.length,a=new Array(r>1?r-1:0),i=1;i<r;i++)a[i-1]=arguments[i];return ia(t)&&a.length>0&&a.forEach(function(s){ia(s)&&Object.keys(s).forEach(function(n){t[n]=s[n]})}),t},Fg=/\.\d*(?:0|9){12}\d*$/;function xa(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1e11;return Fg.test(e)?Math.round(e*t)/t:e}var qg=/^width|height|left|top|marginLeft|marginTop$/;function Br(e,t){var r=e.style;gt(t,function(a,i){qg.test(i)&&Re(a)&&(a="".concat(a,"px")),r[i]=a})}function jg(e,t){return e.classList?e.classList.contains(t):e.className.indexOf(t)>-1}function vt(e,t){if(t){if(Re(e.length)){gt(e,function(a){vt(a,t)});return}if(e.classList){e.classList.add(t);return}var r=e.className.trim();r?r.indexOf(t)<0&&(e.className="".concat(r," ").concat(t)):e.className=t}}function br(e,t){if(t){if(Re(e.length)){gt(e,function(r){br(r,t)});return}if(e.classList){e.classList.remove(t);return}e.className.indexOf(t)>=0&&(e.className=e.className.replace(t,""))}}function _a(e,t,r){if(t){if(Re(e.length)){gt(e,function(a){_a(a,t,r)});return}r?vt(e,t):br(e,t)}}var Kg=/([a-z\d])([A-Z])/g;function Qs(e){return e.replace(Kg,"$1-$2").toLowerCase()}function Ss(e,t){return ia(e[t])?e[t]:e.dataset?e.dataset[t]:e.getAttribute("data-".concat(Qs(t)))}function on(e,t,r){ia(r)?e[t]=r:e.dataset?e.dataset[t]=r:e.setAttribute("data-".concat(Qs(t)),r)}function Yg(e,t){if(ia(e[t]))try{delete e[t]}catch{e[t]=void 0}else if(e.dataset)try{delete e.dataset[t]}catch{e.dataset[t]=void 0}else e.removeAttribute("data-".concat(Qs(t)))}var Lf=/\s\s*/,Nf=function(){var e=!1;if(ui){var t=!1,r=function(){},a=Object.defineProperty({},"once",{get:function(){return e=!0,t},set:function(s){t=s}});wr.addEventListener("test",r,a),wr.removeEventListener("test",r,a)}return e}();function pr(e,t,r){var a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=r;t.trim().split(Lf).forEach(function(s){if(!Nf){var n=e.listeners;n&&n[s]&&n[s][r]&&(i=n[s][r],delete n[s][r],Object.keys(n[s]).length===0&&delete n[s],Object.keys(n).length===0&&delete e.listeners)}e.removeEventListener(s,i,a)})}function Xt(e,t,r){var a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=r;t.trim().split(Lf).forEach(function(s){if(a.once&&!Nf){var n=e.listeners,u=n===void 0?{}:n;i=function(){delete u[s][r],e.removeEventListener(s,i,a);for(var c=arguments.length,h=new Array(c),m=0;m<c;m++)h[m]=arguments[m];r.apply(e,h)},u[s]||(u[s]={}),u[s][r]&&e.removeEventListener(s,u[s][r],a),u[s][r]=i,e.listeners=u}e.addEventListener(s,i,a)})}function Sa(e,t,r){var a;return Lt(Event)&&Lt(CustomEvent)?a=new CustomEvent(t,{detail:r,bubbles:!0,cancelable:!0}):(a=document.createEvent("CustomEvent"),a.initCustomEvent(t,!0,!0,r)),e.dispatchEvent(a)}function Wf(e){var t=e.getBoundingClientRect();return{left:t.left+(window.pageXOffset-document.documentElement.clientLeft),top:t.top+(window.pageYOffset-document.documentElement.clientTop)}}var Zi=wr.location,Xg=/^(\w+:)\/\/([^:/?#]*):?(\d*)/i;function Kd(e){var t=e.match(Xg);return t!==null&&(t[1]!==Zi.protocol||t[2]!==Zi.hostname||t[3]!==Zi.port)}function Yd(e){var t="timestamp=".concat(new Date().getTime());return e+(e.indexOf("?")===-1?"?":"&")+t}function rn(e){var t=e.rotate,r=e.scaleX,a=e.scaleY,i=e.translateX,s=e.translateY,n=[];Re(i)&&i!==0&&n.push("translateX(".concat(i,"px)")),Re(s)&&s!==0&&n.push("translateY(".concat(s,"px)")),Re(t)&&t!==0&&n.push("rotate(".concat(t,"deg)")),Re(r)&&r!==1&&n.push("scaleX(".concat(r,")")),Re(a)&&a!==1&&n.push("scaleY(".concat(a,")"));var u=n.length?n.join(" "):"none";return{WebkitTransform:u,msTransform:u,transform:u}}function Qg(e){var t=Tf({},e),r=0;return gt(e,function(a,i){delete t[i],gt(t,function(s){var n=Math.abs(a.startX-s.startX),u=Math.abs(a.startY-s.startY),d=Math.abs(a.endX-s.endX),c=Math.abs(a.endY-s.endY),h=Math.sqrt(n*n+u*u),m=Math.sqrt(d*d+c*c),g=(m-h)/h;Math.abs(g)>Math.abs(r)&&(r=g)})}),r}function Vn(e,t){var r=e.pageX,a=e.pageY,i={endX:r,endY:a};return t?i:Tf({startX:r,startY:a},i)}function Jg(e){var t=0,r=0,a=0;return gt(e,function(i){var s=i.startX,n=i.startY;t+=s,r+=n,a+=1}),t/=a,r/=a,{pageX:t,pageY:r}}function Dr(e){var t=e.aspectRatio,r=e.height,a=e.width,i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"contain",s=jd(a),n=jd(r);if(s&&n){var u=r*t;i==="contain"&&u>a||i==="cover"&&u<a?r=a/t:a=r*t}else s?r=a/t:n&&(a=r*t);return{width:a,height:r}}function Zg(e){var t=e.width,r=e.height,a=e.degree;if(a=Math.abs(a)%180,a===90)return{width:r,height:t};var i=a%90*Math.PI/180,s=Math.sin(i),n=Math.cos(i),u=t*n+r*s,d=t*s+r*n;return a>90?{width:d,height:u}:{width:u,height:d}}function e1(e,t,r,a){var i=t.aspectRatio,s=t.naturalWidth,n=t.naturalHeight,u=t.rotate,d=u===void 0?0:u,c=t.scaleX,h=c===void 0?1:c,m=t.scaleY,g=m===void 0?1:m,w=r.aspectRatio,p=r.naturalWidth,_=r.naturalHeight,C=a.fillColor,E=C===void 0?"transparent":C,S=a.imageSmoothingEnabled,A=S===void 0?!0:S,O=a.imageSmoothingQuality,R=O===void 0?"low":O,k=a.maxWidth,P=k===void 0?1/0:k,W=a.maxHeight,H=W===void 0?1/0:W,j=a.minWidth,be=j===void 0?0:j,te=a.minHeight,ae=te===void 0?0:te,fe=document.createElement("canvas"),ve=fe.getContext("2d"),D=Dr({aspectRatio:w,width:P,height:H}),ue=Dr({aspectRatio:w,width:be,height:ae},"cover"),Z=Math.min(D.width,Math.max(ue.width,p)),ne=Math.min(D.height,Math.max(ue.height,_)),oe=Dr({aspectRatio:i,width:P,height:H}),M=Dr({aspectRatio:i,width:be,height:ae},"cover"),X=Math.min(oe.width,Math.max(M.width,s)),ie=Math.min(oe.height,Math.max(M.height,n)),$e=[-X/2,-ie/2,X,ie];return fe.width=xa(Z),fe.height=xa(ne),ve.fillStyle=E,ve.fillRect(0,0,Z,ne),ve.save(),ve.translate(Z/2,ne/2),ve.rotate(d*Math.PI/180),ve.scale(h,g),ve.imageSmoothingEnabled=A,ve.imageSmoothingQuality=R,ve.drawImage.apply(ve,[e].concat(Af($e.map(function(Ae){return Math.floor(xa(Ae))})))),ve.restore(),fe}var Hf=String.fromCharCode;function t1(e,t,r){var a="";r+=t;for(var i=t;i<r;i+=1)a+=Hf(e.getUint8(i));return a}var r1=/^data:.*,/;function a1(e){var t=e.replace(r1,""),r=atob(t),a=new ArrayBuffer(r.length),i=new Uint8Array(a);return gt(i,function(s,n){i[n]=r.charCodeAt(n)}),a}function n1(e,t){for(var r=[],a=8192,i=new Uint8Array(e);i.length>0;)r.push(Hf.apply(null,Df(i.subarray(0,a)))),i=i.subarray(a);return"data:".concat(t,";base64,").concat(btoa(r.join("")))}function i1(e){var t=new DataView(e),r;try{var a,i,s;if(t.getUint8(0)===255&&t.getUint8(1)===216)for(var n=t.byteLength,u=2;u+1<n;){if(t.getUint8(u)===255&&t.getUint8(u+1)===225){i=u;break}u+=1}if(i){var d=i+4,c=i+10;if(t1(t,d,4)==="Exif"){var h=t.getUint16(c);if(a=h===18761,(a||h===19789)&&t.getUint16(c+2,a)===42){var m=t.getUint32(c+4,a);m>=8&&(s=c+m)}}}if(s){var g=t.getUint16(s,a),w,p;for(p=0;p<g;p+=1)if(w=s+p*12+2,t.getUint16(w,a)===274){w+=8,r=t.getUint16(w,a),t.setUint16(w,1,a);break}}}catch{r=1}return r}function s1(e){var t=0,r=1,a=1;switch(e){case 2:r=-1;break;case 3:t=-180;break;case 4:a=-1;break;case 5:t=90,a=-1;break;case 6:t=90;break;case 7:t=90,r=-1;break;case 8:t=-90;break}return{rotate:t,scaleX:r,scaleY:a}}var o1={render:function(){this.initContainer(),this.initCanvas(),this.initCropBox(),this.renderCanvas(),this.cropped&&this.renderCropBox()},initContainer:function(){var t=this.element,r=this.options,a=this.container,i=this.cropper,s=Number(r.minContainerWidth),n=Number(r.minContainerHeight);vt(i,Ht),br(t,Ht);var u={width:Math.max(a.offsetWidth,s>=0?s:Mf),height:Math.max(a.offsetHeight,n>=0?n:Bf)};this.containerData=u,Br(i,{width:u.width,height:u.height}),vt(t,Ht),br(i,Ht)},initCanvas:function(){var t=this.containerData,r=this.imageData,a=this.options.viewMode,i=Math.abs(r.rotate)%180===90,s=i?r.naturalHeight:r.naturalWidth,n=i?r.naturalWidth:r.naturalHeight,u=s/n,d=t.width,c=t.height;t.height*u>t.width?a===3?d=t.height*u:c=t.width/u:a===3?c=t.width/u:d=t.height*u;var h={aspectRatio:u,naturalWidth:s,naturalHeight:n,width:d,height:c};this.canvasData=h,this.limited=a===1||a===2,this.limitCanvas(!0,!0),h.width=Math.min(Math.max(h.width,h.minWidth),h.maxWidth),h.height=Math.min(Math.max(h.height,h.minHeight),h.maxHeight),h.left=(t.width-h.width)/2,h.top=(t.height-h.height)/2,h.oldLeft=h.left,h.oldTop=h.top,this.initialCanvasData=rt({},h)},limitCanvas:function(t,r){var a=this.options,i=this.containerData,s=this.canvasData,n=this.cropBoxData,u=a.viewMode,d=s.aspectRatio,c=this.cropped&&n;if(t){var h=Number(a.minCanvasWidth)||0,m=Number(a.minCanvasHeight)||0;u>1?(h=Math.max(h,i.width),m=Math.max(m,i.height),u===3&&(m*d>h?h=m*d:m=h/d)):u>0&&(h?h=Math.max(h,c?n.width:0):m?m=Math.max(m,c?n.height:0):c&&(h=n.width,m=n.height,m*d>h?h=m*d:m=h/d));var g=Dr({aspectRatio:d,width:h,height:m});h=g.width,m=g.height,s.minWidth=h,s.minHeight=m,s.maxWidth=1/0,s.maxHeight=1/0}if(r)if(u>(c?0:1)){var w=i.width-s.width,p=i.height-s.height;s.minLeft=Math.min(0,w),s.minTop=Math.min(0,p),s.maxLeft=Math.max(0,w),s.maxTop=Math.max(0,p),c&&this.limited&&(s.minLeft=Math.min(n.left,n.left+(n.width-s.width)),s.minTop=Math.min(n.top,n.top+(n.height-s.height)),s.maxLeft=n.left,s.maxTop=n.top,u===2&&(s.width>=i.width&&(s.minLeft=Math.min(0,w),s.maxLeft=Math.max(0,w)),s.height>=i.height&&(s.minTop=Math.min(0,p),s.maxTop=Math.max(0,p))))}else s.minLeft=-s.width,s.minTop=-s.height,s.maxLeft=i.width,s.maxTop=i.height},renderCanvas:function(t,r){var a=this.canvasData,i=this.imageData;if(r){var s=Zg({width:i.naturalWidth*Math.abs(i.scaleX||1),height:i.naturalHeight*Math.abs(i.scaleY||1),degree:i.rotate||0}),n=s.width,u=s.height,d=a.width*(n/a.naturalWidth),c=a.height*(u/a.naturalHeight);a.left-=(d-a.width)/2,a.top-=(c-a.height)/2,a.width=d,a.height=c,a.aspectRatio=n/u,a.naturalWidth=n,a.naturalHeight=u,this.limitCanvas(!0,!1)}(a.width>a.maxWidth||a.width<a.minWidth)&&(a.left=a.oldLeft),(a.height>a.maxHeight||a.height<a.minHeight)&&(a.top=a.oldTop),a.width=Math.min(Math.max(a.width,a.minWidth),a.maxWidth),a.height=Math.min(Math.max(a.height,a.minHeight),a.maxHeight),this.limitCanvas(!1,!0),a.left=Math.min(Math.max(a.left,a.minLeft),a.maxLeft),a.top=Math.min(Math.max(a.top,a.minTop),a.maxTop),a.oldLeft=a.left,a.oldTop=a.top,Br(this.canvas,rt({width:a.width,height:a.height},rn({translateX:a.left,translateY:a.top}))),this.renderImage(t),this.cropped&&this.limited&&this.limitCropBox(!0,!0)},renderImage:function(t){var r=this.canvasData,a=this.imageData,i=a.naturalWidth*(r.width/r.naturalWidth),s=a.naturalHeight*(r.height/r.naturalHeight);rt(a,{width:i,height:s,left:(r.width-i)/2,top:(r.height-s)/2}),Br(this.image,rt({width:a.width,height:a.height},rn(rt({translateX:a.left,translateY:a.top},a)))),t&&this.output()},initCropBox:function(){var t=this.options,r=this.canvasData,a=t.aspectRatio||t.initialAspectRatio,i=Number(t.autoCropArea)||.8,s={width:r.width,height:r.height};a&&(r.height*a>r.width?s.height=s.width/a:s.width=s.height*a),this.cropBoxData=s,this.limitCropBox(!0,!0),s.width=Math.min(Math.max(s.width,s.minWidth),s.maxWidth),s.height=Math.min(Math.max(s.height,s.minHeight),s.maxHeight),s.width=Math.max(s.minWidth,s.width*i),s.height=Math.max(s.minHeight,s.height*i),s.left=r.left+(r.width-s.width)/2,s.top=r.top+(r.height-s.height)/2,s.oldLeft=s.left,s.oldTop=s.top,this.initialCropBoxData=rt({},s)},limitCropBox:function(t,r){var a=this.options,i=this.containerData,s=this.canvasData,n=this.cropBoxData,u=this.limited,d=a.aspectRatio;if(t){var c=Number(a.minCropBoxWidth)||0,h=Number(a.minCropBoxHeight)||0,m=u?Math.min(i.width,s.width,s.width+s.left,i.width-s.left):i.width,g=u?Math.min(i.height,s.height,s.height+s.top,i.height-s.top):i.height;c=Math.min(c,i.width),h=Math.min(h,i.height),d&&(c&&h?h*d>c?h=c/d:c=h*d:c?h=c/d:h&&(c=h*d),g*d>m?g=m/d:m=g*d),n.minWidth=Math.min(c,m),n.minHeight=Math.min(h,g),n.maxWidth=m,n.maxHeight=g}r&&(u?(n.minLeft=Math.max(0,s.left),n.minTop=Math.max(0,s.top),n.maxLeft=Math.min(i.width,s.left+s.width)-n.width,n.maxTop=Math.min(i.height,s.top+s.height)-n.height):(n.minLeft=0,n.minTop=0,n.maxLeft=i.width-n.width,n.maxTop=i.height-n.height))},renderCropBox:function(){var t=this.options,r=this.containerData,a=this.cropBoxData;(a.width>a.maxWidth||a.width<a.minWidth)&&(a.left=a.oldLeft),(a.height>a.maxHeight||a.height<a.minHeight)&&(a.top=a.oldTop),a.width=Math.min(Math.max(a.width,a.minWidth),a.maxWidth),a.height=Math.min(Math.max(a.height,a.minHeight),a.maxHeight),this.limitCropBox(!1,!0),a.left=Math.min(Math.max(a.left,a.minLeft),a.maxLeft),a.top=Math.min(Math.max(a.top,a.minTop),a.maxTop),a.oldLeft=a.left,a.oldTop=a.top,t.movable&&t.cropBoxMovable&&on(this.face,sn,a.width>=r.width&&a.height>=r.height?Of:Ys),Br(this.cropBox,rt({width:a.width,height:a.height},rn({translateX:a.left,translateY:a.top}))),this.cropped&&this.limited&&this.limitCanvas(!0,!0),this.disabled||this.output()},output:function(){this.preview(),Sa(this.element,vs,this.getData())}},u1={initPreview:function(){var t=this.element,r=this.crossOrigin,a=this.options.preview,i=r?this.crossOriginUrl:this.url,s=t.alt||"The image to preview",n=document.createElement("img");if(r&&(n.crossOrigin=r),n.src=i,n.alt=s,this.viewBox.appendChild(n),this.viewBoxImage=n,!!a){var u=a;typeof a=="string"?u=t.ownerDocument.querySelectorAll(a):a.querySelector&&(u=[a]),this.previews=u,gt(u,function(d){var c=document.createElement("img");on(d,Un,{width:d.offsetWidth,height:d.offsetHeight,html:d.innerHTML}),r&&(c.crossOrigin=r),c.src=i,c.alt=s,c.style.cssText='display:block;width:100%;height:auto;min-width:0!important;min-height:0!important;max-width:none!important;max-height:none!important;image-orientation:0deg!important;"',d.innerHTML="",d.appendChild(c)})}},resetPreview:function(){gt(this.previews,function(t){var r=Ss(t,Un);Br(t,{width:r.width,height:r.height}),t.innerHTML=r.html,Yg(t,Un)})},preview:function(){var t=this.imageData,r=this.canvasData,a=this.cropBoxData,i=a.width,s=a.height,n=t.width,u=t.height,d=a.left-r.left-t.left,c=a.top-r.top-t.top;!this.cropped||this.disabled||(Br(this.viewBoxImage,rt({width:n,height:u},rn(rt({translateX:-d,translateY:-c},t)))),gt(this.previews,function(h){var m=Ss(h,Un),g=m.width,w=m.height,p=g,_=w,C=1;i&&(C=g/i,_=s*C),s&&_>w&&(C=w/s,p=i*C,_=w),Br(h,{width:p,height:_}),Br(h.getElementsByTagName("img")[0],rt({width:n*C,height:u*C},rn(rt({translateX:-d*C,translateY:-c*C},t))))}))}},l1={bind:function(){var t=this.element,r=this.options,a=this.cropper;Lt(r.cropstart)&&Xt(t,_s,r.cropstart),Lt(r.cropmove)&&Xt(t,$s,r.cropmove),Lt(r.cropend)&&Xt(t,ws,r.cropend),Lt(r.crop)&&Xt(t,vs,r.crop),Lt(r.zoom)&&Xt(t,xs,r.zoom),Xt(a,Nd,this.onCropStart=this.cropStart.bind(this)),r.zoomable&&r.zoomOnWheel&&Xt(a,Gd,this.onWheel=this.wheel.bind(this),{passive:!1,capture:!0}),r.toggleDragModeOnDblclick&&Xt(a,Ld,this.onDblclick=this.dblclick.bind(this)),Xt(t.ownerDocument,Wd,this.onCropMove=this.cropMove.bind(this)),Xt(t.ownerDocument,Hd,this.onCropEnd=this.cropEnd.bind(this)),r.responsive&&Xt(window,Vd,this.onResize=this.resize.bind(this))},unbind:function(){var t=this.element,r=this.options,a=this.cropper;Lt(r.cropstart)&&pr(t,_s,r.cropstart),Lt(r.cropmove)&&pr(t,$s,r.cropmove),Lt(r.cropend)&&pr(t,ws,r.cropend),Lt(r.crop)&&pr(t,vs,r.crop),Lt(r.zoom)&&pr(t,xs,r.zoom),pr(a,Nd,this.onCropStart),r.zoomable&&r.zoomOnWheel&&pr(a,Gd,this.onWheel,{passive:!1,capture:!0}),r.toggleDragModeOnDblclick&&pr(a,Ld,this.onDblclick),pr(t.ownerDocument,Wd,this.onCropMove),pr(t.ownerDocument,Hd,this.onCropEnd),r.responsive&&pr(window,Vd,this.onResize)}},d1={resize:function(){if(!this.disabled){var t=this.options,r=this.container,a=this.containerData,i=r.offsetWidth/a.width,s=r.offsetHeight/a.height,n=Math.abs(i-1)>Math.abs(s-1)?i:s;if(n!==1){var u,d;t.restore&&(u=this.getCanvasData(),d=this.getCropBoxData()),this.render(),t.restore&&(this.setCanvasData(gt(u,function(c,h){u[h]=c*n})),this.setCropBoxData(gt(d,function(c,h){d[h]=c*n})))}}},dblclick:function(){this.disabled||this.options.dragMode===Pf||this.setDragMode(jg(this.dragBox,ys)?zf:Xs)},wheel:function(t){var r=this,a=Number(this.options.wheelZoomRatio)||.1,i=1;this.disabled||(t.preventDefault(),!this.wheeling&&(this.wheeling=!0,setTimeout(function(){r.wheeling=!1},50),t.deltaY?i=t.deltaY>0?1:-1:t.wheelDelta?i=-t.wheelDelta/120:t.detail&&(i=t.detail>0?1:-1),this.zoom(-i*a,t)))},cropStart:function(t){var r=t.buttons,a=t.button;if(!(this.disabled||(t.type==="mousedown"||t.type==="pointerdown"&&t.pointerType==="mouse")&&(Re(r)&&r!==1||Re(a)&&a!==0||t.ctrlKey))){var i=this.options,s=this.pointers,n;t.changedTouches?gt(t.changedTouches,function(u){s[u.identifier]=Vn(u)}):s[t.pointerId||0]=Vn(t),Object.keys(s).length>1&&i.zoomable&&i.zoomOnTouch?n=Rf:n=Ss(t.target,sn),Dg.test(n)&&Sa(this.element,_s,{originalEvent:t,action:n})!==!1&&(t.preventDefault(),this.action=n,this.cropping=!1,n===If&&(this.cropping=!0,vt(this.dragBox,si)))}},cropMove:function(t){var r=this.action;if(!(this.disabled||!r)){var a=this.pointers;t.preventDefault(),Sa(this.element,$s,{originalEvent:t,action:r})!==!1&&(t.changedTouches?gt(t.changedTouches,function(i){rt(a[i.identifier]||{},Vn(i,!0))}):rt(a[t.pointerId||0]||{},Vn(t,!0)),this.change(t))}},cropEnd:function(t){if(!this.disabled){var r=this.action,a=this.pointers;t.changedTouches?gt(t.changedTouches,function(i){delete a[i.identifier]}):delete a[t.pointerId||0],r&&(t.preventDefault(),Object.keys(a).length||(this.action=""),this.cropping&&(this.cropping=!1,_a(this.dragBox,si,this.cropped&&this.options.modal)),Sa(this.element,ws,{originalEvent:t,action:r}))}}},p1={change:function(t){var r=this.options,a=this.canvasData,i=this.containerData,s=this.cropBoxData,n=this.pointers,u=this.action,d=r.aspectRatio,c=s.left,h=s.top,m=s.width,g=s.height,w=c+m,p=h+g,_=0,C=0,E=i.width,S=i.height,A=!0,O;!d&&t.shiftKey&&(d=m&&g?m/g:1),this.limited&&(_=s.minLeft,C=s.minTop,E=_+Math.min(i.width,a.width,a.left+a.width),S=C+Math.min(i.height,a.height,a.top+a.height));var R=n[Object.keys(n)[0]],k={x:R.endX-R.startX,y:R.endY-R.startY},P=function(H){switch(H){case Xr:w+k.x>E&&(k.x=E-w);break;case Qr:c+k.x<_&&(k.x=_-c);break;case Rr:h+k.y<C&&(k.y=C-h);break;case ba:p+k.y>S&&(k.y=S-p);break}};switch(u){case Ys:c+=k.x,h+=k.y;break;case Xr:if(k.x>=0&&(w>=E||d&&(h<=C||p>=S))){A=!1;break}P(Xr),m+=k.x,m<0&&(u=Qr,m=-m,c-=m),d&&(g=m/d,h+=(s.height-g)/2);break;case Rr:if(k.y<=0&&(h<=C||d&&(c<=_||w>=E))){A=!1;break}P(Rr),g-=k.y,h+=k.y,g<0&&(u=ba,g=-g,h-=g),d&&(m=g*d,c+=(s.width-m)/2);break;case Qr:if(k.x<=0&&(c<=_||d&&(h<=C||p>=S))){A=!1;break}P(Qr),m-=k.x,c+=k.x,m<0&&(u=Xr,m=-m,c-=m),d&&(g=m/d,h+=(s.height-g)/2);break;case ba:if(k.y>=0&&(p>=S||d&&(c<=_||w>=E))){A=!1;break}P(ba),g+=k.y,g<0&&(u=Rr,g=-g,h-=g),d&&(m=g*d,c+=(s.width-m)/2);break;case Xa:if(d){if(k.y<=0&&(h<=C||w>=E)){A=!1;break}P(Rr),g-=k.y,h+=k.y,m=g*d}else P(Rr),P(Xr),k.x>=0?w<E?m+=k.x:k.y<=0&&h<=C&&(A=!1):m+=k.x,k.y<=0?h>C&&(g-=k.y,h+=k.y):(g-=k.y,h+=k.y);m<0&&g<0?(u=Za,g=-g,m=-m,h-=g,c-=m):m<0?(u=Qa,m=-m,c-=m):g<0&&(u=Ja,g=-g,h-=g);break;case Qa:if(d){if(k.y<=0&&(h<=C||c<=_)){A=!1;break}P(Rr),g-=k.y,h+=k.y,m=g*d,c+=s.width-m}else P(Rr),P(Qr),k.x<=0?c>_?(m-=k.x,c+=k.x):k.y<=0&&h<=C&&(A=!1):(m-=k.x,c+=k.x),k.y<=0?h>C&&(g-=k.y,h+=k.y):(g-=k.y,h+=k.y);m<0&&g<0?(u=Ja,g=-g,m=-m,h-=g,c-=m):m<0?(u=Xa,m=-m,c-=m):g<0&&(u=Za,g=-g,h-=g);break;case Za:if(d){if(k.x<=0&&(c<=_||p>=S)){A=!1;break}P(Qr),m-=k.x,c+=k.x,g=m/d}else P(ba),P(Qr),k.x<=0?c>_?(m-=k.x,c+=k.x):k.y>=0&&p>=S&&(A=!1):(m-=k.x,c+=k.x),k.y>=0?p<S&&(g+=k.y):g+=k.y;m<0&&g<0?(u=Xa,g=-g,m=-m,h-=g,c-=m):m<0?(u=Ja,m=-m,c-=m):g<0&&(u=Qa,g=-g,h-=g);break;case Ja:if(d){if(k.x>=0&&(w>=E||p>=S)){A=!1;break}P(Xr),m+=k.x,g=m/d}else P(ba),P(Xr),k.x>=0?w<E?m+=k.x:k.y>=0&&p>=S&&(A=!1):m+=k.x,k.y>=0?p<S&&(g+=k.y):g+=k.y;m<0&&g<0?(u=Qa,g=-g,m=-m,h-=g,c-=m):m<0?(u=Za,m=-m,c-=m):g<0&&(u=Xa,g=-g,h-=g);break;case Of:this.move(k.x,k.y),A=!1;break;case Rf:this.zoom(Qg(n),t),A=!1;break;case If:if(!k.x||!k.y){A=!1;break}O=Wf(this.cropper),c=R.startX-O.left,h=R.startY-O.top,m=s.minWidth,g=s.minHeight,k.x>0?u=k.y>0?Ja:Xa:k.x<0&&(c-=m,u=k.y>0?Za:Qa),k.y<0&&(h-=g),this.cropped||(br(this.cropBox,Ht),this.cropped=!0,this.limited&&this.limitCropBox(!0,!0));break}A&&(s.width=m,s.height=g,s.left=c,s.top=h,this.action=u,this.renderCropBox()),gt(n,function(W){W.startX=W.endX,W.startY=W.endY})}},c1={crop:function(){return this.ready&&!this.cropped&&!this.disabled&&(this.cropped=!0,this.limitCropBox(!0,!0),this.options.modal&&vt(this.dragBox,si),br(this.cropBox,Ht),this.setCropBoxData(this.initialCropBoxData)),this},reset:function(){return this.ready&&!this.disabled&&(this.imageData=rt({},this.initialImageData),this.canvasData=rt({},this.initialCanvasData),this.cropBoxData=rt({},this.initialCropBoxData),this.renderCanvas(),this.cropped&&this.renderCropBox()),this},clear:function(){return this.cropped&&!this.disabled&&(rt(this.cropBoxData,{left:0,top:0,width:0,height:0}),this.cropped=!1,this.renderCropBox(),this.limitCanvas(!0,!0),this.renderCanvas(),br(this.dragBox,si),vt(this.cropBox,Ht)),this},replace:function(t){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return!this.disabled&&t&&(this.isImg&&(this.element.src=t),r?(this.url=t,this.image.src=t,this.ready&&(this.viewBoxImage.src=t,gt(this.previews,function(a){a.getElementsByTagName("img")[0].src=t}))):(this.isImg&&(this.replaced=!0),this.options.data=null,this.uncreate(),this.load(t))),this},enable:function(){return this.ready&&this.disabled&&(this.disabled=!1,br(this.cropper,Bd)),this},disable:function(){return this.ready&&!this.disabled&&(this.disabled=!0,vt(this.cropper,Bd)),this},destroy:function(){var t=this.element;return t[tt]?(t[tt]=void 0,this.isImg&&this.replaced&&(t.src=this.originalUrl),this.uncreate(),this):this},move:function(t){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:t,a=this.canvasData,i=a.left,s=a.top;return this.moveTo(Ji(t)?t:i+Number(t),Ji(r)?r:s+Number(r))},moveTo:function(t){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:t,a=this.canvasData,i=!1;return t=Number(t),r=Number(r),this.ready&&!this.disabled&&this.options.movable&&(Re(t)&&(a.left=t,i=!0),Re(r)&&(a.top=r,i=!0),i&&this.renderCanvas(!0)),this},zoom:function(t,r){var a=this.canvasData;return t=Number(t),t<0?t=1/(1-t):t=1+t,this.zoomTo(a.width*t/a.naturalWidth,null,r)},zoomTo:function(t,r,a){var i=this.options,s=this.canvasData,n=s.width,u=s.height,d=s.naturalWidth,c=s.naturalHeight;if(t=Number(t),t>=0&&this.ready&&!this.disabled&&i.zoomable){var h=d*t,m=c*t;if(Sa(this.element,xs,{ratio:t,oldRatio:n/d,originalEvent:a})===!1)return this;if(a){var g=this.pointers,w=Wf(this.cropper),p=g&&Object.keys(g).length?Jg(g):{pageX:a.pageX,pageY:a.pageY};s.left-=(h-n)*((p.pageX-w.left-s.left)/n),s.top-=(m-u)*((p.pageY-w.top-s.top)/u)}else $a(r)&&Re(r.x)&&Re(r.y)?(s.left-=(h-n)*((r.x-s.left)/n),s.top-=(m-u)*((r.y-s.top)/u)):(s.left-=(h-n)/2,s.top-=(m-u)/2);s.width=h,s.height=m,this.renderCanvas(!0)}return this},rotate:function(t){return this.rotateTo((this.imageData.rotate||0)+Number(t))},rotateTo:function(t){return t=Number(t),Re(t)&&this.ready&&!this.disabled&&this.options.rotatable&&(this.imageData.rotate=t%360,this.renderCanvas(!0,!0)),this},scaleX:function(t){var r=this.imageData.scaleY;return this.scale(t,Re(r)?r:1)},scaleY:function(t){var r=this.imageData.scaleX;return this.scale(Re(r)?r:1,t)},scale:function(t){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:t,a=this.imageData,i=!1;return t=Number(t),r=Number(r),this.ready&&!this.disabled&&this.options.scalable&&(Re(t)&&(a.scaleX=t,i=!0),Re(r)&&(a.scaleY=r,i=!0),i&&this.renderCanvas(!0,!0)),this},getData:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,r=this.options,a=this.imageData,i=this.canvasData,s=this.cropBoxData,n;if(this.ready&&this.cropped){n={x:s.left-i.left,y:s.top-i.top,width:s.width,height:s.height};var u=a.width/a.naturalWidth;if(gt(n,function(h,m){n[m]=h/u}),t){var d=Math.round(n.y+n.height),c=Math.round(n.x+n.width);n.x=Math.round(n.x),n.y=Math.round(n.y),n.width=c-n.x,n.height=d-n.y}}else n={x:0,y:0,width:0,height:0};return r.rotatable&&(n.rotate=a.rotate||0),r.scalable&&(n.scaleX=a.scaleX||1,n.scaleY=a.scaleY||1),n},setData:function(t){var r=this.options,a=this.imageData,i=this.canvasData,s={};if(this.ready&&!this.disabled&&$a(t)){var n=!1;r.rotatable&&Re(t.rotate)&&t.rotate!==a.rotate&&(a.rotate=t.rotate,n=!0),r.scalable&&(Re(t.scaleX)&&t.scaleX!==a.scaleX&&(a.scaleX=t.scaleX,n=!0),Re(t.scaleY)&&t.scaleY!==a.scaleY&&(a.scaleY=t.scaleY,n=!0)),n&&this.renderCanvas(!0,!0);var u=a.width/a.naturalWidth;Re(t.x)&&(s.left=t.x*u+i.left),Re(t.y)&&(s.top=t.y*u+i.top),Re(t.width)&&(s.width=t.width*u),Re(t.height)&&(s.height=t.height*u),this.setCropBoxData(s)}return this},getContainerData:function(){return this.ready?rt({},this.containerData):{}},getImageData:function(){return this.sized?rt({},this.imageData):{}},getCanvasData:function(){var t=this.canvasData,r={};return this.ready&&gt(["left","top","width","height","naturalWidth","naturalHeight"],function(a){r[a]=t[a]}),r},setCanvasData:function(t){var r=this.canvasData,a=r.aspectRatio;return this.ready&&!this.disabled&&$a(t)&&(Re(t.left)&&(r.left=t.left),Re(t.top)&&(r.top=t.top),Re(t.width)?(r.width=t.width,r.height=t.width/a):Re(t.height)&&(r.height=t.height,r.width=t.height*a),this.renderCanvas(!0)),this},getCropBoxData:function(){var t=this.cropBoxData,r;return this.ready&&this.cropped&&(r={left:t.left,top:t.top,width:t.width,height:t.height}),r||{}},setCropBoxData:function(t){var r=this.cropBoxData,a=this.options.aspectRatio,i,s;return this.ready&&this.cropped&&!this.disabled&&$a(t)&&(Re(t.left)&&(r.left=t.left),Re(t.top)&&(r.top=t.top),Re(t.width)&&t.width!==r.width&&(i=!0,r.width=t.width),Re(t.height)&&t.height!==r.height&&(s=!0,r.height=t.height),a&&(i?r.height=r.width/a:s&&(r.width=r.height*a)),this.renderCropBox()),this},getCroppedCanvas:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!this.ready||!window.HTMLCanvasElement)return null;var r=this.canvasData,a=e1(this.image,this.imageData,r,t);if(!this.cropped)return a;var i=this.getData(t.rounded),s=i.x,n=i.y,u=i.width,d=i.height,c=a.width/Math.floor(r.naturalWidth);c!==1&&(s*=c,n*=c,u*=c,d*=c);var h=u/d,m=Dr({aspectRatio:h,width:t.maxWidth||1/0,height:t.maxHeight||1/0}),g=Dr({aspectRatio:h,width:t.minWidth||0,height:t.minHeight||0},"cover"),w=Dr({aspectRatio:h,width:t.width||(c!==1?a.width:u),height:t.height||(c!==1?a.height:d)}),p=w.width,_=w.height;p=Math.min(m.width,Math.max(g.width,p)),_=Math.min(m.height,Math.max(g.height,_));var C=document.createElement("canvas"),E=C.getContext("2d");C.width=xa(p),C.height=xa(_),E.fillStyle=t.fillColor||"transparent",E.fillRect(0,0,p,_);var S=t.imageSmoothingEnabled,A=S===void 0?!0:S,O=t.imageSmoothingQuality;E.imageSmoothingEnabled=A,O&&(E.imageSmoothingQuality=O);var R=a.width,k=a.height,P=s,W=n,H,j,be,te,ae,fe;P<=-u||P>R?(P=0,H=0,be=0,ae=0):P<=0?(be=-P,P=0,H=Math.min(R,u+P),ae=H):P<=R&&(be=0,H=Math.min(u,R-P),ae=H),H<=0||W<=-d||W>k?(W=0,j=0,te=0,fe=0):W<=0?(te=-W,W=0,j=Math.min(k,d+W),fe=j):W<=k&&(te=0,j=Math.min(d,k-W),fe=j);var ve=[P,W,H,j];if(ae>0&&fe>0){var D=p/u;ve.push(be*D,te*D,ae*D,fe*D)}return E.drawImage.apply(E,[a].concat(Af(ve.map(function(ue){return Math.floor(xa(ue))})))),C},setAspectRatio:function(t){var r=this.options;return!this.disabled&&!Ji(t)&&(r.aspectRatio=Math.max(0,t)||NaN,this.ready&&(this.initCropBox(),this.cropped&&this.renderCropBox())),this},setDragMode:function(t){var r=this.options,a=this.dragBox,i=this.face;if(this.ready&&!this.disabled){var s=t===Xs,n=r.movable&&t===zf;t=s||n?t:Pf,r.dragMode=t,on(a,sn,t),_a(a,ys,s),_a(a,bs,n),r.cropBoxMovable||(on(i,sn,t),_a(i,ys,s),_a(i,bs,n))}return this}},h1=wr.Cropper,f1=function(){function e(t){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(Eg(this,e),!t||!Wg.test(t.tagName))throw new Error("The first argument is required and must be an <img> or <canvas> element.");this.element=t,this.options=rt({},qd,$a(r)&&r),this.cropped=!1,this.disabled=!1,this.pointers={},this.ready=!1,this.reloading=!1,this.replaced=!1,this.sized=!1,this.sizing=!1,this.init()}return Tg(e,[{key:"init",value:function(){var r=this.element,a=r.tagName.toLowerCase(),i;if(!r[tt]){if(r[tt]=this,a==="img"){if(this.isImg=!0,i=r.getAttribute("src")||"",this.originalUrl=i,!i)return;i=r.src}else a==="canvas"&&window.HTMLCanvasElement&&(i=r.toDataURL());this.load(i)}}},{key:"load",value:function(r){var a=this;if(r){this.url=r,this.imageData={};var i=this.element,s=this.options;if(!s.rotatable&&!s.scalable&&(s.checkOrientation=!1),!s.checkOrientation||!window.ArrayBuffer){this.clone();return}if(Lg.test(r)){Ng.test(r)?this.read(a1(r)):this.clone();return}var n=new XMLHttpRequest,u=this.clone.bind(this);this.reloading=!0,this.xhr=n,n.onabort=u,n.onerror=u,n.ontimeout=u,n.onprogress=function(){n.getResponseHeader("content-type")!==Fd&&n.abort()},n.onload=function(){a.read(n.response)},n.onloadend=function(){a.reloading=!1,a.xhr=null},s.checkCrossOrigin&&Kd(r)&&i.crossOrigin&&(r=Yd(r)),n.open("GET",r,!0),n.responseType="arraybuffer",n.withCredentials=i.crossOrigin==="use-credentials",n.send()}}},{key:"read",value:function(r){var a=this.options,i=this.imageData,s=i1(r),n=0,u=1,d=1;if(s>1){this.url=n1(r,Fd);var c=s1(s);n=c.rotate,u=c.scaleX,d=c.scaleY}a.rotatable&&(i.rotate=n),a.scalable&&(i.scaleX=u,i.scaleY=d),this.clone()}},{key:"clone",value:function(){var r=this.element,a=this.url,i=r.crossOrigin,s=a;this.options.checkCrossOrigin&&Kd(a)&&(i||(i="anonymous"),s=Yd(a)),this.crossOrigin=i,this.crossOriginUrl=s;var n=document.createElement("img");i&&(n.crossOrigin=i),n.src=s||a,n.alt=r.alt||"The image to crop",this.image=n,n.onload=this.start.bind(this),n.onerror=this.stop.bind(this),vt(n,Dd),r.parentNode.insertBefore(n,r.nextSibling)}},{key:"start",value:function(){var r=this,a=this.image;a.onload=null,a.onerror=null,this.sizing=!0;var i=wr.navigator&&/(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(wr.navigator.userAgent),s=function(c,h){rt(r.imageData,{naturalWidth:c,naturalHeight:h,aspectRatio:c/h}),r.initialImageData=rt({},r.imageData),r.sizing=!1,r.sized=!0,r.build()};if(a.naturalWidth&&!i){s(a.naturalWidth,a.naturalHeight);return}var n=document.createElement("img"),u=document.body||document.documentElement;this.sizingImage=n,n.onload=function(){s(n.width,n.height),i||u.removeChild(n)},n.src=a.src,i||(n.style.cssText="left:0;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;opacity:0;position:absolute;top:0;z-index:-1;",u.appendChild(n))}},{key:"stop",value:function(){var r=this.image;r.onload=null,r.onerror=null,r.parentNode.removeChild(r),this.image=null}},{key:"build",value:function(){if(!(!this.sized||this.ready)){var r=this.element,a=this.options,i=this.image,s=r.parentNode,n=document.createElement("div");n.innerHTML=Hg;var u=n.querySelector(".".concat(tt,"-container")),d=u.querySelector(".".concat(tt,"-canvas")),c=u.querySelector(".".concat(tt,"-drag-box")),h=u.querySelector(".".concat(tt,"-crop-box")),m=h.querySelector(".".concat(tt,"-face"));this.container=s,this.cropper=u,this.canvas=d,this.dragBox=c,this.cropBox=h,this.viewBox=u.querySelector(".".concat(tt,"-view-box")),this.face=m,d.appendChild(i),vt(r,Ht),s.insertBefore(u,r.nextSibling),br(i,Dd),this.initPreview(),this.bind(),a.initialAspectRatio=Math.max(0,a.initialAspectRatio)||NaN,a.aspectRatio=Math.max(0,a.aspectRatio)||NaN,a.viewMode=Math.max(0,Math.min(3,Math.round(a.viewMode)))||0,vt(h,Ht),a.guides||vt(h.getElementsByClassName("".concat(tt,"-dashed")),Ht),a.center||vt(h.getElementsByClassName("".concat(tt,"-center")),Ht),a.background&&vt(u,"".concat(tt,"-bg")),a.highlight||vt(m,zg),a.cropBoxMovable&&(vt(m,bs),on(m,sn,Ys)),a.cropBoxResizable||(vt(h.getElementsByClassName("".concat(tt,"-line")),Ht),vt(h.getElementsByClassName("".concat(tt,"-point")),Ht)),this.render(),this.ready=!0,this.setDragMode(a.dragMode),a.autoCrop&&this.crop(),this.setData(a.data),Lt(a.ready)&&Xt(r,Ud,a.ready,{once:!0}),Sa(r,Ud)}}},{key:"unbuild",value:function(){if(this.ready){this.ready=!1,this.unbind(),this.resetPreview();var r=this.cropper.parentNode;r&&r.removeChild(this.cropper),br(this.element,Ht)}}},{key:"uncreate",value:function(){this.ready?(this.unbuild(),this.ready=!1,this.cropped=!1):this.sizing?(this.sizingImage.onload=null,this.sizing=!1,this.sized=!1):this.reloading?(this.xhr.onabort=null,this.xhr.abort()):this.image&&this.stop()}}],[{key:"noConflict",value:function(){return window.Cropper=h1,e}},{key:"setDefaults",value:function(r){rt(qd,$a(r)&&r)}}])}();rt(f1.prototype,o1,u1,l1,d1,p1,c1);const m1=["1355868","1355920","1355932","1355936","1355937","1355955","1355959","1355961","1355978","1355990","1356003","1356022","1356037","1356055","1356075","1356076","1356111","1356126","1356138","1356257","1356278","1356279","1356309","1356379","1356380","1356382","1356420","1356421","1356428","1356469","1356692","1356781","1356816","1356847","1356901","1357330","1357331","1357367","1357379","1357506","1357635","1357652","1357677","1357681","1357682","1357705","1358094","1358095","1358096","1358097","1358099","1358101","1358102","1358103","1358105","1358108","1358112","1358119","1358127","1358132","1358133","1358150","1358193","1358302","1358365","1358519","1358605","1358608","1358689","1358690","1358691","1358695","1358699","1358700","1358701","1358703","1358704","1358706","1358710","1358711","1358748","1358749","1358750","1358751","1358752","1358755","1358759","1358760","1358766","1359060","1359064","1359065","1359197","1359331","1359332","1359359","1359364","1359483","1359485","1359486","1359488","1359489","1359495","1359497","1359498","1359502","1359505","1359506","1359508","1359510","1359513","1359514","1359517","1359518","1359519","1359521","1359523","1359524","1359525","1359526","1359528","1359530","1359616","1359620","1359622","1359625","1359669","1359806","1359815","1359821","1360004","1360147","1360148","1360150","1360152","1360153","1360154","1360427","1360550","1360555","1360588","1360590","1360591","1360618","1360671","1360687","1360759","1360808","1360811","1360835","1360838","1360976","1360978","1360998","1361024","1361233","1361316","1361357","1361507","1361508","1361524","1361655","1361656","1361658","1361660","1361663","1361666","1361668","1361672","1361704","1361745","1361759","1361823","1361824","1361847","1361850","1361891","1362024","1362064","1362080","1362192","1362294","1362385","1362398","1362434","1362435","1362489","1362490","1362516","1362582","1362834","1362927","1362928","1362954","1363016","1363019","1363021","1363110","1363117","1363126","1363127","1363128","1363129","1363130","1363227","1363336","1363343","1363359","1363451","1363463","1363464","1363489","1363490","1363491","1363492","1363493","1363613","1363688","1363699","1363700","1363701","1363703","1363735","1363737","1363738","1363739","1363740","1363743","1363749","1363750","1363764","1363769","1363770","1363772","1363778","1363871","1363872","1363970","1363991","1364000","1364099","1364112","1364158","1364159","1364161","1364164","1364165","1364172","1364173","1364440","1364512","1365712","1365961","1366875","1366898","1366899","1366997","1367060","1367087","1367267","1367343","1367369","1367431","1367432","1367781","1367784","1367921","1367938","1367949","1367998","1369472","1369887","1369960","1370279","1370991","1370993","1371680","1371691","1372016","1372602","1373151","1373231","1373259","1373530","1373535","1374048","1374448","1374450","1374466","1374933","1375776","1375797","1375895","1375954","1375965","1375966","1376366","1376703","1376726","1379303","1379513","1379556","1379585","1380874","1380904","1381173","1381468","1382099","1383149","1383772","1383774","1384199","1384482","1384485","1384497","1384499","1384500","1384760","1385700","1385701","1385749","1385853","1385937","1387107","1387284","1387687","1387727","1388905","1388911","1389016","1389031","1389044","1389078","1389230","1389231","1389294","1389297","1389307","1389308","1389426","1389442","1389492","1389510","1389553","1389567","1389628","1389630","1389633","1389921","1389966","1390617","1390637","1390956","1390957","1391110","1391112","1391113","1391167","1391184","1391190","1391192","1391193","1391197","1391198","1391206","1391209","1391221","1391226","1391235","1391250","1391326","1391483","1391498","1391499","1391529","1391530","1391648","1391649","1391652","1391654","1391762","1391797","1391805","1391807","1391809","1391810","1391821","1391868","1391953","1391960","1391961","1391962","1391963","1391964","1391967","1392093","1392094","1392096","1392254","1392361","1392365","1392418","1392475","1392601","1392653","1392654","1392658","1392689","1392690","1392691","1392695","1392730","1392777","1393241","1393242","1393245","1393248","1393250","1393253","1393254","1393257","1393294","1393322","1393393","1393414","1393416","1393418","1393423","1393425","1393449","1393450","1393465","1393466","1393537","1393614","1393654","1393656","1393725","1393789","1393792","1393796","1393818","1393823","1393846","1393850","1393851","1393933","1393945","1393946","1393965","1393967","1393968","1393980","1393981","1394072","1394073","1394077","1394078","1394082","1394088","1394114","1394120","1394128","1394143","1394153","1394164","1394169","1394183","1394189","1394313","1394378","1394382","1394383","1394394","1394396","1394399","1394401","1394404","1394405","1394406","1394418","1394420","1394453","1394454","1394455","1394457","1394460","1394489","1394498","1394502","1394504","1394508","1394513","1394549","1394580","1394591","1394648","1394714","1394759","1394994","1394995","1395391","1395720","1395721","1395722","1396133","1396134","1396143","1396144","1396145","1396156","1396159","1396161","1396165","1396708","1396713","1396754","1396758","1396823","1396824","1396842","1396843","1396858","1396867","1396869","1397208","1397209","1397268","1397269","1397303","1397305","1397311","1397312","1397313","1397349","1397351","1397352","1397364","1397379","1397387","1397403","1397407","1397408","1397420","1397491","1397510","1397514","1397515","1397550","1397551","1397556","1397585","1397598","1397613","1397841","1397959","1398041","1398111","1398125","1398128","1398130","1398178","1398196","1398274","1398326","1398333","1398355","1398444","1398447","1398469","1398480","1398494","1398513","1398515","1398526","1398567","1398592","1398608","1398615","1398700","1398805","1398830","1399063","1399141","1399145","1399157","1399231","1399338","1399384","1399667","1399783","1399803","1399804","1399920","1400060","1400080","1400081","1400096","1400100","1400104","1400110","1400471","1400478","1400798","1400844","1401141","1401148","1401211","1401216","1401222","1401242","1401701","1401711","1401718","1401735","1401736","1401737","1401883","1402303","1402356","1402423","1402433","1402464","1402576","1402811","1402920","1402921","1402924","1402925","1402926","1403272","1403479","1403654","1403826","1403967","1404002","1404481","1404745","1404776","1404804","1405061","1405088","1405252","1405641","1405653","1405685","1405686","1405703","1406426","1406486","1406756","1406863","1407077","1407379","1407873","1407874","1408034","1408037","1408041","1408045","1408066","1408071","1408092","1408107","1408160","1408214","1408227","1408284","1408386","1408401","1408421","1408451","1408468","1408490","1408502","1408507","1408508","1408509","1408557","1408594","1408657","1408688","1408718","1408727","1408734","1408738","1408774","1408788","1408810","1408812","1408845","1408869","1408874","1408953","1408961","1408979","1409185","1409191","1409195","1409214","1409215","1409216","1409238","1409239","1409283","1409292","1409295","1409296","1409299","1409328","1409407","1409521","1409525","1409550","1409551","1409552","1409586","1409642","1409705","1409746","1409824","1409834","1409839","1409918","1409919","1409932","1410024","1410025","1410147","1410168","1411423","1411462","1411466","1411469","1411472","1411520","1411524","1411687","1411700","1411760","1411827","1411829","1411832","1411833","1411834","1411925","1412311","1412313","1412314","1412337","1412344","1412368","1412410","1412412","1412413","1412418","1412444","1412445","1412595","1412596","1412659","1412661","1412662","1412663","1412697","1412698","1412699","1412740","1412745","1412831","1412833","1412834","1412888","1412889","1412946","1412992","1413002","1413013","1413391","1413751","1413752","1413753","1413755","1413757","1413832","1413835","1414057","1414058","1414272","1414275","1414276","1414397","1414746","1414808","1414903","1414924","1415584","1415593","1415911","1416420","1416509","1417117","1417506","1417546","1417900","1417916","1418033","1418061","1418084","1418102","1418140","1418146","1418191","1418192","1418295","1418345","1418475","1418545","1418546","1418547","1418563","1418576","1418653","1418655","1418659","1418665","1418732","1418984","1419077","1419086","1419091","1419112","1419115","1419173","1419197","1419334","1419352","1419595","1419598","1419612","1419713","1419720","1419807","1419864","1419874","1419923","1419924","1419942","1419949","1420092","1420288","1420364","1420365","1420496","1420544","1420653","1420700","1420767","1420781","1420787","1420792","1420795","1420796","1420863","1420896","1420929","1420931","1421001","1421011","1421021","1421026","1421107","1421386","1421523","1421628","1422105","1422636","1422712","1422721","1423286","1423469","1423633","1423932","1424003","1424005","1424377","1425433","1425899","1427043","1427659","1427821","1428059","1430280","1430287","1430515","1431222","1431925","1432545","1432783","1432786","1432824","1433158","1433176","1433496","1434011","1434232","1434249","1434258","1434267","1434320","1434326","1434383","1434584","1434594","1434712","1435225","1435228","1435260","1435709","1435714","1436922","1436923","1437724","1438033","1438041","1438043","1438045","1438049","1438052","1438056","1438352","1438354","1438358","1438616","1438868","1439145","1439703","1440273","1440412","1440416","1440423","1440425","1440440","1440446","1440476","1441099","1441349","1441375","1441410","1442541","1442833","1442865","1442930","1444049","1444156","1444195","1444216","1447962","1449139","1449149","1453004","1455408","1460343","1463177","1464023","1464054","1464075","1464086","1464088","1464459","1464567","1465016","1465026","1465149","1465170","1470435","1486475","1486501","1486655","1488001","1488026","1488171","1488206","1488285","1491513","1494482","1497434","1497630","1497667","1503981","1506976","1513142","1513780","1514035","1514627","1516297","1518683","1522375","1522377","1529081","1529084","1529107","1529124","1529128","1529144","1529148","1529179","1529205","1529212","1529242","1529265","1529305","1529328","1535203","1538569","1542499","1550658","1550692","1550785","1550799","1560405","1567995","1568056","1568102","1568134","1568144","1568799","1568914","1576296","1580985","1584568","1600531","1608001","1608003","1608023","1608027","1608034","1608440","1617292","1617904","1618100","1618570","1618661","1621823","1638998","1643184","1643341","1643349","1643491","1643553","1643690","1643819","1643866","1643887","1644145","1644223","1646149","1662426","1663341","1663381","1664348","1667445","1675513","1682159","1689963","1694631","1697960","1697991","1698065","1711751","1711753","1711775","1711787","1711873","1712003","1712019","1712365","1713198","1713199","1717570","1718287"],Xd={1355868:"Lactuca virosa L.",1355920:"Pelargonium capitatum (L.) L'Hér.",1355932:"Pelargonium graveolens L'Hér.",1355936:"Cirsium arvense (L.) Scop.",1355937:"Cirsium vulgare (Savi) Ten.",1355955:"Pelargonium odoratissimum (L.) L'Hér.",1355959:"Pelargonium peltatum (L.) L'Hér.",1355961:"Pelargonium quercifolium (L. f.) L'Hér.",1355978:"Pelargonium zonale (L.) L'Hér.",1355990:"Mercurialis annua L.",1356003:"Phyllanthus tenellus Roxb.",1356022:"Hypericum perforatum L.",1356037:"Egeria densa Planch.",1356055:"Ibicella lutea (Lindl.) Van Eselt.",1356075:"Tradescantia fluminensis Vell.",1356076:"Tradescantia zebrina Heynh. ex Bosse",1356111:"Lamium amplexicaule L.",1356126:"Lavandula dentata L.",1356138:"Striga asiatica (L.) Kuntze",1356257:"Melilotus albus Medik.",1356278:"Trifolium fragiferum L.",1356279:"Asystasia gangetica (L.) T. Anderson",1356309:"Nymphaea nouchali Burm. f.",1356379:"Dryopteris aemula (Aiton) Kuntze",1356380:"Dryopteris affinis (Lowe) Fraser-Jenk.",1356382:"Dryopteris filix-mas (L.) Schott",1356420:"Nephrolepis cordifolia (L.) C. Presl",1356421:"Nephrolepis exaltata (L.) Schott",1356428:"Osmunda regalis L.",1356469:"Achyranthes aspera L.",1356692:"Lithodora fruticosa (L.) Griseb.",1356781:"Humulus lupulus L.",1356816:"Vaccaria hispanica (Mill.) Rauschert",1356847:"Spergularia rubra (L.) J. Presl & C. Presl",1356901:"Moehringia trinervia (L.) Clairv.",1357330:"Calendula officinalis L.",1357331:"Calendula stellata Cav.",1357367:"Carthamus caeruleus L.",1357379:"Carthamus lanatus L.",1357506:"Cirsium monspessulanum (L.) Hill",1357635:"Helminthotheca echioides (L.) Holub",1357652:"Hyoseris radiata L.",1357677:"Lactuca muralis (L.) Gaertn.",1357681:"Lactuca saligna L.",1357682:"Lactuca tenerrima Pourr.",1357705:"Limbarda crithmoides (L.) Dumort.",1358094:"Sedum acre L.",1358095:"Sedum album L.",1358096:"Sedum amplexicaule DC.",1358097:"Sedum andegavense (DC.) Desv.",1358099:"Sedum brevifolium DC.",1358101:"Sedum caeruleum L.",1358102:"Sedum caespitosum (Cav.) DC.",1358103:"Sedum cepaea L.",1358105:"Sedum dasyphyllum L.",1358108:"Sedum forsterianum Sm.",1358112:"Sedum hirsutum All.",1358119:"Sedum litoreum Guss.",1358127:"Sedum multiceps Coss. & Durieu",1358132:"Sedum rubens L.",1358133:"Sedum sediforme (Jacq.) Pau",1358150:"Alliaria petiolata (M. Bieb.) Cavara & Grande",1358193:"Boscia angustifolia A. Rich.",1358302:"Fibigia clypeata (L.) Medik.",1358365:"Maerua angolensis DC.",1358519:"Acalypha virginica L.",1358605:"Mercurialis perennis L.",1358608:"Phyllanthus reticulatus Poir.",1358689:"Hypericum androsaemum L.",1358690:"Hypericum australe Ten.",1358691:"Hypericum canariense L.",1358695:"Hypericum empetrifolium Willd.",1358699:"Hypericum hircinum L.",1358700:"Hypericum hirsutum L.",1358701:"Hypericum humifusum L.",1358703:"Hypericum linariifolium Vahl",1358704:"Hypericum montanum L.",1358706:"Hypericum perfoliatum L.",1358710:"Hypericum tetrapterum Fr.",1358711:"Hypericum tomentosum L.",1358748:"Lamium bifidum Cirillo",1358749:"Lamium flexuosum Ten.",1358750:"Lamium garganicum L.",1358751:"Lamium hybridum Vill.",1358752:"Lamium purpureum L.",1358755:"Lavandula canariensis Mill.",1358759:"Lavandula minutolii Bolle",1358760:"Lavandula multifida L.",1358766:"Lavandula stoechas L.",1359060:"Acacia mellifera (Vahl) Benth.",1359064:"Acacia seyal Delile",1359065:"Acacia tortilis (Forssk.) Hayne",1359197:"Galega officinalis L.",1359331:"Lupinus cosentinii Guss.",1359332:"Lupinus micranthus Guss.",1359359:"Melilotus italicus (L.) Lam.",1359364:"Melilotus sulcatus Desf.",1359483:"Trifolium angustifolium L.",1359485:"Trifolium arvense L.",1359486:"Trifolium aureum Pollich",1359488:"Trifolium campestre Schreb.",1359489:"Trifolium cherleri L.",1359495:"Trifolium hirtum All.",1359497:"Trifolium hybridum L.",1359498:"Trifolium incarnatum L.",1359502:"Trifolium lappaceum L.",1359505:"Trifolium michelianum Savi",1359506:"Trifolium micranthum Viv.",1359508:"Trifolium montanum L.",1359510:"Trifolium ochroleucon Huds.",1359513:"Trifolium pannonicum Jacq.",1359514:"Trifolium patens Schreb.",1359517:"Trifolium pratense L.",1359518:"Trifolium purpureum Loisel.",1359519:"Trifolium resupinatum L.",1359521:"Trifolium scabrum L.",1359523:"Trifolium spumosum L.",1359524:"Trifolium squamosum L.",1359525:"Trifolium stellatum L.",1359526:"Trifolium striatum L.",1359528:"Trifolium subterraneum L.",1359530:"Trifolium tomentosum L.",1359616:"Punica granatum L.",1359620:"Alcea rosea L.",1359622:"Althaea cannabina L.",1359625:"Althaea officinalis L.",1359669:"Nymphaea alba L.",1359806:"Hunnemannia fumariifolia Sweet",1359815:"Papaver atlanticum (Ball) Coss.",1359821:"Papaver rupifragum Boiss. & Reut.",1360004:"Goniolimon tataricum (L.) Boiss.",1360147:"Adonis aestivalis L.",1360148:"Adonis annua L.",1360150:"Adonis flammea Jacq.",1360152:"Adonis microcarpa DC.",1360153:"Anemone coronaria L.",1360154:"Anemone palmata L.",1360427:"Oldenlandia corymbosa L.",1360550:"Hyoscyamus albus L.",1360555:"Hyoscyamus niger L.",1360588:"Daphne gnidium L.",1360590:"Daphne laureola L.",1360591:"Daphne oleoides Schreb.",1360618:"Berula erecta (Huds.) Coville",1360671:"Chaerophyllum temulum L.",1360687:"Daucus muricatus (L.) L.",1360759:"Meum athamanticum Jacq.",1360808:"Thapsia garganica L.",1360811:"Thapsia villosa L.",1360835:"Centranthus calcitrapae (L.) Dufr.",1360838:"Fedia cornucopiae (L.) Gaertn.",1360976:"Pancratium canariense Ker Gawl.",1360978:"Pancratium maritimum L.",1360998:"Anthericum liliago L.",1361024:"Butomus umbellatus L.",1361233:"Danthonia decumbens (L.) DC.",1361316:"Leersia oryzoides (L.) Sw.",1361357:"Phalaris coerulescens Desf.",1361507:"Oncostema elongata (Parl.) Speta",1361508:"Oncostema peruviana (L.) Speta",1361524:"Elodea canadensis Michx.",1361655:"Neotinea maculata (Desf.) Stearn",1361656:"Ophrys apifera Huds.",1361658:"Ophrys bombyliflora Link",1361660:"Ophrys fusca Link",1361663:"Ophrys lutea Cav.",1361666:"Ophrys scolopax Cav.",1361668:"Ophrys speculum Link",1361672:"Ophrys tenthredinifera Willd.",1361704:"Groenlandia densa (L.) Fourr.",1361745:"Myosoton aquaticum (L.) Moench",1361759:"Cirsium palustre (L.) Scop.",1361823:"Lamium galeobdolon (L.) L.",1361824:"Lavandula angustifolia Mill.",1361847:"Casuarina cunninghamiana Miq.",1361850:"Trifolium rubens L.",1361891:"Falcaria vulgaris Bernh.",1362024:"Hypericum triquetrifolium Turra",1362064:"Wigandia caracasana Kunth",1362080:"Nymphaea lotus L.",1362192:"Sedum villosum L.",1362294:"Epipactis helleborine (L.) Crantz",1362385:"Thesium humifusum DC.",1362398:"Acacia etbaica Schweinf.",1362434:"Centranthus angustifolius (Mill.) DC.",1362435:"Centranthus lecoqii Jord.",1362489:"Sedum anglicum Huds.",1362490:"Sedum rupestre L.",1362516:"Ophrys insectifera L.",1362582:"Freesia refracta (Jacq.) Klatt",1362834:"Diatelia tuberaria (L.) Demoly",1362927:"Tradescantia pallida (Rose) D.R. Hunt",1362928:"Cenchrus longispinus (Hack.) Fernald",1362954:"Schefflera actinophylla (Endl.) Harms",1363016:"Cenchrus clandestinus (Hochst. ex Chiov.) Morrone",1363019:"Cenchrus purpureus (Schumach.) Morrone",1363021:"Cenchrus setaceus (Forssk.) Morrone",1363110:"Anemone hortensis L.",1363117:"Tradescantia cerinthoides Kunth",1363126:"Papaver argemone L.",1363127:"Papaver hybridum L.",1363128:"Papaver rhoeas L.",1363129:"Papaver dubium L.",1363130:"Papaver somniferum L.",1363227:"Daucus carota L.",1363336:"Smilax aspera L.",1363343:"Aizoon canariense L.",1363359:"Zannichellia palustris L.",1363451:"Secale cereale L.",1363463:"Cenchrus ciliaris L.",1363464:"Cenchrus echinatus L.",1363489:"Phalaris aquatica L.",1363490:"Phalaris arundinacea L.",1363491:"Phalaris canariensis L.",1363492:"Phalaris minor Retz.",1363493:"Phalaris paradoxa L.",1363613:"Sedum hispanicum L.",1363688:"Crotalaria juncea L.",1363699:"Lupinus angustifolius L.",1363700:"Lupinus luteus L.",1363701:"Lupinus pilosus L.",1363703:"Lupinus albus L.",1363735:"Trifolium alexandrinum L.",1363737:"Trifolium dubium Sibth.",1363738:"Trifolium glomeratum L.",1363739:"Trifolium nigrescens Viv.",1363740:"Trifolium repens L.",1363743:"Dalbergia melanoxylon Guill. & Perr.",1363749:"Melilotus indicus (L.) All.",1363750:"Melilotus officinalis (L.) Pall.",1363764:"Acacia dealbata Link",1363769:"Acacia longifolia (Andrews) Willd.",1363770:"Acacia mearnsii De Wild.",1363772:"Acacia pycnantha Benth.",1363778:"Acacia retinodes Schltdl.",1363871:"Barbarea verna (Mill.) Asch.",1363872:"Barbarea intermedia Boreau",1363970:"Myosurus minimus L.",1363991:"Fragaria vesca L.",1364e3:"Duchesnea indica (Jacks.) Focke",1364099:"Centranthus ruber (L.) DC.",1364112:"Guizotia abyssinica (L. f.) Cass.",1364158:"Tagetes minuta L.",1364159:"Tagetes patula L.",1364161:"Calendula arvensis (Vaill.) L.",1364164:"Lapsana communis L.",1364165:"Carthamus tinctorius L.",1364172:"Lactuca sativa L.",1364173:"Lactuca serriola L.",1364440:"Arthraxon hispidus (Thunb.) Makino",1364512:"Microchloa kunthii Desv.",1365712:"Harpachne schimperi Hochst. ex A. Rich.",1365961:"Cedrela odorata L.",1366875:"Aeschynomene americana L.",1366898:"Prosopis alba Griseb.",1366899:"Prosopis juliflora (Sw.) DC.",1366997:"Crotalaria spectabilis Roth",1367060:"Crotalaria chrysochlora Baker f. ex Harms",1367087:"Crotalaria deflersii Schweinf.",1367267:"Crotalaria polysperma Kotschy",1367343:"Crotalaria uguenensis Taub.",1367369:"Crotalaria verrucosa L.",1367431:"Lupinus perennis L.",1367432:"Lupinus polyphyllus Lindl.",1367781:"Dalbergia latifolia Roxb.",1367784:"Cordyla africana Lour.",1367921:"Acacia xanthophloea Benth.",1367938:"Acacia drepanolobium Harms ex Y. Sjöstedt",1367949:"Acacia hockii De Wild.",1367998:"Acacia angustissima (Mill.) Kuntze",1369472:"Gomphocarpus integer (N.E. Br.) Bullock",1369887:"Trachelospermum jasminoides (Lindl.) Lem.",1369960:"Tradescantia spathacea Sw.",1370279:"Gymnosporia putterlickioides Loes.",1370991:"Conostomium kenyense Bremek.",1370993:"Conostomium quadrangulare (Rendle) Cufod.",1371680:"Mussaenda frondosa L.",1371691:"Mussaenda erythrophylla Schumach. & Thonn.",1372016:"Morinda citrifolia L.",1372602:"Pilocarpus racemosus Vahl",1373151:"Pelargonium alchemilloides (L.) L'Hér.",1373231:"Pelargonium quinquelobatum Hochst. ex A. Rich.",1373259:"Pelargonium glechomoides A. Rich.",1373530:"Gynura aurantiaca (Blume) DC.",1373535:"Gynura procumbens (Lour.) Merr.",1374048:"Tagetes erecta L.",1374448:"Aspilia mossambicensis (Oliv.) Wild",1374450:"Aspilia pluriseta Schweinf.",1374466:"Schkuhria pinnata (Lam.) Thell.",1374933:"Montanoa hibiscifolia Benth.",1375776:"Acalypha crenata Hochst. ex A. Rich.",1375797:"Acalypha hispida Burm. f.",1375895:"Phyllanthus fischeri Pax",1375954:"Phyllanthus suffrutescens Pax",1375965:"Phyllanthus acidus (L.) Skeels",1375966:"Phyllanthus amarus Schumach. & Thonn.",1376366:"Triadica sebifera (L.) Small",1376703:"Petiveria alliacea L.",1376726:"Peperomia pellucida (L.) Kunth",1379303:"Guaiacum officinale L.",1379513:"Hypericum annulatum Moris",1379556:"Mussaenda philippica A. Rich.",1379585:"Wigandia urens (Ruiz & Pav.) Kunth",1380874:"Boscia mossambicensis Klotzsch",1380904:"Boscia coriacea Pax",1381173:"Mecardonia procumbens (Mill.) Small",1381468:"Browallia americana L.",1382099:"Acacia mangium Willd.",1383149:"Casuarina equisetifolia L.",1383772:"Aristea abyssinica Pax",1383774:"Aristea ecklonii Baker",1384199:"Erianthemum dregei (Eckl. & Zeyh.) Tiegh.",1384482:"Cucurbita ficifolia Bouché",1384485:"Cucurbita pepo L.",1384497:"Luffa acutangula (L.) Roxb.",1384499:"Lagenaria siceraria (Molina) Standl.",1384500:"Lagenaria sphaerica (Sond.) Naudin",1384760:"Asystasia riparia Lindau",1385700:"Barringtonia asiatica (L.) Kurz",1385701:"Couroupita guianensis Aubl.",1385749:"Asystasia charmian S. Moore",1385853:"Raphia farinifera (Gaertn.) Hyl.",1385937:"Zamioculcas zamiifolia (Lodd.) Engl.",1387107:"Kniphofia linearifolia Baker",1387284:"Smilax anceps Willd.",1387687:"Vanilla planifolia Andrews",1387727:"Ansellia africana Lindl.",1388905:"Hypericum balearicum L.",1388911:"Ophrys druentica P.Delforge & Viglione",1389016:"Macrosyringion longiflorum (Vohl) Rothm.",1389031:"Pyracantha koidzumii (Hayata) Rehder",1389044:"Lactuca plumieri (L.) Gren. & Godr.",1389078:"Aizoanthemum hispanicum (L.) H.E.K.Hartmann",1389230:"Phedimus aizoon (L.) 't Hart",1389231:"Phedimus spurius (M.Bieb) 't Hart",1389294:"Nephrolepis cordifolia (L.) C.Presl",1389297:"Cereus jamacaru DC.",1389307:"Sedum pachyphyllum Rose",1389308:"Sedum dendroideum Moc. & Sessé ex DC.",1389426:"Liriodendron chinensis (Hemsl.) Sarg.",1389442:"Atocion rupestre (L.) B.Oxelman",1389492:"Tagetes tenuifolia Cav.",1389510:"Aegopodium podagraria L.",1389553:"Acacia melanoxylon R.Br.",1389567:"Acacia saligna (Labill.) H.L.Wendl.",1389628:"Patzkea paniculata (L.) G.H.Loos",1389630:"Perovskia abrotanoides Kar.",1389633:"Ophrys occidentalis (Scappaticci) Scappaticci & M.Demange",1389921:"Erechtites hieraciifolius (L.) Raf. ex DC.",1389966:"Cenchrus longisetus M.C.Johnst.",1390617:"Nothofagus obliqua (Mirb.) Oerst.",1390637:"Calendula arvensis L.",1390956:"Carthamus carduncellus L.",1390957:"Carthamus mitissimus L.",1391110:"Chaerophyllum aureum L.",1391112:"Chaerophyllum hirsutum L.",1391113:"Chaerophyllum villarsii W.D.J.Koch",1391167:"Cirsium alsophilum (Pollini) Greuter",1391184:"Cirsium canum (L.) All.",1391190:"Cirsium dissectum (L.) Hill",1391192:"Cirsium eriophorum (L.) Scop.",1391193:"Cirsium erisithales (Jacq.) Scop.",1391197:"Cirsium ferox (L.) DC.",1391198:"Cirsium filipendulum Lange",1391206:"Cirsium glabrum DC.",1391209:"Cirsium heterophyllum (L.) Hill",1391221:"Cirsium morisianum Rchb.f.",1391226:"Cirsium oleraceum (L.) Scop.",1391235:"Cirsium rivulare (Jacq.) All.",1391250:"Cirsium tuberosum (L.) All.",1391326:"Collomia grandiflora Douglas ex Lindl.",1391483:"Cucurbita maxima Duchesne",1391498:"Cymbalaria aequitriloba (Viv.) A.Chev.",1391499:"Cymbalaria hepaticifolia (Poir.) Wettst.",1391529:"Cytinus hypocistis (L.) L.",1391530:"Cytinus ruber Fritsch",1391648:"Daphne alpina L.",1391649:"Daphne cneorum L.",1391652:"Daphne mezereum L.",1391654:"Daphne striata Tratt.",1391762:"Dorotheanthus bellidiformis (Burm.f.) N.E.Br.",1391797:"Dryas octopetala L.",1391805:"Dryopteris carthusiana (Vill.) H.P.Fuchs",1391807:"Dryopteris cristata (L.) A.Gray",1391809:"Dryopteris dilatata (Hoffm.) A.Gray",1391810:"Dryopteris expansa (C.Presl) Fraser-Jenk. & Jermy",1391821:"Dryopteris villarii (Bellardi) Woyn. ex Schinz & Thell.",1391868:"Empetrum nigrum L.",1391953:"Epipactis atrorubens (Hoffm.) Besser",1391960:"Epipactis leptochila (Godfery) Godfery",1391961:"Epipactis microphylla (Ehrh.) Sw.",1391962:"Epipactis muelleri Godfery",1391963:"Epipactis palustris (L.) Crantz",1391964:"Epipactis phyllanthes G.E.Sm.",1391967:"Epipactis purpurata Sm.",1392093:"Erucastrum gallicum (Willd.) O.E.Schulz",1392094:"Erucastrum incanum (L.) W.D.J.Koch",1392096:"Erucastrum nasturtiifolium (Poir.) O.E.Schulz",1392254:"Fedia graciliflora Fisch. & C.A.Mey.",1392361:"Fragaria moschata Weston",1392365:"Freesia x hybrida L.H.Bailey",1392418:"Galega orientalis Lam.",1392475:"Alliaria petiolata (M.Bieb.) Cavara & Grande",1392601:"Geropogon hybridus (L.) Sch.Bip.",1392653:"Gomphocarpus fruticosus (L.) R.Br.",1392654:"Gomphocarpus physocarpus E.Mey.",1392658:"Guizotia abyssinica (L.f.) Cass.",1392689:"Hebe andersonii (Lindl. & Paxton) Cockayne",1392690:"Hebe brachysiphon Summerh.",1392691:"Hebe ochracea Ashwin",1392695:"Hebe salicifolia (G.Forst.) Pennell",1392730:"Helicodiceros muscivorus (L.f.) Engl.",1392777:"Hippophae rhamnoides L.",1393241:"Hypericum calycinum L.",1393242:"Hypericum coris L.",1393245:"Hypericum elodes L.",1393248:"Hypericum x inodorum Mill.",1393250:"Hypericum maculatum Crantz",1393253:"Hypericum nummularium L.",1393254:"Hypericum pulchrum L.",1393257:"Hypericum richeri Vill.",1393294:"Dierama pulcherrimum (Hook.f.) Baker",1393322:"Iva xanthiifolia Nutt.",1393393:"Kniphofia uvaria (L.) Hook.",1393414:"Lactuca alpina (L.) Benth. & Hook.f.",1393416:"Lactuca macrophylla (Willd.) A.Gray",1393418:"Lactuca viminea (L.) J.Presl & C.Presl",1393423:"Lamium album L.",1393425:"Lamium maculatum (L.) L.",1393449:"Lathraea clandestina L.",1393450:"Lathraea squamaria L.",1393465:"Lavandula x intermedia Emeric ex Loisel.",1393466:"Lavandula latifolia Medik.",1393537:"Limnanthes douglasii R.Br.",1393614:"Liriodendron tulipifera L.",1393654:"Lupinus arboreus Sims",1393656:"Lupinus x regalis Bergmans",1393725:"Maianthemum bifolium (L.) F.W.Schmidt",1393789:"Melilotus altissimus Thuill.",1393792:"Melilotus officinalis (L.) Lam.",1393796:"Melilotus spicatus (Sm.) Breistr.",1393818:"Mercurialis ambigua L.f.",1393823:"Mercurialis tomentosa L.",1393846:"Moehringia ciliata (Scop.) Dalla Torre",1393850:"Moehringia muscosa L.",1393851:"Moehringia pentandra J.Gay",1393933:"Narthecium ossifragum (L.) Huds.",1393945:"Neotinea lactea (Poir.) R.M.Bateman, Pridgeon & M.W.Chase",1393946:"Neotinea ustulata (L.) R.M.Bateman, Pridgeon & M.W.Chase",1393965:"Noccaea caerulescens (J.Presl & C.Presl) F.K.Mey.",1393967:"Noccaea montana (L.) F.K.Mey.",1393968:"Noccaea rotundifolia (L.) Moench",1393980:"Nymphaea candida C.Presl",1393981:"Nymphoides peltata (S.G.Gmel.) Kuntze",1394072:"Ophrys arachnitiformis Gren. & M.Philippe",1394073:"Ophrys aranifera Huds.",1394077:"Ophrys aveyronensis (J.J.Wood) P.Delforge",1394078:"Ophrys aymoninii (Breistr.) Buttler",1394082:"Ophrys bertolonii Moretti",1394088:"Ophrys catalaunica O.Danesch & E.Danesch",1394114:"Ophrys exaltata Ten.",1394120:"Ophrys fuciflora (F.W.Schmidt) Moench",1394128:"Ophrys incubacea Bianca",1394143:"Ophrys lupercalis Devillers & Devillers-Tersch.",1394153:"Ophrys morisii (Martelli) Soó",1394164:"Ophrys passionis Sennen",1394169:"Ophrys provincialis (Baumann & Künkele) Paulus",1394183:"Ophrys saratoi E.G.Camus",1394189:"Ophrys sulcata Devillers & Devillers-Tersch.",1394313:"Oreopteris limbosperma (Bellardi ex All.) Holub",1394378:"Anemone x hybrida Paxton",1394382:"Anemone alpina L.",1394383:"Pancratium illyricum L.",1394394:"Anemone apennina L.",1394396:"Anemone baldensis L.",1394399:"Papaver alpinum L.",1394401:"Papaver croceum Ledeb.",1394404:"Papaver orientale L.",1394405:"Papaver pseudoorientale (Fedde) Medw.",1394406:"Papaver rhaeticum Leresche",1394418:"Anemone halleri All.",1394420:"Anemone hepatica L.",1394453:"Pelargonium x hybridum (L.) Aiton",1394454:"Pelargonium inquinans (L.) Aiton",1394455:"Pelargonium peltatum (L.) Aiton",1394457:"Anemone montana Hoppe",1394460:"Anemone nemorosa L.",1394489:"Anemone pulsatilla L.",1394498:"Anemone rubra Lam.",1394502:"Phedimus stellatus (L.) Raf.",1394504:"Anemone sylvestris L.",1394508:"Anemone trifolia L.",1394513:"Anemone vernalis L.",1394549:"Angelica heterocarpa J.Lloyd",1394580:"Angelica razulii Gouan",1394591:"Angelica sylvestris L.",1394648:"Pleurospermum austriacum (L.) Hoffm.",1394714:"Sasa palmata (Burb.) Camus",1394759:"Anthericum ramosum L.",1394994:"Pyracantha coccinea M.Roem.",1394995:"Pyracantha rogersiana (A.B.Jacks.) Coltm.-Rog.",1395391:"Holodiscus discolor (Pursh) Maxim.",1395720:"Sagittaria graminea Michx.",1395721:"Sagittaria latifolia Willd.",1395722:"Sagittaria sagittifolia L.",1396133:"Diascia rigescens E.Mey. ex Benth.",1396134:"Diascia vigilis Hilliard & Burtt",1396143:"Sedum sarmentosum Bunge",1396144:"Sedum alpestre Vill.",1396145:"Sedum annuum L.",1396156:"Sedum kamtschaticum Fisch. & C.A.Mey.",1396159:"Sedum mexicanum Britton",1396161:"Sedum ochroleucum Chaix",1396165:"Sedum sexangulare L.",1396708:"Metasequoia glyptostroboides Hu & W.C.Cheng",1396713:"Telekia speciosa (Schreb.) Baumg.",1396754:"Thesium alpinum L.",1396758:"Thesium linophyllon L.",1396823:"Tradescantia x andersoniana F.Ludw. & Rohweder",1396824:"Tradescantia virginiana L.",1396842:"Trifolium alpestre L.",1396843:"Trifolium alpinum L.",1396858:"Trifolium pallescens Schreb.",1396867:"Trifolium spadiceum L.",1396869:"Trifolium thalii Vill.",1397208:"Viscaria alpina (L.) G.Don",1397209:"Viscaria vulgaris Bernh.",1397268:"Anemone hupehensis (Lemoine) Lemoine",1397269:"Anemone vitifolia Buch.-Ham. ex DC.",1397303:"Adenostyles alpina (L.) Bluff & Fingerh.",1397305:"Alcea biennis Winterl",1397311:"Anemone narcissiflora L.",1397312:"Anemone ranunculoides L.",1397313:"Angelica archangelica L.",1397349:"Chaerophyllum bulbosum L.",1397351:"Cirsium acaulon (L.) Scop.",1397352:"Cirsium spinosissimum (L.) Scop.",1397364:"Cymbalaria muralis P.Gaertn., B.Mey. & Scherb.",1397379:"Eritrichium nanum (L.) Schrad. ex Gaudin",1397387:"Fragaria viridis Weston",1397403:"Honckenya peploides (L.) Ehrh.",1397407:"Hypericum hyssopifolium Chaix",1397408:"Hypericum mutilum L.",1397420:"Lactuca perennis L.",1397491:"Sedum atratum L.",1397510:"Thesium pyrenaicum Pourr.",1397514:"Trifolium medium L.",1397515:"Trinia glauca (L.) Dumort.",1397550:"Sedum montanum Perrier & Songeon",1397551:"Trifolium badium Schreb.",1397556:"Freesia refracta (Jacq.) Eckl. ex Klatt",1397585:"Freesia alba (G.L.Mey.) Grumbleton",1397598:"Cobaea scandens Cav.",1397613:"Fragaria virginiana Duchesne",1397841:"Anemone pratensis L.",1397959:"Sagittaria lancifolia L.",1398041:"Neotinea tridentata (Scop.) R.M.Bateman, Pridgeon & M.W.Chase",1398111:"Adenostyles alliariae (Gouan) A.Kern.",1398125:"Ophrys pseudoscolopax (Moggr.) Paulus & Gack",1398128:"Sedum palmeri S.Watson",1398130:"Hypericum olympicum L.",1398178:"Tradescantia zebrina Bosse",1398196:"Dryopteris erythrosora (Eaton) Kuntze",1398274:"Adenostyles leucophylla (Willd.) Rchb.",1398326:"Calycanthus floridus L.",1398333:"Phyllanthus niruri L.",1398355:"Ophrys araneola sensu auct.plur.",1398444:"Anemone blanda Schott & Kotschy",1398447:"Aralia elata (Miq.) Seem.",1398469:"Ophrys virescens Philippe",1398480:"Clethra alnifolia L.",1398494:"Corispermum pallasii Steven",1398513:"Hypericum patulum Thunb.",1398515:"Hypericum x hidcoteense Hilling ex Geerinck",1398526:"Lupinus nootkatensis Donn ex Sims",1398567:"Smilax rotundifolia L.",1398592:"Perovskia atriplicifolia Benth.",1398608:"Nothofagus antarctica (G.Forst.) Oerst.",1398615:"Iva annua L.",1398700:"Dryopteris fragrans (L.) Schott",1398805:"Neotinea conica (Willd.) R.M.Bateman",1398830:"Tetraclinis articulata (Vahl) Mast.",1399063:"Alcea setosa (Boiss.) Alef.",1399141:"Chaerophyllum aromaticum L.",1399145:"Cucurbita moschata Duchesne",1399157:"Daphne sericea Vahl",1399231:"Lamium orvala L.",1399338:"Paederota bonarota (L.) L.",1399384:"Rhodothamnus chamaecistus (L.) Rchb.",1399667:"Ophrys lunulata Parl.",1399783:"Schefflera actinophylla Harms",1399803:"Astydamia latifolia Baill.",1399804:"Lavandula pinnata Moench",1399920:"Angelica atropurpurea L.",1400060:"Acacia pravissima F.Muell.",1400080:"Adonis pyrenaica DC.",1400081:"Adonis vernalis L.",1400096:"Barbarea rupicola Moris",1400100:"Barbarea vulgaris R.Br.",1400104:"Acacia baileyana F.Muell.",1400110:"Bellium bellidioides L.",1400471:"Bocoa prouacensis Aubl.",1400478:"Nephrolepis biserrata (Sw.) Schott",1400798:"Vanilla pompona Schiede",1400844:"Guatteria anteridifera Scharf & Maas",1401141:"Caraipa densifolia Mart.",1401148:"Caraipa punctulata Ducke",1401211:"Vismia cayennensis (Jacq.) Pers.",1401216:"Vismia macrophylla Kunth",1401222:"Vismia sessilifolia (Aubl.) Choisy",1401242:"Dryopteris wallichiana (Spreng.) Hyl.",1401701:"Xylopia frutescens Aubl.",1401711:"Xylopia nitida Dunal",1401718:"Xylopia sericea A.St.-Hil.",1401735:"Phyllanthus urinaria L.",1401736:"Pogonophora schomburgkiana Miers ex Benth.",1401737:"Sagotia racemosa Baill.",1401883:"Bonafousia undulata (Vahl) A.DC.",1402303:"Guarea gomma Pulle",1402356:"Nymphoides indica (L.) Kuntze",1402423:"Anthurium hookeri Kunth",1402433:"Anthurium jenmanii Engl.",1402464:"Anthurium scandens (Aubl.) Engl.",1402576:"Dracontium polyphyllum L.",1402811:"Crotalaria retusa L.",1402920:"Peperomia magnoliifolia (Jacq.) A.Dietr.",1402921:"Peperomia obtusifolia (L.) A.Dietr.",1402924:"Peperomia quadrangularis (J.V.Thomps.) A.Dietr.",1402925:"Peperomia rotundifolia (L.) Kunth",1402926:"Peperomia serpens (Sw.) Loudon",1403272:"Declieuxia fruticosa (Willd. ex Roem. & Schult.) Kuntze",1403479:"Mauritia flexuosa L.f.",1403654:"Urera baccifera (L.) Gaudich. ex Wedd.",1403826:"Pereskia bleo (Kunth) DC.",1403967:"Cereus hexagonus (L.) Mill.",1404002:"Xylopia crinita R.E.Fr.",1404481:"Vanilla planifolia Jacks.",1404745:"Aciotis rubricaulis (Mart. ex DC.) Triana",1404776:"Guatteria amplifolia Triana & Planch.",1404804:"Luffa cylindrica (L.) M.Roem.",1405061:"Cryptostegia madagascariensis Bojer ex Decne.",1405088:"Schefflera decaphylla (Seem.) Harms",1405252:"Aphelandra scabra (Vahl) Sm.",1405641:"Asystasia gangetica (L.) T.Anderson",1405653:"Piriqueta cistoides (L.) Griseb.",1405685:"Acalypha wilkesiana Müll.Arg.",1405686:"Breynia disticha J.R.Forst. & G.Forst.",1405703:"Crotalaria incana L.",1406426:"Crotalaria pallida Aiton",1406486:"Kigelia africana (Lam.) Benth.",1406756:"Guatteria citriodora Ducke",1406863:"Acalypha indica L.",1407077:"Guatteria punctata (Aubl.) R.A.Howard",1407379:"Anthurium crystallinum Linden & André",1407873:"Cryptopus elatus (Thouars) Lindl.",1407874:"Cryptostegia grandiflora R.Br.",1408034:"Eranthemum pulchellum Andrews",1408037:"Alocasia cucullata (Lour.) G.Don",1408041:"Alocasia longiloba Miq.",1408045:"Alocasia macrorrhizos (L.) G.Don",1408066:"Faujasia salicifolia (Pers.) C.Jeffrey",1408071:"Fernelia buxifolia Lam.",1408092:"Fragaria x ananassa Duchesne ex Rozier",1408107:"Geniostoma borbonicum (Lam.) Spreng.",1408160:"Hernandia mascarenensis (Meisn.) Kubitzki",1408214:"Hypericum lanceolatum Lam.",1408227:"Acacia auriculiformis A.Cunn. ex Benth.",1408284:"Leonitis nepetifolia (L.) R.Br.",1408386:"Mussaenda arcuata Poir.",1408401:"Nephrolepis abrupta (Bory) Mett.",1408421:"Acacia heterophylla (Lam.) Willd.",1408451:"Paederia foetida L.",1408468:"Pelargonium x asperum Ehrh. ex Willd.",1408490:"Pereskia grandifolia Haw.",1408502:"Antirhea borbonica J.F.Gmel.",1408507:"Phyllanthus emblica L.",1408508:"Phyllanthus niruroides Müll.Arg.",1408509:"Phyllanthus phillyreifolius Poir.",1408557:"Pongamia pinnata (L.) Pierre",1408594:"Acacia podalyriifolia A.Cunn. ex G.Don",1408657:"Schefflera actinophylla (F.Muell.) Harms",1408688:"Acalypha hispida Burm.f.",1408718:"Acalypha integrifolia Willd.",1408727:"Stemodia verticillata (Mill.) Hassl.",1408734:"Stoebe passerinoides (Lam.) Willd.",1408738:"Strongylodon macrobotrys A.Gray",1408774:"Tradescantia pallida (Rose) D.R.Hunt",1408788:"Trimezia martinicensis (Jacq.) Herb.",1408810:"Vangueria madagascariensis J.F.Gmel.",1408812:"Vepris lanceolata (Lam.) G.Don",1408845:"Zaleya pentandra (L.) C.Jeffrey",1408869:"Cereus repandus (L.) Mill.",1408874:"Bismarckia nobilis Hildebr. & H.Wendl.",1408953:"Acacia nilotica (L.) Delile",1408961:"Schefflera arboricola (Hayata) Merr.",1408979:"Fragaria chiloensis (L.) Mill.",1409185:"Aphelandra squarrosa Nees",1409191:"Gynura aurantiaca (Blume) Sch.Bip. ex DC.",1409195:"Pereskia aculeata Mill.",1409214:"Peperomia argyreia (Miq.) E.Morren",1409215:"Peperomia caperata Yunck.",1409216:"Peperomia obtusifolia (L.) A. Dietr.",1409238:"Anthurium andraeanum Linden ex André",1409239:"Anthurium scherzerianum Schott",1409283:"Zamia furfuracea L.f.",1409292:"Dendrobium nobile Lindl.",1409295:"Nandina domestica Thunb.",1409296:"Nymphaea nouchali Burm.f.",1409299:"Falcataria moluccana (Miq.) Barneby & J.W.Grimes",1409328:"Acacia tortuosa (L.) Willd.",1409407:"Bourreria succulenta Jacq.",1409521:"Crotalaria brevidens Benth.",1409525:"Crotalaria pumila Ortega",1409550:"Dendrobium chrysotoxum Lindl.",1409551:"Dendrobium crumenatum Sw.",1409552:"Dendrobium moschatum (Buch.-Ham.) Sw.",1409586:"Entada gigas (L.) Fawc. & Rendle",1409642:"Fittonia albivenis (Lindl. ex Veitch) R.K. Brummitt",1409705:"Illicium verum Hook.f.",1409746:"Lactuca floridana (L.) Gaertn.",1409824:"Mussaenda pubescens Dryand.",1409834:"Neolamarckia cadamba (Roxb.) Bosser",1409839:"Nymphaea ampla (Salisb.) DC.",1409918:"Phyllanthus epiphyllanthus L.",1409919:"Phyllanthus mimosoides Sw.",1409932:"Pilosocereus royeni (L.) Byles & G. Rowley",1410024:"Selenicereus anthonyanus (Alexander) D.Hunt",1410025:"Selenicereus grandiflorus (L.) Britton & Rose",1410147:"Zamia pumila L.",1410168:"Acalypha aristata Kunth",1411423:"Chamerion latifolium (L.) Holub",1411462:"Cirsium discolor (Muhl. ex Willd.) Spreng.",1411466:"Cirsium foliosum (Hook.) DC.",1411469:"Cirsium muticum Michx.",1411472:"Cirsium undulatum (Nutt.) Spreng.",1411520:"Comptonia peregrina (L.) J.M. Coult.",1411524:"Conoclinium coelestinum (L.) DC.",1411687:"Dalea purpurea Vent.",1411700:"Daucus pusillus Michx.",1411760:"Diervilla lonicera Mill.",1411827:"Dryopteris carthusiana (Vill.) H.P. Fuchs",1411829:"Dryopteris cristata (L.) A. Gray",1411832:"Dryopteris intermedia (Muhl. ex Willd.) A. Gray",1411833:"Dryopteris marginalis (L.) A. Gray",1411834:"Duchesnea indica (Andrews) Teschem.",1411925:"Epipactis gigantea Douglas ex Hook.",1412311:"Hypericum kalmianum L.",1412313:"Hypericum prolificum L.",1412314:"Hypericum punctatum Lam.",1412337:"Anemone canadensis L.",1412344:"Iva frutescens L.",1412368:"Anemone multifida Poir.",1412410:"Anemone virginiana L.",1412412:"Lactuca biennis (Moench) Fernald",1412413:"Lactuca canadensis L.",1412418:"Lamium maculatum L.",1412444:"Leersia virginica Willd.",1412445:"Angelica lucida L.",1412595:"Lupinus argenteus Pursh",1412596:"Lupinus bicolor Lindl.",1412659:"Maianthemum canadense Desf.",1412661:"Maianthemum racemosum (L.) Link",1412662:"Maianthemum stellatum (L.) Link",1412663:"Maianthemum trifolium (L.) Sloboda",1412697:"Mertensia maritima (L.) Gray",1412698:"Mertensia paniculata (Aiton) G. Don",1412699:"Mertensia virginica (L.) Pers. ex Link",1412740:"Mitella diphylla L.",1412745:"Moehringia lateriflora (L.) Fenzl",1412831:"Nymphaea mexicana Zucc.",1412833:"Nymphaea odorata Aiton",1412834:"Nymphaea tetragona Georgi",1412888:"Osmunda cinnamomea L.",1412889:"Osmunda claytoniana L.",1412946:"Papaver nudicaule L.",1412992:"Aralia hispida Vent.",1413002:"Aralia nudicaulis L.",1413013:"Aralia racemosa L.",1413391:"Pyracantha coccinea M. Roem.",1413751:"Sedum divergens S. Watson",1413752:"Sedum lanceolatum Torr.",1413753:"Sedum oreganum Nutt.",1413755:"Sedum spathulifolium Hook.",1413757:"Sedum ternatum Michx.",1413832:"Smilax herbacea L.",1413835:"Smilax tamnoides L.",1414057:"Tradescantia occidentalis (Britton) Smyth",1414058:"Tradescantia ohiensis Raf.",1414272:"Balsamorhiza sagittata (Pursh) Nutt.",1414275:"Barbarea orthoceras Ledeb.",1414276:"Barbarea vulgaris W.T. Aiton",1414397:"Calochortus macrocarpus Douglas",1414746:"Entada phaseoloides (L.) Merr.",1414808:"Cerbera manghas L.",1414903:"Hernandia cordigera Vieill.",1414924:"Acacia simplex (Sparman) Pedley",1415584:"Dubouzetia confusa Guillaumin & Virot",1415593:"Dubouzetia campanulata Pancher ex Brongn. & Gris",1415911:"Acacia spirorbis Labill.",1416420:"Atractocarpus platyxylon (Vieill. ex Pancher & Sebert) Guillaumin",1416509:"Nepenthes vieillardii Hook. f.",1417117:"Dendrobium closterium Rchb.f.",1417506:"Dracophyllum verticillatum Labill.",1417546:"Schefflera spp.",1417900:"Tagetes lucida Cav.",1417916:"Anisocampium niponicum (Mett.) Y.C.Liu, W.L. Chiou & M. Kato",1418033:"Mertensia ciliata (James ex Torr.) G. Don",1418061:"Lithops fulviceps N.E.Br.",1418084:"Lithops karasmontana N.E.Br.",1418102:"Lithops marmorata N.E.Br.",1418140:"Lithops pseudotruncatella N.E.Br.",1418146:"Fittonia albivenis (Lindl. ex Veitch) Brummitt",1418191:"Lithops spp.",1418192:"Cereus hildmannianus K.Schum.",1418295:"Neobuxbaumia polylopha (DC.) Backeb.",1418345:"Calycanthus occidentalis Hook. & Arn.",1418475:"Tradescantia subaspera Ker Gawl.",1418545:"Sedum kamtschaticum Fisch.",1418546:"Sedum lineare Thunb.",1418547:"Sedum morganianum E.Walther",1418563:"Cucurbita foetidissima Kunth",1418576:"Eucryphia cordifolia Cav.",1418653:"Dryopteris cycadina (Franch. & Sav.) C. Chr.",1418655:"Dryopteris erythrosora (D.C. Eaton) Kuntze",1418659:"Dryopteris sieboldii (T. Moore) Kuntze",1418665:"Rumohra adiantiformis (G. Forst.) Ching",1418732:"Oxydendrum arboreum (L.) DC.",1418984:"Lupinus albifrons Benth.",1419077:"Lycoris radiata (L'Hér.) Herb.",1419086:"Garrya elliptica Douglas ex Lindl.",1419091:"Lycoris squamigera Maxim.",1419112:"Pelargonium crispum (P.J. Bergius) L'Hér.",1419115:"Pelargonium x hortorum L.H. Bailey",1419173:"Loropetalum chinense (R. Br.) Oliv.",1419197:"Hypericum frondosum Michx.",1419334:"Liriope muscari (Decne.) L.H.Bailey",1419352:"Limnanthes douglasii R. Br.",1419595:"Nothofagus alpina (Poepp. & Endl.) Oerst.",1419598:"Nothofagus pumilio (Poepp. & Endl.) Krasser",1419612:"Abeliophyllum distichum Nakai",1419713:"Dendrobium aphyllum (Roxb.) C.E.C.Fisch.",1419720:"Dendrobium spp.",1419807:"Vanilla planifolia Jacks. ex Andrews",1419864:"Heteromorpha arborescens (Spreng.) Cham. & Schltdl.",1419874:"Lapageria rosea Ruiz & Pav.",1419923:"Peperomia argyreia (Hook.f.) E.Morren",1419924:"Peperomia dolabriformis Kunth",1419942:"Hebe franciscana (Eastw.) Souster",1419949:"Maurandya barclayana Lindl.",1420092:"Sasa palmata (Burb.) E.G.Camus",1420288:"Anemone patens L.",1420364:"Fragaria virginiana Mill.",1420365:"Fragaria x ananassa (Duchesne ex Weston) Duchesne ex Rozier",1420496:"Mussaenda philippica A.Rich.",1420544:"Limonia acidissima Groff",1420653:"Illicium floridanum J. Ellis",1420700:"Browallia speciosa Hook.",1420767:"Alocasia cuprea K.Koch",1420781:"Alocasia micholitziana Sander",1420787:"Alocasia odora (Lindl.) K.Koch",1420792:"Daphne odora Thunb.",1420795:"Alocasia sanderiana W.Bull",1420796:"Daphne tangutica Maxim.",1420863:"Kniphofia uvaria (L.) Oken",1420896:"Zamia furfuracea L.f. ex Aiton",1420929:"Guaiacum sanctum L.",1420931:"Nepenthes spp.",1421001:"Pelargonium spp.",1421011:"Pancratium maritimum L. L.",1421021:"Sedum palmeri S. Watson",1421026:"Aphelandra sinclairiana Nees",1421107:"Alocasia macrorrhizos (L.) G. Don",1421386:"Acacia confusa Merr.",1421523:"Acacia koaia Hillebr.",1421628:"Nephrolepis falcata (Cav.) C. Chr.",1422105:"Tradescantia zebrina hort. ex Bosse",1422636:"Calodendrum capense (L.f.) Thunb.",1422712:"Pelargonium grandiflorum Willd.",1422721:"Hypericum revolutum Vahl",1423286:"Schkuhria pinnata (Lam.) Kuntze ex Thell.",1423469:"Maytenus boaria Molina",1423633:"Melampodium perfoliatum (Cav.) Kunth",1423932:"Hernandia nymphaeifolia (J.Presl) Kubitzki",1424003:"Mazus pumilus (Burm.f.) Steenis",1424005:"Melampodium divaricatum (Rich.) DC.",1424377:"Breynia vitis-idaea (Burm.f.) C.E.C.Fisch.",1425433:"Prosopis farcta (Banks & Sol.) J.F.Macbr.",1425899:"Acacia farnesiana Willd.",1427043:"Freycinetia cumingiana Gaudich.",1427659:"Crotalaria laburnifolia L.",1427821:"Dalbergia sissoo DC.",1428059:"Dischidia nummularia R.Br.",1430280:"Schefflera heptaphylla (L.) Frodin",1430287:"Schinopsis balansae Engl.",1430515:"Smilax china L.",1431222:"Barringtonia acutangula (L.) Gaertn.",1431925:"Maerua triphylla A. Rich.",1432545:"Asystasia mysorensis (Roth) T.Anderson",1432783:"Lactuca virosa Habl.",1432786:"Calendula arvensis M.Bieb.",1432824:"Herbertia lahue (Molina) Goldblatt",1433158:"Hypericum hypericoides (L.) Crantz",1433176:"Hypericum tetrapetalum Lam.",1433496:"Keckiella cordifolia (Benth.) Straw",1434011:"Liriope muscari (Decne.) L.H. Bailey",1434232:"Lupinus chamissonis Eschsch.",1434249:"Lupinus diffusus Nutt.",1434258:"Lupinus formosus Greene",1434267:"Lupinus hirsutissimus Benth.",1434320:"Lupinus subcarnosus Hook.",1434326:"Lupinus texensis Hook.",1434383:"Lyonothamnus floribundus A. Gray",1434584:"Mazus pumilus (Burm. f.) Steenis",1434594:"Melampodium leucanthum Torr. & A. Gray",1434712:"Metasequoia glyptostroboides Hu & W.C. Cheng",1435225:"Aralia californica S. Watson",1435228:"Nyctaginia capitata Choisy",1435260:"Aralia spinosa L.",1435709:"Pelargonium panduriforme Eckl. & Zeyh.",1435714:"Pelargonium zonale (L.) L'Hér. ex Aiton",1436922:"Prosopis glandulosa Torr.",1436923:"Prosopis pubescens Benth.",1437724:"Sagittaria montevidensis Cham. & Schltdl.",1438033:"Sedum albomarginatum R.T. Clausen",1438041:"Sedum glaucophyllum R.T. Clausen",1438043:"Sedum laxum (Britton) A. Berger",1438045:"Sedum moranense Kunth",1438049:"Sedum niveum Davidson",1438052:"Sedum obtusatum A. Gray",1438056:"Sedum pulchellum Michx.",1438352:"Smilax bona-nox L.",1438354:"Smilax glauca Walter",1438358:"Smilax laurifolia L.",1438616:"Stanleya pinnata (Pursh) Britton",1438868:"Tagetes lemmonii A. Gray",1439145:"Tradescantia crassifolia Cav.",1439703:"Xylococcus bicolor Nutt.",1440273:"Brodiaea elegans Hoover",1440412:"Calochortus eurycarpus S. Watson",1440416:"Calochortus gunnisonii S. Watson",1440423:"Calochortus leichtlinii Hook. f.",1440425:"Calochortus luteus Douglas ex Lindl.",1440440:"Calochortus splendens Douglas ex Benth.",1440446:"Calochortus tolmiei Hook. & Arn.",1440476:"Calylophus hartwegii (Benth.) P.H. Raven",1441099:"Chaerophyllum tainturieri Hook.",1441349:"Cirsium altissimum (L.) Hill",1441375:"Cirsium horridulum Michx.",1441410:"Cirsium texanum Buckley",1442541:"Diervilla sessilifolia Buckley",1442833:"Acacia berlandieri Benth.",1442865:"Elephantopus elatus Bertol.",1442930:"Alocasia cucullata (Lour.) G. Don",1444049:"Acacia redolens Maslin",1444156:"Acacia rigidula Benth.",1444195:"Hackelia velutina (Piper) I.M. Johnst.",1444216:"Haplophyton crooksii (L.D. Benson) L.D. Benson",1447962:"Aextoxicon punctatum Ruiz & Pav.",1449139:"Lithops aucampiae L. Bolus",1449149:"Lithops olivacea L. Bolus",1453004:"Cyrtanthus elatus (Jacq.) Traub",1455408:"Guatteria aeruginosa Standl.",1460343:"Dischidia ovata Benth.",1463177:"Trachelospermum asiaticum (Siebold & Zucc.) Nakai",1464023:"Alocasia baginda Kurniawan & P.C.Boyce",1464054:"Alocasia lauterbachiana (Engl.) A.Hay",1464075:"Alocasia reginula A.Hay",1464086:"Alocasia wentii Engl. & K.Krause",1464088:"Alocasia zebrina Schott ex Van Houtte",1464459:"Anthurium clarinervium Matuda",1464567:"Anthurium faustomirandae Pérez-Farr. & Croat",1465016:"Anthurium salvinii Hemsl.",1465026:"Anthurium schlechtendalii Kunth",1465149:"Anthurium veitchii Mast.",1465170:"Anthurium warocqueanum T.Moore",1470435:"Wodyetia bifurcata A.K.Irvine",1486475:"Cereus forbesii C.F.Först.",1486501:"Cereus uruguayanus R. Kiesling",1486655:"Coryphantha elephantidens (Lem.) Lem.",1488001:"Pilosocereus chrysostele (Vaupel) Byles & G.D.Rowley",1488026:"Pilosocereus pachycladus F. Ritter",1488171:"Selenicereus anthonyanus (Alexander) D.R. Hunt",1488206:"Stenocactus multicostatus (Hildm.) A. Berger ex A.W. Hill",1488285:"Tephrocactus geometricus (A. Cast.) Backeb.",1491513:"Pterocephalus perennis Coult.",1494482:"Maytenus ilicifolia Mart. ex Reissek",1497434:"Cyanotis somaliensis C.B.Clarke",1497630:"Tradescantia × andersoniana W.Ludw. & Rohweder",1497667:"Tradescantia sillamontana Matuda",1503981:"Cirsium palustre (L.) Coss. ex Scop.",1506976:"Erechtites minima (Poir.) DC.",1513142:"Lactuca alpina (L.) A.Gray",1513780:"Leptinella potentillina F.Muell.",1514035:"Leucophyta brownii Cass.",1514627:"Melampodium divaricatum (Rich. ex Rich.) DC.",1516297:"Othonna capensis L.H.Bailey",1518683:"Rhodanthe chlorocephala (Turcz.) Paul G.Wilson",1522375:"Tagetes lemmonii A.Gray",1522377:"Tagetes lunulata Ortega",1529081:"Sedum adolphii Raym.-Hamet",1529084:"Sedum allantoides Rose",1529107:"Sedum burrito Moran",1529124:"Sedum clavatum R.T. Clausen",1529128:"Sedum compressum Rose",1529144:"Sedum cyaneum J. Rudolph",1529148:"Sedum decumbens R.T. Clausen",1529179:"Sedum furfuraceum Moran",1529205:"Sedum hernandezii J. Meyrán",1529212:"Sedum japonicum Siebold ex Miq.",1529242:"Sedum makinoi Maxim.",1529265:"Sedum nussbaumerianum Bitter",1529305:"Sedum praealtum A.DC.",1529328:"Sedum rubrotinctum R.T. Clausen",1535203:"Uncinia rubra Colenso ex Boott",1538569:"Empetrum rubrum Vahl ex Willd.",1542499:"Acalypha macrostachya Jacq.",1550658:"Pelargonium echinatum Curtis",1550692:"Pelargonium × hortorum L.H. Bailey",1550785:"Pelargonium sidoides DC.",1550799:"Pelargonium tomentosum Jacq.",1560405:"Lavandula canariensis (L.) Mill.",1567995:"Acacia auriculiformis Benth.",1568056:"Acacia brevispica Harms",1568102:"Acacia caven (Molina) Molina",1568134:"Acacia cognata Domin",1568144:"Acacia confluens Maiden & Blakeley",1568799:"Acacia podalyriifolia G.Don",1568914:"Acacia saligna (Labill.) Wendl.",1576296:"Dalbergia retusa Hemsl.",1580985:"Lupinus nootkatensis Sims",1584568:"Prosopis pallida (Willd.) Kunth",1600531:"Cedrela fissilis Vell.",1608001:"Nepenthes mirabilis (Lour.) Druce",1608003:"Nepenthes × neglecta Macfarl.",1608023:"Nothofagus betuloides (Mirb.) Oerst.",1608027:"Nothofagus dombeyi (Mirb.) Oerst.",1608034:"Nothofagus nitida (Phil.) Krasser",1608440:"Nymphaea rubra Roxb. ex Andrews",1617292:"Dendrobium anosmum Lindl.",1617904:"Dendrobium kingianum Bidwill ex Lindl.",1618100:"Dendrobium munificum (Finet) Schltr.",1618570:"Dendrobium thyrsiflorum B.S.Williams",1618661:"Dendrobium victoriae-reginae Loher",1621823:"Erycina pusilla (L.) N.H.Williams & M.W.Chase",1638998:"Adlumia fungosa (Aiton) Britton, Sterns & Poggenb.",1643184:"Peperomia albovittata C. DC.",1643341:"Peperomia clusiifolia (Jacq.) Hook.",1643349:"Peperomia columella Rauh & Hutchison",1643491:"Peperomia ferreyrae Yunck.",1643553:"Peperomia graveolens Rauh & Barthlott",1643690:"Peperomia maculosa (L.) Hook.",1643819:"Peperomia pecuniifolia Trel. & Standl.",1643866:"Peperomia polybotrya Kunth",1643887:"Peperomia prostrata B.S. Williams",1644145:"Peperomia tetragona Ruiz & Pav.",1644223:"Peperomia verticillata (L.) A.Dietr.",1646149:"Hebe andersonii (Lindl. & J. Paxton) Cockayne",1662426:"Lomatia ferruginea R. Br.",1663341:"Anemone pavoniana Boiss.",1663381:"Anemone tomentosa (Maxim.) C.Pei",1664348:"Hepatica nobilis Mill.",1667445:"Fragaria × ananassa (Duchesne ex Weston) Duchesne ex Rozier",1675513:"Margaritopsis haematocarpa (Standl.) C.M.Taylor",1682159:"Angostura granulosa (Kallunki) Kallunki",1689963:"Smilax excelsa L.",1694631:"Coussapoa villosa Poepp. & Endl.",1697960:"Cyphostemma cyphopetalum (Fresen.) Desc. ex Wild & R.B.Drumm.",1697991:"Cyphostemma juttae (Dinter & Gilg) Desc.",1698065:"Cyphostemma serpens (Hochst. ex A.Rich.) Desc.",1711751:"Nepenthes alata Blanco",1711753:"Nepenthes truncata Macfarl.",1711775:"Lavandula spp.",1711787:"Cymbalaria muralis P.Gaertn.",1711873:"Aphelandra aurantiaca Lindl.",1712003:"Guatteria dolichopoda Donn. Sm.",1712019:"Stenanona costaricensis R.E. Fr.",1712365:"Schefflera morototoni (Aubl.) Maguire",1713198:"Bourreria andrieuxii (DC.) Hemsl.",1713199:"Bourreria costaricensis (Standl.) A.H. Gentry",1717570:"Alibertia edulis (Rich.) A. Rich.",1718287:"Acacia senegalensis (Houtt.) Roberty"};function g1(e){return e.map(function(t,r){return Math.exp(t)/e.map(function(a){return Math.exp(a)}).reduce(function(a,i){return a+i})})}function y1(e,t){var r=e.data;const[a,i,s,n]=new Array(new Array,new Array,new Array,new Array);for(let g=0;g<r.length;g+=4)a.push(r[g]),i.push(r[g+1]),s.push(r[g+2]),n.push(1);for(let g=0;g<a.length;g++){let w=a[g];w/=255,w-=.485,w/=.229,a[g]=w}for(let g=0;g<i.length;g++){let w=i[g];w/=255,w-=.456,w/=.224,i[g]=w}for(let g=0;g<s.length;g++){let w=s[g];w/=255,w-=.406,w/=.225,s[g]=w}console.log(a);const u=a.concat(i).concat(s);let d,c=u.length;const h=new Float32Array(t[1]*t[2]*t[3]);for(d=0;d<c;d++)h[d]=u[d];return console.log(h),[new Rt("float32",h,t),n]}function es(e){let t=0,r=-9999999;for(let a=0;a<e.length;a++)e[a]>r&&(r=e[a],t=a);return console.log(r),t}async function b1(){Fe.wasm.wasmPaths="wasm/";const e=await Is.create("plantnet-18.onnx");var t=document.getElementById("input-canvas"),r=t.getContext("2d"),a=document.getElementById("input-img");r.drawImage(a,0,0,437,437,0,0,224,224);let i=r.getImageData(0,0,224,224);console.log(i);let[s,n]=y1(i,[1,3,224,224]),u=Array.from(s.data).concat(n);for(let p=0;p<u.length;p++)u[p]*=255;console.log(Uint8ClampedArray.from(u));let d=new ImageData(Uint8ClampedArray.from(u),224,224);r==null||r.putImageData(d,0,0),console.log(s);const c={pixels:s},h=await e.run(c);let m=g1(h.class_idx.data);console.log(m);const g=h.class_idx.data;console.log(`data of result tensor 'c': ${m[es(g)]}...`);let w=m1[es(g)];return console.log(Xd[w]),[Xd[w],m[es(g)]]}function v1(e){let t,r,a,i;const s=e[3].default,n=Qf(s,e,e[2],null);return{c(){t=We("button"),n&&n.c(),this.h()},l(u){t=He(u,"BUTTON",{class:!0});var d=Dt(t);n&&n.l(d),d.forEach(Ye),this.h()},h(){ge(t,"class","lined thick w-full border-green-400 text-4xl sm:text-xl m-0 py-1 svelte-1doq2hy"),Be(t,"animate-pulse",e[1]),Be(t,"primary",e[0]=="primary")},m(u,d){Jt(u,t,d),n&&n.m(t,null),r=!0,a||(i=[Mr(t,"click",e[4]),Mr(t,"mouseover",e[5]),Mr(t,"mouseenter",e[6]),Mr(t,"mouseleave",e[7]),Mr(t,"focus",e[8])],a=!0)},p(u,[d]){n&&n.p&&(!r||d&4)&&Jf(n,s,u,u[2],r?em(s,u[2],d,null):Zf(u[2]),null),(!r||d&2)&&Be(t,"animate-pulse",u[1]),(!r||d&1)&&Be(t,"primary",u[0]=="primary")},i(u){r||(zr(n,u),r=!0)},o(u){Pr(n,u),r=!1},d(u){u&&Ye(t),n&&n.d(u),a=!1,Zd(i)}}}function w1(e,t,r){let{$$slots:a={},$$scope:i}=t,{type:s="secondary"}=t,{loading:n=!1}=t;function u(g){Ha.call(this,e,g)}function d(g){Ha.call(this,e,g)}function c(g){Ha.call(this,e,g)}function h(g){Ha.call(this,e,g)}function m(g){Ha.call(this,e,g)}return e.$$set=g=>{"type"in g&&r(0,s=g.type),"loading"in g&&r(1,n=g.loading),"$$scope"in g&&r(2,i=g.$$scope)},[s,n,i,a,u,d,c,h,m]}class Jr extends ep{constructor(t){super(),tp(this,t,w1,v1,Jd,{type:0,loading:1})}}const Uf=""+new URL("../assets/back.CLKGthFs.svg",import.meta.url).href,Vf=""+new URL("../assets/camera.CEYs9A3T.svg",import.meta.url).href,$1=""+new URL("../assets/circle.DmmQF47_.svg",import.meta.url).href,_1=""+new URL("../assets/flip.CCeEKhN1.svg",import.meta.url).href,x1=""+new URL("../assets/magnifying-glass.DXWU6kUc.svg",import.meta.url).href,Gf=""+new URL("../assets/shuffle.C0OyG-h2.svg",import.meta.url).href,S1=""+new URL("../assets/snap.DUnP3PkQ.mp3",import.meta.url).href,{document:ts}=am;function Qd(e){let t,r;return{c(){t=We("br"),r=Gn("(I probably haven't learned about your plant yet)")},l(a){t=He(a,"BR",{}),r=Fn(a,"(I probably haven't learned about your plant yet)")},m(a,i){Jt(a,t,i),Jt(a,r,i)},d(a){a&&(Ye(t),Ye(r))}}}function C1(e){let t,r=`<img src="${Gf}" class="h-10 sm:h-6 inline pr-4" alt=""/>Load example`;return{c(){t=We("span"),t.innerHTML=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-c11fg5"&&(t.innerHTML=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function E1(e){let t,r=`<img src="${Vf}" class="h-10 sm:h-6 inline pr-4" alt=""/>Use camera`;return{c(){t=We("span"),t.innerHTML=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-1xjuipd"&&(t.innerHTML=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function T1(e){let t,r=`<img src="${Gf}" class="h-10 sm:h-6 inline pr-4" alt=""/>Change image`;return{c(){t=We("span"),t.innerHTML=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-19b4xx6"&&(t.innerHTML=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function k1(e){let t,r=`<img src="${Vf}" class="h-10 sm:h-6 inline pr-4" alt=""/>Use camera`;return{c(){t=We("span"),t.innerHTML=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-1xjuipd"&&(t.innerHTML=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function A1(e){let t,r=`<img src="${x1}" class="h-10 sm:h-6 inline pr-4" alt=""/>Identify`;return{c(){t=We("span"),t.innerHTML=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-1fg7p4h"&&(t.innerHTML=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function I1(e){let t,r="Go to Wikipedia";return{c(){t=We("span"),t.textContent=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-gyz1j2"&&(t.textContent=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function O1(e){let t,r=`<img src="${Uf}" class="h-8 sm:h-6 inline pr-2" alt=""/>Search again`;return{c(){t=We("span"),t.innerHTML=r},l(a){t=He(a,"SPAN",{"data-svelte-h":!0}),Wt(t)!=="svelte-xlri8c"&&(t.innerHTML=r)},m(a,i){Jt(a,t,i)},p:sa,d(a){a&&Ye(t)}}}function R1(e){let t,r,a,i,s,n='<track kind="captions"/>',u,d,c,h,m,g,w,p,_,C,E="Hi, I'm Druid.",S,A,O=`I can help you identify 1081 species of plants using on-device AI,
			and then I find details on Wikipedia for you. I&#39;m learning new
			species all the time. <a href="https://heit.mn/Plant-ID-in-the-browser" class="italic text-green-700">Details and acknowledgements</a>`,R,k,P,W,H,j,be,te,ae,fe,ve,D,ue="",Z,ne,oe,M,X,ie,$e,Ae,ze,et,at,ot,$t,ut,Ge,qe,Ct,Le,Et,$r=`<img src="${Uf}" alt=""/>`,Zt,qt,jt=`<img src="${$1}" alt=""/>`,Kt,zt,Xe=`<img src="${_1}" alt=""/>`,mr,lt,Yt,Qe,Tt,gr,ct,je,yt,_r,st=e[2]<60&&Qd();return oe=new Jr({props:{$$slots:{default:[C1]},$$scope:{ctx:e}}}),oe.$on("click",e[10]),X=new Jr({props:{$$slots:{default:[E1]},$$scope:{ctx:e}}}),X.$on("click",e[7]),et=new Jr({props:{$$slots:{default:[T1]},$$scope:{ctx:e}}}),et.$on("click",e[10]),ot=new Jr({props:{$$slots:{default:[k1]},$$scope:{ctx:e}}}),ot.$on("click",e[7]),ut=new Jr({props:{type:"primary",loading:e[5],$$slots:{default:[A1]},$$scope:{ctx:e}}}),ut.$on("click",e[11]),Tt=new Jr({props:{$$slots:{default:[I1]},$$scope:{ctx:e}}}),Tt.$on("click",e[9]),ct=new Jr({props:{$$slots:{default:[O1]},$$scope:{ctx:e}}}),ct.$on("click",e[12]),{c(){t=We("meta"),r=nt(),a=We("section"),i=We("div"),s=We("video"),s.innerHTML=n,u=nt(),d=We("canvas"),c=nt(),h=We("audio"),g=nt(),w=We("img"),_=nt(),C=We("p"),C.textContent=E,S=nt(),A=We("p"),A.innerHTML=O,R=nt(),k=We("img"),W=nt(),H=We("p"),j=Gn(e[1]),be=nt(),te=We("p"),ae=Gn(e[2]),fe=Gn("% match "),st&&st.c(),ve=nt(),D=We("p"),D.innerHTML=ue,Z=nt(),ne=We("div"),Gr(oe.$$.fragment),M=nt(),Gr(X.$$.fragment),ie=nt(),$e=We("canvas"),Ae=nt(),ze=We("div"),Gr(et.$$.fragment),at=nt(),Gr(ot.$$.fragment),$t=nt(),Gr(ut.$$.fragment),Ge=nt(),qe=We("canvas"),Ct=nt(),Le=We("div"),Et=We("button"),Et.innerHTML=$r,Zt=nt(),qt=We("button"),qt.innerHTML=jt,Kt=nt(),zt=We("button"),zt.innerHTML=Xe,mr=nt(),lt=We("canvas"),Yt=nt(),Qe=We("div"),Gr(Tt.$$.fragment),gr=nt(),Gr(ct.$$.fragment),this.h()},l(Q){const Se=rm("svelte-v38tx7",ts.head);t=He(Se,"META",{name:!0,content:!0}),Se.forEach(Ye),r=it(Q),a=He(Q,"SECTION",{class:!0});var ce=Dt(a);i=He(ce,"DIV",{id:!0,class:!0});var Oe=Dt(i);s=He(Oe,"VIDEO",{class:!0,id:!0,width:!0,height:!0,"data-svelte-h":!0}),Wt(s)!=="svelte-1wq9fm4"&&(s.innerHTML=n),u=it(Oe),d=He(Oe,"CANVAS",{id:!0,class:!0}),Dt(d).forEach(Ye),c=it(Oe),h=He(Oe,"AUDIO",{id:!0,src:!0,preload:!0}),Dt(h).forEach(Ye),g=it(Oe),w=He(Oe,"IMG",{src:!0,alt:!0,class:!0}),_=it(Oe),C=He(Oe,"P",{class:!0,"data-svelte-h":!0}),Wt(C)!=="svelte-192gbzy"&&(C.textContent=E),S=it(Oe),A=He(Oe,"P",{class:!0,"data-svelte-h":!0}),Wt(A)!=="svelte-1ldxxa6"&&(A.innerHTML=O),R=it(Oe),k=He(Oe,"IMG",{src:!0,id:!0,alt:!0,class:!0}),W=it(Oe),H=He(Oe,"P",{class:!0});var Ut=Dt(H);j=Fn(Ut,e[1]),Ut.forEach(Ye),be=it(Oe),te=He(Oe,"P",{class:!0});var er=Dt(te);ae=Fn(er,e[2]),fe=Fn(er,"% match "),st&&st.l(er),er.forEach(Ye),ve=it(Oe),D=He(Oe,"P",{class:!0,id:!0,"data-svelte-h":!0}),Wt(D)!=="svelte-1k2tki7"&&(D.innerHTML=ue),Oe.forEach(Ye),Z=it(ce),ne=He(ce,"DIV",{id:!0,class:!0});var kt=Dt(ne);Fr(oe.$$.fragment,kt),M=it(kt),Fr(X.$$.fragment,kt),ie=it(kt),$e=He(kt,"CANVAS",{id:!0,width:!0,height:!0,class:!0}),Dt($e).forEach(Ye),kt.forEach(Ye),Ae=it(ce),ze=He(ce,"DIV",{id:!0,class:!0});var xt=Dt(ze);Fr(et.$$.fragment,xt),at=it(xt),Fr(ot.$$.fragment,xt),$t=it(xt),Fr(ut.$$.fragment,xt),Ge=it(xt),qe=He(xt,"CANVAS",{id:!0,width:!0,height:!0,class:!0}),Dt(qe).forEach(Ye),xt.forEach(Ye),Ct=it(ce),Le=He(ce,"DIV",{id:!0,class:!0});var le=Dt(Le);Et=He(le,"BUTTON",{class:!0,"data-svelte-h":!0}),Wt(Et)!=="svelte-1bty4r1"&&(Et.innerHTML=$r),Zt=it(le),qt=He(le,"BUTTON",{class:!0,"data-svelte-h":!0}),Wt(qt)!=="svelte-128lds0"&&(qt.innerHTML=jt),Kt=it(le),zt=He(le,"BUTTON",{class:!0,"data-svelte-h":!0}),Wt(zt)!=="svelte-tuyaq2"&&(zt.innerHTML=Xe),mr=it(le),lt=He(le,"CANVAS",{id:!0,width:!0,height:!0,class:!0}),Dt(lt).forEach(Ye),le.forEach(Ye),Yt=it(ce),Qe=He(ce,"DIV",{id:!0,class:!0});var tr=Dt(Qe);Fr(Tt.$$.fragment,tr),gr=it(tr),Fr(ct.$$.fragment,tr),tr.forEach(Ye),ce.forEach(Ye),this.h()},h(){ts.title="Druid Plant ID",ge(t,"name","description"),ge(t,"content","Plant identification tool that runs on device"),ge(s,"class","rounded-xl"),ge(s,"id","webcam"),s.autoplay=!0,s.playsInline=!0,ge(s,"width","640"),ge(s,"height","640"),Be(s,"hidden",!e[3]),ge(d,"id","canvas"),ge(d,"class","hidden"),ge(h,"id","snapSound"),In(h.src,m=S1)||ge(h,"src",m),ge(h,"preload","auto"),In(w.src,p="druid.svg")||ge(w,"src",p),ge(w,"alt",""),ge(w,"class","max-h-[40vh] pt-4 pl-12 floating pb-8 svelte-1gbpuew"),Be(w,"hidden",!e[6]),ge(C,"class","text-2xl font-bold text-center"),Be(C,"hidden",!e[6]),ge(A,"class","text-lg"),Be(A,"hidden",!e[6]),In(k.src,P=e[0])||ge(k,"src",P),ge(k,"id","input-img"),ge(k,"alt","Network input"),ge(k,"class","rounded-xl svelte-1gbpuew"),Be(k,"hidden",e[3]||e[6]),ge(H,"class","text-2xl italic font-semibold text-center"),Be(H,"hidden",e[3]||e[6]),Be(H,"animate-pulse",e[1]=="Thinking... Please wait."),ge(te,"class","text-center font-semibold text-green-600"),Be(te,"hidden",e[2]<1||e[3]||e[6]),Be(te,"text-green-600",e[2]>85),Be(te,"text-amber-600",e[2]<50),ge(D,"class","text-md"),ge(D,"id","species-desc"),Be(D,"hidden",!e[4]),ge(i,"id","image-box"),ge(i,"class","flex flex-col"),ge($e,"id","input-canvas"),ge($e,"width","224"),ge($e,"height","224"),ge($e,"class","hidden svelte-1gbpuew"),ge(ne,"id","button-group"),ge(ne,"class","w-full flex flex-col items-center py-1 px-4"),Be(ne,"hidden",!e[6]),ge(qe,"id","input-canvas"),ge(qe,"width","224"),ge(qe,"height","224"),ge(qe,"class","hidden svelte-1gbpuew"),ge(ze,"id","button-group"),ge(ze,"class","w-full flex flex-col items-center py-1 px-4"),Be(ze,"hidden",e[3]||e[4]||e[6]),ge(Et,"class","w-16 h-16"),ge(qt,"class","w-16 h-16"),ge(zt,"class","w-16 h-16"),ge(lt,"id","input-canvas"),ge(lt,"width","224"),ge(lt,"height","224"),ge(lt,"class","hidden svelte-1gbpuew"),ge(Le,"id","button-group"),ge(Le,"class","w-full flex flex-row items-center py-1 px-4 justify-around"),Be(Le,"hidden",!e[3]||e[6]),ge(Qe,"id","button-group"),ge(Qe,"class","w-full flex flex-col items-center py-1 px-4"),Be(Qe,"hidden",!e[4]),ge(a,"class","flex flex-col items-center place-content-between min-h-[95vh] svelte-1gbpuew")},m(Q,Se){_e(ts.head,t),Jt(Q,r,Se),Jt(Q,a,Se),_e(a,i),_e(i,s),_e(i,u),_e(i,d),_e(i,c),_e(i,h),_e(i,g),_e(i,w),_e(i,_),_e(i,C),_e(i,S),_e(i,A),_e(i,R),_e(i,k),_e(i,W),_e(i,H),_e(H,j),_e(i,be),_e(i,te),_e(te,ae),_e(te,fe),st&&st.m(te,null),_e(i,ve),_e(i,D),_e(a,Z),_e(a,ne),qr(oe,ne,null),_e(ne,M),qr(X,ne,null),_e(ne,ie),_e(ne,$e),_e(a,Ae),_e(a,ze),qr(et,ze,null),_e(ze,at),qr(ot,ze,null),_e(ze,$t),qr(ut,ze,null),_e(ze,Ge),_e(ze,qe),_e(a,Ct),_e(a,Le),_e(Le,Et),_e(Le,Zt),_e(Le,qt),_e(Le,Kt),_e(Le,zt),_e(Le,mr),_e(Le,lt),_e(a,Yt),_e(a,Qe),qr(Tt,Qe,null),_e(Qe,gr),qr(ct,Qe,null),je=!0,yt||(_r=[Mr(Et,"click",e[8]),Mr(qt,"click",e[13]),Mr(zt,"click",e[14])],yt=!0)},p(Q,[Se]){(!je||Se&8)&&Be(s,"hidden",!Q[3]),(!je||Se&64)&&Be(w,"hidden",!Q[6]),(!je||Se&64)&&Be(C,"hidden",!Q[6]),(!je||Se&64)&&Be(A,"hidden",!Q[6]),(!je||Se&1&&!In(k.src,P=Q[0]))&&ge(k,"src",P),(!je||Se&72)&&Be(k,"hidden",Q[3]||Q[6]),(!je||Se&2)&&To(j,Q[1]),(!je||Se&72)&&Be(H,"hidden",Q[3]||Q[6]),(!je||Se&2)&&Be(H,"animate-pulse",Q[1]=="Thinking... Please wait."),(!je||Se&4)&&To(ae,Q[2]),Q[2]<60?st||(st=Qd(),st.c(),st.m(te,null)):st&&(st.d(1),st=null),(!je||Se&76)&&Be(te,"hidden",Q[2]<1||Q[3]||Q[6]),(!je||Se&4)&&Be(te,"text-green-600",Q[2]>85),(!je||Se&4)&&Be(te,"text-amber-600",Q[2]<50),(!je||Se&16)&&Be(D,"hidden",!Q[4]);const ce={};Se&1048576&&(ce.$$scope={dirty:Se,ctx:Q}),oe.$set(ce);const Oe={};Se&1048576&&(Oe.$$scope={dirty:Se,ctx:Q}),X.$set(Oe),(!je||Se&64)&&Be(ne,"hidden",!Q[6]);const Ut={};Se&1048576&&(Ut.$$scope={dirty:Se,ctx:Q}),et.$set(Ut);const er={};Se&1048576&&(er.$$scope={dirty:Se,ctx:Q}),ot.$set(er);const kt={};Se&32&&(kt.loading=Q[5]),Se&1048576&&(kt.$$scope={dirty:Se,ctx:Q}),ut.$set(kt),(!je||Se&88)&&Be(ze,"hidden",Q[3]||Q[4]||Q[6]),(!je||Se&72)&&Be(Le,"hidden",!Q[3]||Q[6]);const xt={};Se&1048576&&(xt.$$scope={dirty:Se,ctx:Q}),Tt.$set(xt);const le={};Se&1048576&&(le.$$scope={dirty:Se,ctx:Q}),ct.$set(le),(!je||Se&16)&&Be(Qe,"hidden",!Q[4])},i(Q){je||(zr(oe.$$.fragment,Q),zr(X.$$.fragment,Q),zr(et.$$.fragment,Q),zr(ot.$$.fragment,Q),zr(ut.$$.fragment,Q),zr(Tt.$$.fragment,Q),zr(ct.$$.fragment,Q),je=!0)},o(Q){Pr(oe.$$.fragment,Q),Pr(X.$$.fragment,Q),Pr(et.$$.fragment,Q),Pr(ot.$$.fragment,Q),Pr(ut.$$.fragment,Q),Pr(Tt.$$.fragment,Q),Pr(ct.$$.fragment,Q),je=!1},d(Q){Q&&(Ye(r),Ye(a)),Ye(t),st&&st.d(),jr(oe),jr(X),jr(et),jr(ot),jr(ut),jr(Tt),jr(ct),yt=!1,Zd(_r)}}}function z1(e){for(var t=atob(e.split(",")[1]),r=e.split(",")[0].split(":")[1].split(";")[0],a=new ArrayBuffer(t.length),i=new Uint8Array(a),s=0;s<t.length;s++)i[s]=t.charCodeAt(s);var n=new Blob([a],{type:r});return n}function P1(e,t,r){let a=["1391963","1355990","1357652","1358105","1359483","1363021","1364165","1385937","1391963","1397613","1497667"],i="",s="Mystery plant",n=0,u=!1,d=!1,c=0,h=!1,m=!0,g;function w(){const k=document.getElementById("webcam"),P=document.getElementById("canvas"),W=document.getElementById("snapSound");g=new Webcam(k,"user",P,W),r(3,u=!0),r(6,m=!1),g.start().then(H=>{console.log("webcam started")}).catch(H=>{console.log(H)}),g.webcamList.length>1}function p(){r(3,u=!1),g.stop()}tm(()=>{const k=document.getElementById("webcam"),P=document.getElementById("canvas"),W=document.getElementById("snapSound");g=new Webcam(k,"user",P,W)});function _(){window.location.href=`http://en.wikipedia.org/wiki?curid=${c}`}function C(){r(6,m=!1),console.log("Choosing random image.");let k=a[Math.floor(Math.random()*a.length)];r(0,i=`plants/${k}.jpg`),r(1,s="Mystery plant"),r(2,n=0),r(4,d=!1)}async function E(){r(1,s="Thinking... Please wait."),r(5,h=!0),r(1,[s,n]=await b1(),s,r(2,n)),r(2,n=Math.floor(n*100)),console.log(`SPECIES PROB: ${n}`);let k=s.split(" "),P=k[0],W=k[1];r(1,s=P+" "+W);let H=await S(s);p(),console.log(H.query);const j=document.getElementById("species-desc");j.innerHTML=H,r(4,d=!0),r(5,h=!1)}async function S(k){const P=`https://en.wikipedia.org/w/api.php?action=query&list=search&prop=info&inprop=url&utf8=&format=json&origin=*&srlimit=20&srsearch=${k}`;let W=await fetch(P);if(!W.ok)throw Error(W.statusText);let H=await W.json();console.log(H.query),c=H.query.search[0].pageid;const j=`https://en.wikipedia.org/w/api.php?format=json&action=query&origin=*&prop=extracts&exintro=1&explaintext=1&pageids=${c}`;if(W=await fetch(j),!W.ok)throw Error(W.statusText);return H=await W.json(),console.log(H),console.log(H.query.pages.length),H.query.pages[c].extract}function A(){r(4,d=!1),console.log("Species details hidden")}async function O(){let k=g.snap();r(0,i=k),console.log(k);let P=z1(k),W=new Uint8Array(await P.arrayBuffer());console.log(W),p(),r(3,u=!1)}function R(){g.flip(),g.start(),console.log("Webcam flipped")}return[i,s,n,u,d,h,m,w,p,_,C,E,A,O,R]}class L1 extends ep{constructor(t){super(),tp(this,t,P1,R1,Jd,{})}}export{L1 as component,D1 as universal};
